 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree24(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)1.0615000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)1.28);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 22, (DAAL_DATA_TYPE)1.0165000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 22, (DAAL_DATA_TYPE)0.78450000000000009);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 13, (DAAL_DATA_TYPE)0.32350000000000007);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.013444396626690162);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 6, (DAAL_DATA_TYPE)1.9065000000000001);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 21, (DAAL_DATA_TYPE)0.78150000000000019);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 14, (DAAL_DATA_TYPE)-0.52049999999999985);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)-0.0062118348290865454);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0038076041164386331);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0074110029348686563);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.012118639051914216);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[4], 1, 27, (DAAL_DATA_TYPE)0.85250000000000015);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 5, (DAAL_DATA_TYPE)0.67850000000000021);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 13, (DAAL_DATA_TYPE)0.9165000000000002);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 6, (DAAL_DATA_TYPE)0.45850000000000007);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.0090418370677666227);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.00079467918942956357);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[16], 1, 23, (DAAL_DATA_TYPE)1.1505000000000003);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 2, (DAAL_DATA_TYPE)-0.38299999999999995);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)-0.0075261220545835899);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.0034713169652046544);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.013178874781498543);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[15], 1, 15, (DAAL_DATA_TYPE)-0.56949999999999978);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)-0.0022093140913380517);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.0026797132910984871);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[14], 1, 24, (DAAL_DATA_TYPE)1.0155000000000001);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 6, (DAAL_DATA_TYPE)-0.43549999999999994);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.013077885198593139);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)-0.0048386144976428503);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[28], 1, 1, (DAAL_DATA_TYPE)0.28150000000000003);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0012112265395805826);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 17, (DAAL_DATA_TYPE)0.98350000000000015);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.011387089218356107);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[34], 1, 24, (DAAL_DATA_TYPE)1.2135000000000002);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.012733709514141085);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.0098428284448962063);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[3], 1, 21, (DAAL_DATA_TYPE)1.0715000000000001);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0042192671865481758);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.00064736516438287125);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[2], 1, 5, (DAAL_DATA_TYPE)1.9180000000000001);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 2, (DAAL_DATA_TYPE)-1.2189999999999996);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.00344121399980325);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 0, (DAAL_DATA_TYPE)1.7305000000000004);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.0076820568190616306);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)-0.0040495045136573708);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.013075132353925238);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[1], 1, 22, (DAAL_DATA_TYPE)1.0465000000000002);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 24, (DAAL_DATA_TYPE)1.1635000000000002);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.010765919717458579);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[50], 1, 3, (DAAL_DATA_TYPE)1.7785000000000002);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 4, (DAAL_DATA_TYPE)0.55850000000000011);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 11, (DAAL_DATA_TYPE)-1.0174999999999998);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.013006418411220825);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.00042335303320038711);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0050839261647234579);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0083687249127598045);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[49], 1, 3, (DAAL_DATA_TYPE)2.4510000000000005);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.00034109572417863457);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.010366068352013827);

}

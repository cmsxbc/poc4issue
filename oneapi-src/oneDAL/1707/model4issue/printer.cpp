 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
#include <iostream>
#include <fstream>

daal::algorithms::gbt::regression::ModelPtr getModel(size_t);

bool dumpModel(daal::algorithms::gbt::regression::ModelPtr model) {
    daal::data_management::Compressor<daal::data_management::lzo> compressor;
    daal::data_management::InputDataArchive cDataArch(&compressor);
    daal::data_management::InputDataArchive dataArch;
    model->serialize(dataArch);
    size_t size = dataArch.getSizeOfArchive();
    std::cout << "without compressor size: " << size << std::endl;
    if (size == 0) {
        std::cout << "errors: " << dataArch.getErrors()->getDescription() << std::endl;
        return false;
    }

    model->serialize(cDataArch);
    size = cDataArch.getSizeOfArchive();
    std::cout << "with compressor size: " << size << std::endl;
    if (size == 0) {
        std::cout << "errors: " << cDataArch.getErrors()->getDescription() << std::endl;
        return false;
    }
    return true;
}


int main(int argc, char *argv[]) {
    for (size_t i = 1; i < 209; i++) {
        auto model = getModel(i);
        std::cout << i << " trees model loaded" << std::endl;
        if (!dumpModel(model)) {
            std::cout << "serialize failed" << std::endl;
        }
    }
    return 0;
}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree117(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 18, (DAAL_DATA_TYPE)2.1345000000000005);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 7, (DAAL_DATA_TYPE)1.3160000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 17, (DAAL_DATA_TYPE)0.37450000000000006);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 21, (DAAL_DATA_TYPE)0.62750000000000006);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)0.012124402076005937);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)-0.0003084022738039494);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[3], 1, 25, (DAAL_DATA_TYPE)0.96550000000000014);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 14, (DAAL_DATA_TYPE)0.078500000000000014);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0009705585823601582);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0010212791767326007);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[7], 1, 15, (DAAL_DATA_TYPE)-1.6534999999999997);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)0.0067609010338783269);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.001389363928743381);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)1.6755000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 26, (DAAL_DATA_TYPE)1.1475000000000002);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 27, (DAAL_DATA_TYPE)0.62050000000000016);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0095982355319640857);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[16], 1, 24, (DAAL_DATA_TYPE)0.71450000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 24, (DAAL_DATA_TYPE)0.5675);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0024850873276591303);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[19], 1, 25, (DAAL_DATA_TYPE)0.72550000000000014);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)0.015308181292587712);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.0042409928993469006);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[18], 1, 1, (DAAL_DATA_TYPE)0.93950000000000011);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 6, (DAAL_DATA_TYPE)-0.5804999999999999);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 25, (DAAL_DATA_TYPE)1.0215000000000003);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 0, (DAAL_DATA_TYPE)0.71650000000000003);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.00022275839000940323);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.0091458213990196022);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.0070787309372628282);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[25], 1, 9, (DAAL_DATA_TYPE)1.3475000000000004);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 5, (DAAL_DATA_TYPE)1.1575000000000002);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 14, (DAAL_DATA_TYPE)0.76250000000000007);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 2, (DAAL_DATA_TYPE)0.32000000000000006);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 19, (DAAL_DATA_TYPE)0.12150000000000001);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 26, (DAAL_DATA_TYPE)0.89450000000000018);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.0071204251796007159);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.0066474949374147087);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.0098979667157811282);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.0067803169159512781);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[33], 1, 24, (DAAL_DATA_TYPE)0.9105000000000002);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.015104793205305382);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0027916604280471807);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.013967234447885019);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)-0.005289258112487219);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[24], 1, 1, (DAAL_DATA_TYPE)1.4635000000000002);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.010565365494248715);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0028287308776508207);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[15], 1, 0, (DAAL_DATA_TYPE)0.75950000000000017);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.012966905873364363);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 17, (DAAL_DATA_TYPE)0.99450000000000005);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.0082089518063834729);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0029326411823813736);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[14], 1, 24, (DAAL_DATA_TYPE)1.0475000000000001);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.00075245607271790503);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.012204009625646803);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[1], 1, 5, (DAAL_DATA_TYPE)0.97650000000000003);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 11, (DAAL_DATA_TYPE)0.40450000000000008);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0070894530107235097);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0082449211639219113);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.01012293180507241);

}

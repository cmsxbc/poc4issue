 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
#include "tree.h"
using namespace daal::algorithms::gbt::regression;

typedef void (*BuildTreeFunc)(ModelBuilder&, ModelBuilder::NodeId[]);

static BuildTreeFunc buildTreeFuncs[] = {
    buildTree1,
    buildTree2,
    buildTree3,
    buildTree4,
    buildTree5,
    buildTree6,
    buildTree7,
    buildTree8,
    buildTree9,
    buildTree10,
    buildTree11,
    buildTree12,
    buildTree13,
    buildTree14,
    buildTree15,
    buildTree16,
    buildTree17,
    buildTree18,
    buildTree19,
    buildTree20,
    buildTree21,
    buildTree22,
    buildTree23,
    buildTree24,
    buildTree25,
    buildTree26,
    buildTree27,
    buildTree28,
    buildTree29,
    buildTree30,
    buildTree31,
    buildTree32,
    buildTree33,
    buildTree34,
    buildTree35,
    buildTree36,
    buildTree37,
    buildTree38,
    buildTree39,
    buildTree40,
    buildTree41,
    buildTree42,
    buildTree43,
    buildTree44,
    buildTree45,
    buildTree46,
    buildTree47,
    buildTree48,
    buildTree49,
    buildTree50,
    buildTree51,
    buildTree52,
    buildTree53,
    buildTree54,
    buildTree55,
    buildTree56,
    buildTree57,
    buildTree58,
    buildTree59,
    buildTree60,
    buildTree61,
    buildTree62,
    buildTree63,
    buildTree64,
    buildTree65,
    buildTree66,
    buildTree67,
    buildTree68,
    buildTree69,
    buildTree70,
    buildTree71,
    buildTree72,
    buildTree73,
    buildTree74,
    buildTree75,
    buildTree76,
    buildTree77,
    buildTree78,
    buildTree79,
    buildTree80,
    buildTree81,
    buildTree82,
    buildTree83,
    buildTree84,
    buildTree85,
    buildTree86,
    buildTree87,
    buildTree88,
    buildTree89,
    buildTree90,
    buildTree91,
    buildTree92,
    buildTree93,
    buildTree94,
    buildTree95,
    buildTree96,
    buildTree97,
    buildTree98,
    buildTree99,
    buildTree100,
    buildTree101,
    buildTree102,
    buildTree103,
    buildTree104,
    buildTree105,
    buildTree106,
    buildTree107,
    buildTree108,
    buildTree109,
    buildTree110,
    buildTree111,
    buildTree112,
    buildTree113,
    buildTree114,
    buildTree115,
    buildTree116,
    buildTree117,
    buildTree118,
    buildTree119,
    buildTree120,
    buildTree121,
    buildTree122,
    buildTree123,
    buildTree124,
    buildTree125,
    buildTree126,
    buildTree127,
    buildTree128,
    buildTree129,
    buildTree130,
    buildTree131,
    buildTree132,
    buildTree133,
    buildTree134,
    buildTree135,
    buildTree136,
    buildTree137,
    buildTree138,
    buildTree139,
    buildTree140,
    buildTree141,
    buildTree142,
    buildTree143,
    buildTree144,
    buildTree145,
    buildTree146,
    buildTree147,
    buildTree148,
    buildTree149,
    buildTree150,
    buildTree151,
    buildTree152,
    buildTree153,
    buildTree154,
    buildTree155,
    buildTree156,
    buildTree157,
    buildTree158,
    buildTree159,
    buildTree160,
    buildTree161,
    buildTree162,
    buildTree163,
    buildTree164,
    buildTree165,
    buildTree166,
    buildTree167,
    buildTree168,
    buildTree169,
    buildTree170,
    buildTree171,
    buildTree172,
    buildTree173,
    buildTree174,
    buildTree175,
    buildTree176,
    buildTree177,
    buildTree178,
    buildTree179,
    buildTree180,
    buildTree181,
    buildTree182,
    buildTree183,
    buildTree184,
    buildTree185,
    buildTree186,
    buildTree187,
    buildTree188,
    buildTree189,
    buildTree190,
    buildTree191,
    buildTree192,
    buildTree193,
    buildTree194,
    buildTree195,
    buildTree196,
    buildTree197,
    buildTree198,
    buildTree199,
    buildTree200,
    buildTree201,
    buildTree202,
    buildTree203,
    buildTree204,
    buildTree205,
    buildTree206,
    buildTree207,
    buildTree208
};

ModelPtr getModel(size_t nTrees) {
    ModelBuilder builder(28, nTrees);
    ModelBuilder::TreeId treeId;
    ModelBuilder::NodeId nodeIds[61] = {ModelBuilder::noParent};
    for (size_t i = 0; i < nTrees; i++) {
        buildTreeFuncs[i](builder, nodeIds);
    }
    return builder.getModel();
}
    

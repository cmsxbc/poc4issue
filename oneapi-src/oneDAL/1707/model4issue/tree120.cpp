 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree120(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 7, (DAAL_DATA_TYPE)1.3160000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 14, (DAAL_DATA_TYPE)2.5005000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 22, (DAAL_DATA_TYPE)1.0705000000000002);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.00053088604589764132);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 19, (DAAL_DATA_TYPE)-1.0724999999999998);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 0, (DAAL_DATA_TYPE)0.72550000000000014);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)-0.0011884993718704209);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0071614183866194562);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[5], 1, 19, (DAAL_DATA_TYPE)-0.90699999999999992);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 5, (DAAL_DATA_TYPE)0.82050000000000012);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0051155692711472509);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)-0.010764089045729841);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[9], 1, 11, (DAAL_DATA_TYPE)1.4915000000000003);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)0.00081544685229649385);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)-0.0061081910907051749);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.0066873367047972148);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[1], 1, 14, (DAAL_DATA_TYPE)1.9490000000000001);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 25, (DAAL_DATA_TYPE)1.6755000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 2, (DAAL_DATA_TYPE)-1.4204999999999999);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0074597293172370309);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[19], 1, 26, (DAAL_DATA_TYPE)1.1475000000000002);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 1, (DAAL_DATA_TYPE)0.93950000000000011);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 2, (DAAL_DATA_TYPE)1.0495000000000003);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 11, (DAAL_DATA_TYPE)0.60650000000000015);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 26, (DAAL_DATA_TYPE)1.0435000000000001);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 19, (DAAL_DATA_TYPE)-0.62649999999999995);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 5, (DAAL_DATA_TYPE)0.73250000000000004);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.013695829246064712);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.0062513110062784776);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[26], 1, 5, (DAAL_DATA_TYPE)0.96250000000000002);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 0, (DAAL_DATA_TYPE)0.80950000000000022);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 22, (DAAL_DATA_TYPE)0.93650000000000022);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.0010430321745250536);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.0092387411410787285);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[31], 1, 22, (DAAL_DATA_TYPE)0.97350000000000014);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.0017963081132620574);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.010698164011473242);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[30], 1, 4, (DAAL_DATA_TYPE)-0.28949999999999992);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.01277117938243464);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)0.0012992040757973005);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.0043500891471436867);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[24], 1, 7, (DAAL_DATA_TYPE)1.5465000000000002);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.0039166138125344731);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 22, (DAAL_DATA_TYPE)0.91550000000000009);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.013185251569375396);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0025822012452408672);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0059472475584377259);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[22], 1, 1, (DAAL_DATA_TYPE)1.4815000000000003);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 9, (DAAL_DATA_TYPE)0.87450000000000017);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.0011314236692019873);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.012860983309726563);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.0039727836847305298);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[21], 1, 21, (DAAL_DATA_TYPE)1.1115000000000002);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 9, (DAAL_DATA_TYPE)0.96650000000000003);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.004450016727913981);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.016761687097068018);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0015640430876778231);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[18], 1, 24, (DAAL_DATA_TYPE)0.98250000000000004);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.001574986642226577);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.010865037311469357);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.010752859959999722);

}

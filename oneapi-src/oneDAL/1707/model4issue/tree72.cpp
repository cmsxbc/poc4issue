 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree72(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 24, (DAAL_DATA_TYPE)1.2685000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 10, (DAAL_DATA_TYPE)-1.3474999999999999);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 6, (DAAL_DATA_TYPE)-0.85249999999999992);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.0071552247496020106);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 23, (DAAL_DATA_TYPE)1.0105000000000002);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.0013294327636494451);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0068303131388829045);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[2], 1, 27, (DAAL_DATA_TYPE)1.0855000000000004);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 22, (DAAL_DATA_TYPE)1.4995000000000003);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 17, (DAAL_DATA_TYPE)1.6815000000000002);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 26, (DAAL_DATA_TYPE)0.9255000000000001);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 21, (DAAL_DATA_TYPE)1.6765000000000001);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 27, (DAAL_DATA_TYPE)0.84050000000000014);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 24, (DAAL_DATA_TYPE)1.1745000000000003);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 26, (DAAL_DATA_TYPE)0.76750000000000018);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 25, (DAAL_DATA_TYPE)0.71350000000000013);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 6, (DAAL_DATA_TYPE)-0.36949999999999994);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 22, (DAAL_DATA_TYPE)0.72750000000000015);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.015800118581815202);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0026784885263837436);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[17], 1, 15, (DAAL_DATA_TYPE)0.59650000000000014);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)-0.0039597093503464737);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[21], 1, 24, (DAAL_DATA_TYPE)0.82050000000000012);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 11, (DAAL_DATA_TYPE)0.042500000000000003);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.013196079294348873);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0017240792214870454);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0072327684362729393);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.00397208569985297);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.0015593387071622311);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)-0.0096386510398118741);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[13], 1, 22, (DAAL_DATA_TYPE)0.97750000000000015);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 21, (DAAL_DATA_TYPE)0.96250000000000002);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.009252373883704635);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 24, (DAAL_DATA_TYPE)0.95350000000000013);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)0.011492269306823059);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.0086603260569034085);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)6.143537858593548e-05);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.0087234387795130427);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[11], 1, 2, (DAAL_DATA_TYPE)1.6215000000000004);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 25, (DAAL_DATA_TYPE)1.3245000000000002);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 10, (DAAL_DATA_TYPE)0.68250000000000022);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.0012773605128780542);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0056994086035582073);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 11, (DAAL_DATA_TYPE)1.3195000000000003);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 11, (DAAL_DATA_TYPE)-0.30749999999999994);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 17, (DAAL_DATA_TYPE)0.88750000000000007);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.008774104058931146);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0026905041498442492);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[45], 1, 21, (DAAL_DATA_TYPE)0.68550000000000011);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.015082081490092809);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 13, (DAAL_DATA_TYPE)0.71650000000000003);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)-0.010412072830579499);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0040957141108810902);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.010306184729071041);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.010017360755523971);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0040015673708209461);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.01159129970307861);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0021985151522818428);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[1], 1, 1, (DAAL_DATA_TYPE)1.772);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0020028364618455492);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0080916251548949405);

}

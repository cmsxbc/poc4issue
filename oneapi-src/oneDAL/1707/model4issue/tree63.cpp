 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree63(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 0, (DAAL_DATA_TYPE)2.7735000000000007);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 6, (DAAL_DATA_TYPE)-2.7564999999999995);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)-0.011588449565612752);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[2], 1, 9, (DAAL_DATA_TYPE)0.90350000000000008);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 15, (DAAL_DATA_TYPE)1.6805000000000001);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 25, (DAAL_DATA_TYPE)1.1785000000000003);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 5, (DAAL_DATA_TYPE)1.2405000000000002);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 13, (DAAL_DATA_TYPE)1.4705000000000001);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 27, (DAAL_DATA_TYPE)0.79950000000000021);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 0, (DAAL_DATA_TYPE)1.5795000000000001);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.001110553392824137);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.008227839562715146);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[10], 1, 17, (DAAL_DATA_TYPE)1.8485000000000003);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0055173775770183224);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.0071563724055886263);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.00010829517530962594);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0035155652501973611);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[7], 1, 21, (DAAL_DATA_TYPE)1.0870000000000004);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 0, (DAAL_DATA_TYPE)1.7125000000000001);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.0033771908330712838);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.007970128487795592);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.010844030324369669);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[6], 1, 7, (DAAL_DATA_TYPE)1.2485000000000002);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.0046961171120950369);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 25, (DAAL_DATA_TYPE)1.4475000000000002);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.011809335076915367);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0053002276058707921);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0085205916137922385);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[4], 1, 9, (DAAL_DATA_TYPE)0.93750000000000011);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 19, (DAAL_DATA_TYPE)-0.39899999999999997);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.01145119672077463);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.001278537299614242);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[30], 1, 0, (DAAL_DATA_TYPE)1.2435000000000003);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 23, (DAAL_DATA_TYPE)1.3105000000000002);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.00067038379555569129);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.0086488649535637636);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[34], 1, 5, (DAAL_DATA_TYPE)0.52350000000000019);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0078702292190148283);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 24, (DAAL_DATA_TYPE)0.95050000000000001);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 21, (DAAL_DATA_TYPE)1.0285000000000002);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 18, (DAAL_DATA_TYPE)0.66300000000000014);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.006525485470648045);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.00474890658952063);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.014618893496172373);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[40], 1, 1, (DAAL_DATA_TYPE)-0.96149999999999991);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.0068883604878051717);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[46], 1, 24, (DAAL_DATA_TYPE)1.0605000000000002);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.0049071664211608598);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 19, (DAAL_DATA_TYPE)0.99550000000000016);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 9, (DAAL_DATA_TYPE)1.0065000000000002);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.0081331321038305756);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 26, (DAAL_DATA_TYPE)1.0735000000000003);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.01451458145487816);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 27, (DAAL_DATA_TYPE)1.0245000000000002);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.0069713572128897623);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.0076790118825504159);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[50], 1, 7, (DAAL_DATA_TYPE)0.063500000000000015);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0067376470636753812);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.015180080607533456);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.0073410936025587988);

}

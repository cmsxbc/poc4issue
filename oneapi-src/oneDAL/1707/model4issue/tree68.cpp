 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree68(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)0.94550000000000012);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 25, (DAAL_DATA_TYPE)0.78850000000000009);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)-0.00035562025523712501);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[2], 1, 26, (DAAL_DATA_TYPE)0.87350000000000005);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 0, (DAAL_DATA_TYPE)1.2355000000000003);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 10, (DAAL_DATA_TYPE)1.0215000000000003);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 15, (DAAL_DATA_TYPE)-1.3854999999999997);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.014598728604614737);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[7], 1, 3, (DAAL_DATA_TYPE)1.0625000000000002);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 24, (DAAL_DATA_TYPE)0.72150000000000014);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.004225719060438375);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0066341711623270228);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.0051424873421589534);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0085530401948763404);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[5], 1, 27, (DAAL_DATA_TYPE)0.75450000000000006);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.00022353810422560749);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.014352790311705776);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[4], 1, 3, (DAAL_DATA_TYPE)0.19750000000000004);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)-0.0084654028862714767);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0032451852693436986);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.2895000000000001);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 15, (DAAL_DATA_TYPE)-1.6534999999999997);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.0083213653838769951);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 27, (DAAL_DATA_TYPE)0.9385);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 26, (DAAL_DATA_TYPE)0.90950000000000009);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 0, (DAAL_DATA_TYPE)1.1685000000000001);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 3, (DAAL_DATA_TYPE)1.2575000000000001);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 1, (DAAL_DATA_TYPE)1.0555000000000001);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.0015083060320466757);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.0080081638246774674);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.010419589254472937);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.011570394421114197);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[25], 1, 24, (DAAL_DATA_TYPE)0.71050000000000002);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0088963837447491572);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 25, (DAAL_DATA_TYPE)1.1325000000000001);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.0034570842208340767);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0019377283248546964);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0038317425009000749);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[21], 1, 10, (DAAL_DATA_TYPE)0.22650000000000003);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 11, (DAAL_DATA_TYPE)0.85550000000000004);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 19, (DAAL_DATA_TYPE)-1.3074999999999999);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.010395202679293496);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 2, (DAAL_DATA_TYPE)1.3475000000000004);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 26, (DAAL_DATA_TYPE)1.2195000000000003);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0068043462725149266);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[44], 1, 9, (DAAL_DATA_TYPE)0.97050000000000003);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.010330948277431376);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0018492542033257721);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.013959987908601763);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[40], 1, 1, (DAAL_DATA_TYPE)0.59750000000000003);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0097948261427090455);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0048475654884463266);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[39], 1, 7, (DAAL_DATA_TYPE)0.47950000000000004);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 27, (DAAL_DATA_TYPE)1.0335000000000003);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.0090450681363924961);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[54], 1, 5, (DAAL_DATA_TYPE)1.3505000000000003);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[56], 0, 2, (DAAL_DATA_TYPE)0.47450000000000003);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.0016571833310942902);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.018503054641187192);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0067780526354908948);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.012383615006895169);

}

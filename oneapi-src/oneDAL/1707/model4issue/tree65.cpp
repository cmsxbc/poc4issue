 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree65(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 0, (DAAL_DATA_TYPE)2.7735000000000007);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)2.169);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 25, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 26, (DAAL_DATA_TYPE)0.77650000000000008);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 23, (DAAL_DATA_TYPE)1.3280000000000001);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 25, (DAAL_DATA_TYPE)0.32150000000000006);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 11, (DAAL_DATA_TYPE)0.12850000000000003);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 18, (DAAL_DATA_TYPE)-0.36349999999999993);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.017078855003301915);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0021731666527515232);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[7], 1, 10, (DAAL_DATA_TYPE)0.10300000000000001);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0093721816265905228);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.0075280340122325087);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.0026782394069358242);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0077102339611603669);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[4], 1, 21, (DAAL_DATA_TYPE)0.40200000000000008);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 1, (DAAL_DATA_TYPE)0.32150000000000006);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.0004758375985869046);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.018147889487445355);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[16], 1, 27, (DAAL_DATA_TYPE)0.85950000000000004);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.002060430124191181);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[20], 1, 27, (DAAL_DATA_TYPE)0.86550000000000005);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0095563671805641865);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 13, (DAAL_DATA_TYPE)0.44550000000000006);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0079857452294310998);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 3, (DAAL_DATA_TYPE)0.19750000000000004);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)-0.012270520906895399);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 8, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 13, (DAAL_DATA_TYPE)0.68550000000000011);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 24, (DAAL_DATA_TYPE)1.2285000000000001);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 7, (DAAL_DATA_TYPE)0.23450000000000001);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.0034577456324599515);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.015541506145854254);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0034717625688488896);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.00085172207116244656);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[29], 1, 11, (DAAL_DATA_TYPE)-0.12249999999999998);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.00031720104211188378);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 7, (DAAL_DATA_TYPE)-0.33849999999999997);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0012101913243532181);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.016283965203911066);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[24], 1, 5, (DAAL_DATA_TYPE)1.0365000000000002);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 22, (DAAL_DATA_TYPE)0.85150000000000003);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.0067162550217102455);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 0, (DAAL_DATA_TYPE)0.60250000000000015);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 4, (DAAL_DATA_TYPE)-0.17649999999999996);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.01735878816938826);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[46], 1, 11, (DAAL_DATA_TYPE)-0.69249999999999978);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.007110636342655529);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.012475110803331649);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[45], 1, 25, (DAAL_DATA_TYPE)0.82750000000000001);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 13, (DAAL_DATA_TYPE)0.87750000000000006);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.012367383111268282);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0024029826454352587);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0045483974129205849);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[42], 1, 0, (DAAL_DATA_TYPE)1.9755000000000003);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)0.0075824716250309778);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.0063510897690835207);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)-0.0014043915243146668);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0041028593985629417);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.0067709235317149272);

}

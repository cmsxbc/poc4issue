 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree114(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 13, (DAAL_DATA_TYPE)2.8415000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 6, (DAAL_DATA_TYPE)-2.7564999999999995);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)-0.0081085359885195354);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[2], 1, 13, (DAAL_DATA_TYPE)0.30650000000000005);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 7, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.010524499307697019);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0020698086358606816);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 16, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 5, (DAAL_DATA_TYPE)0.44950000000000007);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 1, (DAAL_DATA_TYPE)0.9105000000000002);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0085239120955137842);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)-0.0013332872496296963);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[9], 1, 7, (DAAL_DATA_TYPE)-0.35649999999999993);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)0.0012615699829610291);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[13], 1, 22, (DAAL_DATA_TYPE)1.3295000000000001);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 11, (DAAL_DATA_TYPE)0.86750000000000005);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 4, (DAAL_DATA_TYPE)-1.1214999999999999);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 5, (DAAL_DATA_TYPE)0.5655);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.013883274155003685);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[18], 1, 0, (DAAL_DATA_TYPE)0.91150000000000009);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 17, (DAAL_DATA_TYPE)1.3485000000000003);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)-0.0046052375870580175);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)-0.015983640736735919);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.00076949708163738257);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[17], 1, 7, (DAAL_DATA_TYPE)1.3160000000000001);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 2, (DAAL_DATA_TYPE)-1.2294999999999998);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 1, (DAAL_DATA_TYPE)1.4385000000000001);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 5, (DAAL_DATA_TYPE)1.2495000000000003);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.0074994647302306624);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.0018691911009719243);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.0082351757527794698);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[26], 1, 11, (DAAL_DATA_TYPE)-1.6784999999999999);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0085527584222810614);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 3, (DAAL_DATA_TYPE)0.84450000000000014);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 0, (DAAL_DATA_TYPE)0.64750000000000008);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.0056905008278378888);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0012305325186926265);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.0034454649975222927);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[25], 1, 22, (DAAL_DATA_TYPE)0.88150000000000006);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 27, (DAAL_DATA_TYPE)0.94750000000000012);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.0049826599531681151);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.018351198554039005);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[39], 1, 10, (DAAL_DATA_TYPE)0.73250000000000004);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.0026782452112063767);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.0072880400687848268);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[16], 1, 7, (DAAL_DATA_TYPE)0.57150000000000001);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 11, (DAAL_DATA_TYPE)1.2075000000000002);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.0078314495783659722);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.00072483567329626743);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[46], 1, 2, (DAAL_DATA_TYPE)0.25750000000000006);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0056247723862115594);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.019707284495234491);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[15], 1, 4, (DAAL_DATA_TYPE)-0.55349999999999999);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0095401669297224059);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 6, (DAAL_DATA_TYPE)0.34150000000000008);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[55], 0, 20, (DAAL_DATA_TYPE)2.3265000000000002);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.0024764890627314647);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.012301384478807451);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.0094770882278680801);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.00065300998673590899);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)0.0073826752336961891);

}

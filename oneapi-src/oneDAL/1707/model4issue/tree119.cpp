 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree119(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 7, (DAAL_DATA_TYPE)1.3160000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 7, (DAAL_DATA_TYPE)1.2005000000000001);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)-0.00021280092294187955);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[2], 1, 27, (DAAL_DATA_TYPE)0.81850000000000012);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 25, (DAAL_DATA_TYPE)0.59250000000000014);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.0068406095816975548);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0051367971998620404);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 24, (DAAL_DATA_TYPE)1.1965000000000001);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 24, (DAAL_DATA_TYPE)0.96250000000000002);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 13, (DAAL_DATA_TYPE)0.99750000000000016);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.011190061044180766);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0001241511618718505);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.017426520155277105);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0011057201429809395);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[1], 1, 25, (DAAL_DATA_TYPE)1.6755000000000002);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 26, (DAAL_DATA_TYPE)1.1475000000000002);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 1, (DAAL_DATA_TYPE)0.93950000000000011);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 5, (DAAL_DATA_TYPE)0.61750000000000005);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 10, (DAAL_DATA_TYPE)0.59650000000000014);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 3, (DAAL_DATA_TYPE)0.88750000000000007);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)-0.015590221609454603);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.00027396818172306783);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0069330009818077097);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[18], 1, 26, (DAAL_DATA_TYPE)1.0435000000000001);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 25, (DAAL_DATA_TYPE)1.1405000000000001);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 10, (DAAL_DATA_TYPE)-1.2434999999999998);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.0040859764102580296);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 27, (DAAL_DATA_TYPE)0.68650000000000022);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.013747400375591082);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 26, (DAAL_DATA_TYPE)0.99350000000000016);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 15, (DAAL_DATA_TYPE)-0.16949999999999998);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 1, (DAAL_DATA_TYPE)0.30850000000000005);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 4, (DAAL_DATA_TYPE)0.13450000000000004);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.009304511656267318);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)0.004121366653236605);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.0074922298657752219);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[31], 1, 1, (DAAL_DATA_TYPE)-0.027499999999999997);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.008420158000304722);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 13, (DAAL_DATA_TYPE)0.81050000000000011);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0074230935035022698);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.0063726318767294288);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.011186139145866037);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.011659288367158488);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[24], 1, 22, (DAAL_DATA_TYPE)0.9275000000000001);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0017030065134167672);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.011872475610580295);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[17], 1, 1, (DAAL_DATA_TYPE)1.4815000000000003);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 9, (DAAL_DATA_TYPE)0.87450000000000017);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.0017740876510225494);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.012433299651103361);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.0051619599174175948);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[16], 1, 21, (DAAL_DATA_TYPE)1.1115000000000002);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 9, (DAAL_DATA_TYPE)0.96650000000000003);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0051295900860658062);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.015504862771679959);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[52], 1, 1, (DAAL_DATA_TYPE)-0.15249999999999997);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.0045746863597915287);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0077558141387999062);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[15], 1, 24, (DAAL_DATA_TYPE)1.0475000000000001);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.00071018007025122653);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.011514972233110005);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree147(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 15, (DAAL_DATA_TYPE)1.7085000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 3, (DAAL_DATA_TYPE)1.7675000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 0, (DAAL_DATA_TYPE)0.38550000000000006);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 5, (DAAL_DATA_TYPE)0.5485000000000001);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.005909330142436154);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 11, (DAAL_DATA_TYPE)-1.0774999999999999);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 15, (DAAL_DATA_TYPE)-0.24349999999999997);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.016098536178469659);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0043001952767372136);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[6], 1, 2, (DAAL_DATA_TYPE)0.40250000000000008);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 3, (DAAL_DATA_TYPE)1.2205000000000001);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 0, (DAAL_DATA_TYPE)0.34850000000000003);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 0, (DAAL_DATA_TYPE)0.30950000000000005);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)0.0062516565360128881);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)-0.006137340032165089);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.0084392397056540693);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[11], 1, 25, (DAAL_DATA_TYPE)0.87050000000000016);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.012625013646625339);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.00041624747294311719);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[10], 1, 15, (DAAL_DATA_TYPE)0.12700000000000003);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.0019240697664594506);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.013124372392057389);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[3], 1, 2, (DAAL_DATA_TYPE)-1.4674999999999998);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 1, (DAAL_DATA_TYPE)1.2045000000000001);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 3, (DAAL_DATA_TYPE)1.5125000000000002);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 18, (DAAL_DATA_TYPE)-0.51649999999999985);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 18, (DAAL_DATA_TYPE)-0.75149999999999995);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 3, (DAAL_DATA_TYPE)0.66550000000000009);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.01034757332303203);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0002794842450664594);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.015270217029111728);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[26], 1, 0, (DAAL_DATA_TYPE)0.56150000000000022);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.0081219698512746442);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 1, (DAAL_DATA_TYPE)-0.73149999999999993);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)0.0079531301672642052);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)0.00049447973820138471);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.01066764493783315);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0089738778277950477);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.00019623077259961009);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[2], 1, 4, (DAAL_DATA_TYPE)-1.3124999999999998);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 26, (DAAL_DATA_TYPE)1.1705000000000003);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.013864802893611692);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.0026983117211549995);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 12, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 4, (DAAL_DATA_TYPE)1.4160000000000001);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0038355713334985429);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.0067440070566194867);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[44], 1, 7, (DAAL_DATA_TYPE)0.87000000000000011);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 6, (DAAL_DATA_TYPE)-1.2539999999999998);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.01002270534168929);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 19, (DAAL_DATA_TYPE)1.0525000000000002);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 25, (DAAL_DATA_TYPE)1.1705000000000003);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 9, (DAAL_DATA_TYPE)0.97050000000000003);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.00094332048029173172);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.013088297271834954);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0052087716672471482);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.011033415708404321);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.0074515066074453441);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[1], 1, 26, (DAAL_DATA_TYPE)0.91550000000000009);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.00081991006930669155);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.010274997358543002);

}

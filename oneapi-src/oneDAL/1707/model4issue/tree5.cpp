 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree5(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.2815000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 25, (DAAL_DATA_TYPE)0.62350000000000005);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 13, (DAAL_DATA_TYPE)0.93650000000000022);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 9, (DAAL_DATA_TYPE)1.0415000000000003);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 12, (DAAL_DATA_TYPE)1.6610000000000003);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.0058691965032452095);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.012834574336852504);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 19, (DAAL_DATA_TYPE)0.96950000000000014);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.00470813404282798);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.010831023905521785);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.00013000571524909656);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)0.98450000000000004);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 26, (DAAL_DATA_TYPE)0.77650000000000008);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 5, (DAAL_DATA_TYPE)0.82050000000000012);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 14, (DAAL_DATA_TYPE)0.79900000000000015);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)-0.01096945690850799);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.00099081650376319874);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[14], 1, 15, (DAAL_DATA_TYPE)0.45350000000000007);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.011784497638271281);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.00467685925406079);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[13], 1, 3, (DAAL_DATA_TYPE)1.5465000000000002);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 21, (DAAL_DATA_TYPE)1.0625000000000002);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 0, (DAAL_DATA_TYPE)1.3285000000000002);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.013098099299366082);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[23], 1, 26, (DAAL_DATA_TYPE)1.0565000000000002);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 1, (DAAL_DATA_TYPE)0.72850000000000004);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.011793260960187313);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-3.5862973891198639e-05);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.0044888275688973025);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[22], 1, 5, (DAAL_DATA_TYPE)0.49450000000000005);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.017692759707570078);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0055304723789094158);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[21], 1, 13, (DAAL_DATA_TYPE)0.73250000000000004);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0099729228049817709);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 5, (DAAL_DATA_TYPE)0.82550000000000001);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.010035160007445436);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.002097004581065405);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[12], 1, 5, (DAAL_DATA_TYPE)1.1815000000000002);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 9, (DAAL_DATA_TYPE)0.90750000000000008);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 13, (DAAL_DATA_TYPE)1.0675000000000001);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.010708770116839962);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[40], 1, 5, (DAAL_DATA_TYPE)0.63450000000000017);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.015426341891288759);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.0020489548865173543);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.0010794410215956825);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[38], 1, 26, (DAAL_DATA_TYPE)1.1705000000000003);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)0.005613902497750063);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.019897944905928205);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[46], 1, 22, (DAAL_DATA_TYPE)1.0265000000000002);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.013131487435764736);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0067712230415179807);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[1], 1, 25, (DAAL_DATA_TYPE)1.8760000000000001);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 0, (DAAL_DATA_TYPE)1.0575000000000003);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 10, (DAAL_DATA_TYPE)0.68250000000000022);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[55], 0, 3, (DAAL_DATA_TYPE)1.8795000000000002);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.0017865257347650068);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.017346438517173133);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.012374687602377346);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.012671233746304848);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.014831980024774869);

}

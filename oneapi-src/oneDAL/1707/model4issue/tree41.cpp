 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree41(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)1.0025000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 26, (DAAL_DATA_TYPE)0.87350000000000005);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 17, (DAAL_DATA_TYPE)0.92850000000000021);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 0, (DAAL_DATA_TYPE)1.8945000000000001);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 3, (DAAL_DATA_TYPE)1.4365000000000003);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 19, (DAAL_DATA_TYPE)-1.1714999999999998);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 13, (DAAL_DATA_TYPE)0.58950000000000002);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0087271183071767587);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[8], 1, 3, (DAAL_DATA_TYPE)0.56650000000000011);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.0032495054557467951);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 21, (DAAL_DATA_TYPE)0.7965000000000001);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.0018895553052425387);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.015848856341714661);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[7], 1, 11, (DAAL_DATA_TYPE)1.5795000000000001);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)-0.0043806933562775124);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.0078713017981499444);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.0091147367795140054);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.009018033649772406);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[4], 1, 5, (DAAL_DATA_TYPE)0.38450000000000006);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)-0.01656839457154274);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[20], 1, 13, (DAAL_DATA_TYPE)1.1445000000000001);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 22, (DAAL_DATA_TYPE)0.8045000000000001);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.0072893865504547175);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[23], 1, 23, (DAAL_DATA_TYPE)1.0765000000000002);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 10, (DAAL_DATA_TYPE)-1.0874999999999997);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.012616016131800576);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0020716361966528914);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.0078574737906455996);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.007312921829083387);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[3], 1, 27, (DAAL_DATA_TYPE)0.85750000000000004);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 27, (DAAL_DATA_TYPE)0.75450000000000006);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.0065309059382839645);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.0033710094090255885);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[31], 1, 24, (DAAL_DATA_TYPE)0.93050000000000022);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0043996019137872234);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[35], 1, 7, (DAAL_DATA_TYPE)-1.4654999999999998);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.010254526453522537);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)0.002058368668921532);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[2], 1, 15, (DAAL_DATA_TYPE)1.6805000000000001);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 5, (DAAL_DATA_TYPE)1.3260000000000003);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 27, (DAAL_DATA_TYPE)0.7965000000000001);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.005638435787631799);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.00060986348537306161);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0057665824548018222);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.015202793657779693);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[1], 1, 0, (DAAL_DATA_TYPE)1.5030000000000003);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 5, (DAAL_DATA_TYPE)2.0995000000000004);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 1, (DAAL_DATA_TYPE)-1.4269999999999998);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 21, (DAAL_DATA_TYPE)0.81450000000000011);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0039850385859608655);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.0099925607326440524);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 1, (DAAL_DATA_TYPE)1.8120000000000001);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 22, (DAAL_DATA_TYPE)0.68050000000000022);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.010938452929258347);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.00065734185811658038);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.010969015793955844);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.0073925216762739934);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[47], 1, 6, (DAAL_DATA_TYPE)1.3405000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0067572050744940234);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0080751423340509922);

}

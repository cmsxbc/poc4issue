 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree10(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.79050000000000009);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 9, (DAAL_DATA_TYPE)1.1475000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 24, (DAAL_DATA_TYPE)0.73550000000000015);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 22, (DAAL_DATA_TYPE)1.0705000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 22, (DAAL_DATA_TYPE)0.73150000000000015);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 17, (DAAL_DATA_TYPE)0.61750000000000005);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.0039025628361208688);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.016452941877974404);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.0054369829616684844);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0068562898163994149);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[4], 1, 10, (DAAL_DATA_TYPE)0.12450000000000001);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.010449150607541757);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0036132150194019951);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0057243678958044143);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[2], 1, 27, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 26, (DAAL_DATA_TYPE)0.85650000000000015);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 25, (DAAL_DATA_TYPE)0.89550000000000007);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 25, (DAAL_DATA_TYPE)0.52350000000000019);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0033760277947909399);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0080902154850439872);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[18], 1, 27, (DAAL_DATA_TYPE)0.78650000000000009);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.00013880974971331085);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.015432601108362802);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[17], 1, 25, (DAAL_DATA_TYPE)0.68650000000000022);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 13, (DAAL_DATA_TYPE)0.9405);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.00062115285665758193);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.011306416315417137);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.011701876434080046);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[16], 1, 25, (DAAL_DATA_TYPE)0.64950000000000008);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 9, (DAAL_DATA_TYPE)1.6725000000000001);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0075195903232430708);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0076194874942302707);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[30], 1, 24, (DAAL_DATA_TYPE)1.0265000000000002);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 22, (DAAL_DATA_TYPE)1.0515000000000001);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 24, (DAAL_DATA_TYPE)0.73250000000000004);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0020304333312170845);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 22, (DAAL_DATA_TYPE)0.80150000000000021);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0048324082493782046);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.015698306016192948);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.0052952026302491009);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[34], 1, 5, (DAAL_DATA_TYPE)1.1045000000000003);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.0029227204661775425);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 3, (DAAL_DATA_TYPE)2.0015000000000005);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.010887672624417715);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0059086303537090627);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[1], 1, 25, (DAAL_DATA_TYPE)1.5585000000000002);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 22, (DAAL_DATA_TYPE)1.0065000000000002);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 21, (DAAL_DATA_TYPE)0.54750000000000021);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.0055411367166426882);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 24, (DAAL_DATA_TYPE)1.0605000000000002);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)-0.011046371470843808);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 27, (DAAL_DATA_TYPE)1.0175000000000003);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 4, (DAAL_DATA_TYPE)0.63450000000000017);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 13, (DAAL_DATA_TYPE)0.81950000000000001);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.016182268582857574);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.0034880955000312964);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.011371715553104879);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.010293740216228697);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.00092945524056752536);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.010181457286741441);

}

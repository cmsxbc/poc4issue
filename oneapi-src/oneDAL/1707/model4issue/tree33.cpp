 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree33(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)0.98450000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 25, (DAAL_DATA_TYPE)0.6695000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 10, (DAAL_DATA_TYPE)-1.3474999999999999);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 4, (DAAL_DATA_TYPE)0.46250000000000008);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.011177534716469902);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0017280325293540955);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[3], 1, 4, (DAAL_DATA_TYPE)0.08900000000000001);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 10, (DAAL_DATA_TYPE)-0.95649999999999979);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.011647070859963041);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[8], 1, 26, (DAAL_DATA_TYPE)0.92250000000000021);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 5, (DAAL_DATA_TYPE)1.1325000000000001);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 23, (DAAL_DATA_TYPE)1.2925000000000002);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 3, (DAAL_DATA_TYPE)0.75350000000000017);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)0.0041801897357709658);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[13], 1, 22, (DAAL_DATA_TYPE)0.66750000000000009);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.011830816715955735);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.0055287011493654822);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.016015897169709206);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.011985907269020876);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[10], 1, 21, (DAAL_DATA_TYPE)0.70950000000000013);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.009712712541222572);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0069988033566318582);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[7], 1, 22, (DAAL_DATA_TYPE)1.0655000000000003);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 21, (DAAL_DATA_TYPE)0.89550000000000007);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.0075871660304163762);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 22, (DAAL_DATA_TYPE)1.0125000000000002);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.001493076570134945);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.016215948104858401);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.0035422428592778092);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[2], 1, 26, (DAAL_DATA_TYPE)0.77250000000000008);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 22, (DAAL_DATA_TYPE)0.98350000000000015);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0037153740968939434);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 26, (DAAL_DATA_TYPE)0.75350000000000017);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0086454371485529067);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0096172731990615545);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[30], 1, 3, (DAAL_DATA_TYPE)1.1225000000000003);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0044458051040780098);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 27, (DAAL_DATA_TYPE)1.1895000000000002);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 0, (DAAL_DATA_TYPE)0.36850000000000005);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0096291044617400467);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.0034942001290232134);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.0051127578594066482);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[1], 1, 0, (DAAL_DATA_TYPE)2.4805000000000006);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 22, (DAAL_DATA_TYPE)0.77950000000000019);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 5, (DAAL_DATA_TYPE)0.78650000000000009);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.010145518928766251);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.0061944981255838954);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[44], 1, 24, (DAAL_DATA_TYPE)0.6585000000000002);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.0047592159522616348);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 24, (DAAL_DATA_TYPE)0.93350000000000011);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 14, (DAAL_DATA_TYPE)0.41050000000000003);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 21, (DAAL_DATA_TYPE)1.0925000000000002);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0047218757499692711);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0037377341219814878);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0088281081989407539);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[50], 1, 3, (DAAL_DATA_TYPE)1.9205000000000003);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[56], 0, 5, (DAAL_DATA_TYPE)2.0995000000000004);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.0009067025919293249);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.010999427281501818);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.0074503160577188143);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.01163965912705118);

}

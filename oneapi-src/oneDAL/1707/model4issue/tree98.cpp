 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree98(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90250000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 27, (DAAL_DATA_TYPE)0.89950000000000008);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 0, (DAAL_DATA_TYPE)1.8945000000000001);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 5, (DAAL_DATA_TYPE)0.41050000000000003);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.0039234779738762885);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 11, (DAAL_DATA_TYPE)-1.2144999999999999);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 24, (DAAL_DATA_TYPE)0.58350000000000002);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.0079723235081743307);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[7], 1, 23, (DAAL_DATA_TYPE)1.0545000000000002);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 6, (DAAL_DATA_TYPE)-0.30349999999999994);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 10, (DAAL_DATA_TYPE)-0.034499999999999996);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 23, (DAAL_DATA_TYPE)0.99350000000000016);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.00046943007564207296);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.013275991481813519);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.014530603700514996);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)-0.0017581196846440435);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[9], 1, 18, (DAAL_DATA_TYPE)0.39150000000000007);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.0064188986665103592);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.0053272129129618411);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.00080773601552215461);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[3], 1, 4, (DAAL_DATA_TYPE)-0.24899999999999997);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 18, (DAAL_DATA_TYPE)0.30450000000000005);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.0023806436637113263);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.012927063917251012);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.00036489362942009442);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.011338595978450031);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[1], 1, 4, (DAAL_DATA_TYPE)-1.6224999999999998);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.0039228953580696425);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 5, (DAAL_DATA_TYPE)0.81250000000000011);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 0, (DAAL_DATA_TYPE)1.9325000000000003);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 9, (DAAL_DATA_TYPE)1.5605000000000002);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0037313614584737541);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0076274814480846685);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0082060716301202777);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[29], 1, 0, (DAAL_DATA_TYPE)1.7985000000000002);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 0, (DAAL_DATA_TYPE)1.6635000000000002);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 25, (DAAL_DATA_TYPE)0.99250000000000005);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 25, (DAAL_DATA_TYPE)0.61050000000000015);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 10, (DAAL_DATA_TYPE)-0.052499999999999991);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 1, (DAAL_DATA_TYPE)-0.85049999999999992);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.0049560143866322261);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)-0.012591737229377032);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.0021631530579179527);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[38], 1, 3, (DAAL_DATA_TYPE)2.5325000000000002);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 1, (DAAL_DATA_TYPE)-0.77549999999999997);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 9, (DAAL_DATA_TYPE)0.79350000000000021);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.010184023595814195);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.0044262202527868199);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[45], 1, 17, (DAAL_DATA_TYPE)0.57750000000000001);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 10, (DAAL_DATA_TYPE)0.34950000000000003);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0046827955171465877);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.010724155269563199);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)0.0067823005359281194);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.01145307772925922);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0012357933261276533);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.0079065493773669004);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[35], 1, 6, (DAAL_DATA_TYPE)1.4355000000000002);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 25, (DAAL_DATA_TYPE)0.9275000000000001);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0082099565189576364);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.0015308198401843814);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.007541614193469286);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree45(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 5, (DAAL_DATA_TYPE)0.88150000000000006);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 0, (DAAL_DATA_TYPE)1.9155000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 9, (DAAL_DATA_TYPE)1.3115000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 25, (DAAL_DATA_TYPE)0.95150000000000012);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 18, (DAAL_DATA_TYPE)-2.1414999999999993);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.010050710099084037);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 17, (DAAL_DATA_TYPE)0.70250000000000001);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.0030181270030429932);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)5.9246216868045992e-06);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[4], 1, 11, (DAAL_DATA_TYPE)1.5795000000000001);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 17, (DAAL_DATA_TYPE)2.0865000000000005);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0051468344986588766);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.0080801961862522632);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0053246721243247015);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[3], 1, 18, (DAAL_DATA_TYPE)1.2365000000000002);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.004933663768778471);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.0076049238995269499);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0054660964482387562);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[1], 1, 0, (DAAL_DATA_TYPE)1.7305000000000004);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 25, (DAAL_DATA_TYPE)1.2045000000000001);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 10, (DAAL_DATA_TYPE)-1.3474999999999999);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 4, (DAAL_DATA_TYPE)-1.2074999999999998);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.01261263017076999);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.00043054762505745706);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[21], 1, 3, (DAAL_DATA_TYPE)2.6165000000000007);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0036526107760347006);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.0071809420202459603);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[20], 1, 13, (DAAL_DATA_TYPE)1.6685000000000001);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 21, (DAAL_DATA_TYPE)0.74850000000000005);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 19, (DAAL_DATA_TYPE)0.40250000000000008);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 15, (DAAL_DATA_TYPE)-0.16949999999999998);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.015251649710300722);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0016302432864904405);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0036322230048346938);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[29], 1, 10, (DAAL_DATA_TYPE)-0.64849999999999997);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 11, (DAAL_DATA_TYPE)1.0165000000000002);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 26, (DAAL_DATA_TYPE)1.3435000000000004);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.010274402454387451);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0042156724307017444);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.0074713681481386497);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[35], 1, 7, (DAAL_DATA_TYPE)-0.72549999999999992);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 2, (DAAL_DATA_TYPE)0.43550000000000005);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 1, (DAAL_DATA_TYPE)0.57400000000000007);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.00059295231476426131);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)0.018709769435226918);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.007435340914461349);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.0074146664040128547);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[28], 1, 3, (DAAL_DATA_TYPE)1.5555000000000001);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.0069842365588627612);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.004364467569087681);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[19], 1, 2, (DAAL_DATA_TYPE)-1.3584999999999998);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 24, (DAAL_DATA_TYPE)0.98250000000000004);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0033732785556751955);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.015360829482475916);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[51], 1, 24, (DAAL_DATA_TYPE)2.1485000000000007);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[55], 0, 4, (DAAL_DATA_TYPE)-1.0364999999999998);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)0.0030898983788783434);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[56], 1, 24, (DAAL_DATA_TYPE)0.6625000000000002);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.0072156144461284089);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.0064338069312044324);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.017529218559238044);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree123(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 24, (DAAL_DATA_TYPE)1.0755000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 18, (DAAL_DATA_TYPE)0.21850000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 22, (DAAL_DATA_TYPE)0.96150000000000013);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 22, (DAAL_DATA_TYPE)0.55650000000000011);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)0.0081236973227489569);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 24, (DAAL_DATA_TYPE)0.62950000000000006);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 3, (DAAL_DATA_TYPE)1.2935000000000001);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 16, (DAAL_DATA_TYPE)1.9110000000000003);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.0075787656593011392);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0015876503514223976);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.0099188111341473734);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.0023639312217973211);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[3], 1, 23, (DAAL_DATA_TYPE)1.4315000000000002);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 25, (DAAL_DATA_TYPE)0.58650000000000013);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 20, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 5, (DAAL_DATA_TYPE)0.90450000000000019);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0045999379562480115);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.0081392990538116661);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[15], 1, 0, (DAAL_DATA_TYPE)0.65650000000000019);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)0.0029543245654730572);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.011269607346761844);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[14], 1, 15, (DAAL_DATA_TYPE)-1.6139999999999997);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0077710270260771116);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.0008834338036873648);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.0090425085133084889);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[2], 1, 10, (DAAL_DATA_TYPE)-0.47449999999999992);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 6, (DAAL_DATA_TYPE)-0.66749999999999987);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 6, (DAAL_DATA_TYPE)-1.0724999999999998);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0035508697566745636);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0094771947092059158);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[27], 1, 13, (DAAL_DATA_TYPE)0.9165000000000002);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 10, (DAAL_DATA_TYPE)-0.86549999999999983);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 14, (DAAL_DATA_TYPE)-1.0814999999999999);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0086495976362909593);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 7, (DAAL_DATA_TYPE)0.72450000000000003);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.010830090869595075);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.00052347177854524213);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.01008007275283008);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)9.6666617607770047e-05);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.001325651031833044);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[1], 1, 5, (DAAL_DATA_TYPE)0.41850000000000004);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.0090138875144092669);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 21, (DAAL_DATA_TYPE)1.2310000000000001);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 22, (DAAL_DATA_TYPE)1.0445000000000002);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 14, (DAAL_DATA_TYPE)0.67850000000000021);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.00056059053268337573);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.003666037474810856);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[44], 1, 14, (DAAL_DATA_TYPE)0.86050000000000015);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 0, (DAAL_DATA_TYPE)1.1945000000000003);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 12, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 15, (DAAL_DATA_TYPE)-0.18399999999999997);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.010819032537983731);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0016844147990923376);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.012871313796035552);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[49], 1, 21, (DAAL_DATA_TYPE)0.9425);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0042951859457760443);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.0089507579687051475);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.0039353315461555438);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[43], 1, 17, (DAAL_DATA_TYPE)0.49050000000000005);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0094907468184828765);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0022449260687467105);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree89(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)2.1950000000000007);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)2.0060000000000007);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 23, (DAAL_DATA_TYPE)1.2665000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 26, (DAAL_DATA_TYPE)0.72850000000000004);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 3, (DAAL_DATA_TYPE)1.4035000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 23, (DAAL_DATA_TYPE)0.97950000000000015);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)-0.0083588723012286686);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 21, (DAAL_DATA_TYPE)0.85150000000000003);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 0, (DAAL_DATA_TYPE)0.79350000000000021);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.00031866956468638001);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[9], 1, 10, (DAAL_DATA_TYPE)-0.94049999999999978);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)0.0036507406458258632);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.00829920242338077);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[8], 1, 22, (DAAL_DATA_TYPE)0.78450000000000009);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 15, (DAAL_DATA_TYPE)0.096500000000000016);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.015202972026807921);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.00083894220919444656);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[14], 1, 2, (DAAL_DATA_TYPE)1.2805000000000002);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.0013025767795027121);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.0084516039816662676);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0075729081976330936);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[4], 1, 26, (DAAL_DATA_TYPE)0.73850000000000005);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.0089100173796000694);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 0, (DAAL_DATA_TYPE)0.43350000000000005);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 3, (DAAL_DATA_TYPE)1.5935000000000004);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 9, (DAAL_DATA_TYPE)0.91850000000000021);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 21, (DAAL_DATA_TYPE)0.6905);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)-0.011093569649383427);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 6, (DAAL_DATA_TYPE)0.19150000000000003);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.0016332485252755814);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[29], 1, 7, (DAAL_DATA_TYPE)0.063500000000000015);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.013143769043840861);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)-3.025197096306969e-05);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[26], 1, 15, (DAAL_DATA_TYPE)-1.0794999999999997);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.002838871778490452);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)0.0082565798539838749);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[25], 1, 24, (DAAL_DATA_TYPE)0.76750000000000018);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.014069858528673649);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.00029385434990783911);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[24], 1, 27, (DAAL_DATA_TYPE)0.85450000000000015);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.0008047861518442281);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[40], 1, 4, (DAAL_DATA_TYPE)-1.4884999999999999);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.0042665743187023037);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.0012825977218171554);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[3], 1, 24, (DAAL_DATA_TYPE)0.89350000000000007);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.0069768608810708808);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[45], 1, 24, (DAAL_DATA_TYPE)0.96250000000000002);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.0088153482996858653);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[47], 1, 12, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 21, (DAAL_DATA_TYPE)0.97850000000000004);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 3, (DAAL_DATA_TYPE)1.3105000000000002);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 23, (DAAL_DATA_TYPE)1.4275000000000002);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)0.0044158859259408453);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.010607977795668624);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0075070056039839989);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.011490329346534881);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[49], 1, 27, (DAAL_DATA_TYPE)0.99350000000000016);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0030779493972659111);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0070269411703681242);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0036647589368447851);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.0032544919628246759);

}

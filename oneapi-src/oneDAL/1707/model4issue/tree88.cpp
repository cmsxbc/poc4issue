 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree88(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)2.1950000000000007);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)2.0060000000000007);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 21, (DAAL_DATA_TYPE)0.89250000000000018);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 0, (DAAL_DATA_TYPE)1.4105000000000001);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 9, (DAAL_DATA_TYPE)1.0155000000000001);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 25, (DAAL_DATA_TYPE)0.98950000000000016);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 25, (DAAL_DATA_TYPE)0.59750000000000003);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.0027790077291666325);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[7], 1, 13, (DAAL_DATA_TYPE)0.56450000000000011);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.0054028067871194265);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[9], 1, 26, (DAAL_DATA_TYPE)0.80550000000000022);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0035335692994553471);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.0014152963399696589);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[6], 1, 5, (DAAL_DATA_TYPE)0.81250000000000011);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0064870359645815712);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 4, (DAAL_DATA_TYPE)0.82650000000000012);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0029272219734424254);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[16], 1, 2, (DAAL_DATA_TYPE)0.36550000000000005);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)-0.001484627035610816);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.017018441483378412);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[5], 1, 23, (DAAL_DATA_TYPE)0.98850000000000005);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 18, (DAAL_DATA_TYPE)1.3725000000000003);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 10, (DAAL_DATA_TYPE)0.41350000000000003);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.0029284522891594254);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.0097049823176348585);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.0088276947594501769);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[21], 1, 5, (DAAL_DATA_TYPE)1.1225000000000003);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.0020162568360159025);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.0039075500898711054);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[4], 1, 0, (DAAL_DATA_TYPE)1.4695000000000003);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.010380451816995189);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[30], 1, 10, (DAAL_DATA_TYPE)-0.97749999999999992);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 21, (DAAL_DATA_TYPE)0.76250000000000007);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.013864425111275454);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0011144334170967341);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0027218563176575118);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[3], 1, 22, (DAAL_DATA_TYPE)0.77950000000000019);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 6, (DAAL_DATA_TYPE)0.87250000000000016);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0075286456009094746);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 2, (DAAL_DATA_TYPE)-0.047999999999999994);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.01299322760579261);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.0047571817206011882);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[37], 1, 9, (DAAL_DATA_TYPE)0.68650000000000022);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 5, (DAAL_DATA_TYPE)1.2555000000000003);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 4, (DAAL_DATA_TYPE)0.6885);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.0030361843227980603);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[45], 1, 7, (DAAL_DATA_TYPE)0.35250000000000004);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 19, (DAAL_DATA_TYPE)-0.61049999999999993);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.011303247159887706);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 2, (DAAL_DATA_TYPE)-1.0204999999999997);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0072292415425181389);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[50], 1, 20, (DAAL_DATA_TYPE)2.3265000000000002);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.012053542813429467);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0015909065380692482);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.010033392307122012);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0083172044822607521);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.00031293743617219851);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[2], 1, 8, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.0051586866403501037);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.0043341277710472548);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.0034257810284588036);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree50(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)1.0025000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 17, (DAAL_DATA_TYPE)1.0255000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 6, (DAAL_DATA_TYPE)1.2175000000000002);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 15, (DAAL_DATA_TYPE)-0.20849999999999996);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 11, (DAAL_DATA_TYPE)1.5585000000000002);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 19, (DAAL_DATA_TYPE)-1.5804999999999998);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.011186349640289944);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.00045866930830108858);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.011777073165049425);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0014356444779674985);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)-0.0059242730651582996);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[3], 1, 10, (DAAL_DATA_TYPE)1.1075000000000002);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 22, (DAAL_DATA_TYPE)0.94450000000000001);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 4, (DAAL_DATA_TYPE)0.17150000000000001);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 15, (DAAL_DATA_TYPE)1.2225000000000004);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 19, (DAAL_DATA_TYPE)-0.052999999999999992);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.0072715356200933464);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 2, (DAAL_DATA_TYPE)-0.22649999999999998);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)0.011456312221843144);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.0017465019753823679);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.015509622313437008);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.0054627036149720205);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.0034251492373742068);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.0075886916604481248);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0031425215436780294);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[1], 1, 22, (DAAL_DATA_TYPE)1.0465000000000002);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 24, (DAAL_DATA_TYPE)1.0755000000000001);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0050864154115717328);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 2, (DAAL_DATA_TYPE)0.43550000000000005);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.00126806434058057);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[30], 1, 3, (DAAL_DATA_TYPE)1.6295000000000002);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 21, (DAAL_DATA_TYPE)0.6715000000000001);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0090059501990195252);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0031128910981038566);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0099647074911211227);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[27], 1, 9, (DAAL_DATA_TYPE)1.0555000000000001);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 4, (DAAL_DATA_TYPE)1.6155000000000002);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 9, (DAAL_DATA_TYPE)0.94150000000000011);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.00096937884858917583);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 21, (DAAL_DATA_TYPE)0.96450000000000002);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.0014030831633135678);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.01112515933698777);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.017362177987461504);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[37], 1, 17, (DAAL_DATA_TYPE)0.40850000000000003);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.019036753773689269);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[45], 1, 22, (DAAL_DATA_TYPE)1.6755000000000002);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 23, (DAAL_DATA_TYPE)0.98750000000000016);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 18, (DAAL_DATA_TYPE)0.97050000000000003);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 6, (DAAL_DATA_TYPE)0.60450000000000015);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.014067292939871551);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.00042122641335362978);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.003639738347667914);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.00085814783725359921);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[47], 1, 2, (DAAL_DATA_TYPE)0.93450000000000022);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[55], 0, 19, (DAAL_DATA_TYPE)0.9255000000000001);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[56], 0, 19, (DAAL_DATA_TYPE)-1.1484999999999996);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0017736171958623111);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.011919566091054525);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0057778820496153195);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.0070939669296855024);

}

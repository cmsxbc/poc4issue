 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree53(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 22, (DAAL_DATA_TYPE)1.0065000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 22, (DAAL_DATA_TYPE)0.8135);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 13, (DAAL_DATA_TYPE)0.32350000000000007);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.010675308493704632);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0015096454612044076);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[2], 1, 9, (DAAL_DATA_TYPE)2.3305000000000002);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 24, (DAAL_DATA_TYPE)0.73550000000000015);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 15, (DAAL_DATA_TYPE)1.0315000000000001);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 1, (DAAL_DATA_TYPE)0.89550000000000007);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 3, (DAAL_DATA_TYPE)1.7785000000000002);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0017806774398447323);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)-0.011116597919978878);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.0082270626677200202);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[8], 1, 1, (DAAL_DATA_TYPE)0.57400000000000007);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.0031793552450835707);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.015424575445552667);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[7], 1, 24, (DAAL_DATA_TYPE)0.97750000000000015);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 27, (DAAL_DATA_TYPE)0.78850000000000009);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)-0.0010917804532754394);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[18], 1, 10, (DAAL_DATA_TYPE)0.95250000000000001);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)-0.0068123088942738698);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0010795943501616726);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[17], 1, 25, (DAAL_DATA_TYPE)0.62350000000000005);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 11, (DAAL_DATA_TYPE)-0.82149999999999979);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0039096760749816901);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 11, (DAAL_DATA_TYPE)1.0265000000000002);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.012852181213489479);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.0032557011715003423);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[23], 1, 15, (DAAL_DATA_TYPE)-0.99449999999999983);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 19, (DAAL_DATA_TYPE)1.2315000000000003);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.0065047714189230971);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0080295176431536674);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[29], 1, 25, (DAAL_DATA_TYPE)1.4335000000000002);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 14, (DAAL_DATA_TYPE)-1.4454999999999998);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)0.010267177741560671);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.00028829527544635376);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0053705799139358787);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0099113172177096899);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[1], 1, 21, (DAAL_DATA_TYPE)1.0205000000000002);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 3, (DAAL_DATA_TYPE)1.7315000000000003);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.0029768988206207089);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)-0.0036113552703726584);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[39], 1, 5, (DAAL_DATA_TYPE)1.4125000000000003);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 6, (DAAL_DATA_TYPE)-1.8214999999999997);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.011813243275338954);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[44], 1, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.010423700325191021);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[46], 1, 18, (DAAL_DATA_TYPE)-1.3404999999999998);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.0095614610495520572);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 23, (DAAL_DATA_TYPE)1.2485000000000002);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 10, (DAAL_DATA_TYPE)1.0215000000000003);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 1, (DAAL_DATA_TYPE)-0.87749999999999984);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 23, (DAAL_DATA_TYPE)0.98950000000000016);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.011225427252550921);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.001704866475448376);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0019624919844617758);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0072525041355263626);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0073740142552802968);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[43], 1, 3, (DAAL_DATA_TYPE)1.8795000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0059111972111013699);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0067865008281336892);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree42(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 0, (DAAL_DATA_TYPE)1.8155000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 9, (DAAL_DATA_TYPE)1.3175000000000001);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 25, (DAAL_DATA_TYPE)0.95150000000000012);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 25, (DAAL_DATA_TYPE)0.66550000000000009);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 13, (DAAL_DATA_TYPE)1.3085000000000002);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 3, (DAAL_DATA_TYPE)0.33650000000000008);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 0, (DAAL_DATA_TYPE)1.1265000000000003);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)-0.00044995443574313463);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.017101523209185825);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.004193366364832374);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0062358393575306301);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[6], 1, 0, (DAAL_DATA_TYPE)1.3185000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 27, (DAAL_DATA_TYPE)0.96350000000000013);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 3, (DAAL_DATA_TYPE)0.9255000000000001);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 2, (DAAL_DATA_TYPE)-1.5534999999999999);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.0094599881424353681);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.0042827153467648741);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[16], 1, 23, (DAAL_DATA_TYPE)1.0015000000000003);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 21, (DAAL_DATA_TYPE)0.94650000000000001);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)-0.0018700177691155864);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)-0.011963306093702511);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.0029287699183434932);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.012332918592973759);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[14], 1, 9, (DAAL_DATA_TYPE)0.70550000000000013);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.00081213748816287882);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 23, (DAAL_DATA_TYPE)0.99450000000000005);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.020482407084533149);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.0012011089026927949);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[5], 1, 11, (DAAL_DATA_TYPE)1.5795000000000001);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0048004924840464886);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0057221159996355287);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0047833776441368742);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[3], 1, 27, (DAAL_DATA_TYPE)0.79050000000000009);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.013008394768071731);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[35], 1, 21, (DAAL_DATA_TYPE)0.9215000000000001);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.0027284780675071781);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)0.010289044656297741);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[2], 1, 15, (DAAL_DATA_TYPE)1.6805000000000001);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 5, (DAAL_DATA_TYPE)1.3260000000000003);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 25, (DAAL_DATA_TYPE)1.4915000000000003);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 25, (DAAL_DATA_TYPE)0.53150000000000019);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 1, (DAAL_DATA_TYPE)0.49250000000000005);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0021119742366400634);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.014737604048691297);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)0.0031024744860449083);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.0037017526413431231);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0054782533390941674);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.014048861153423787);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[1], 1, 0, (DAAL_DATA_TYPE)1.5030000000000003);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 5, (DAAL_DATA_TYPE)2.0995000000000004);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 1, (DAAL_DATA_TYPE)-1.4269999999999998);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.0068371887411922214);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 1, (DAAL_DATA_TYPE)1.8120000000000001);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.00032616901811305973);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.010420565193761951);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0070228955535976984);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[51], 1, 6, (DAAL_DATA_TYPE)1.3405000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.006419344848339878);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0076713853241766206);

}

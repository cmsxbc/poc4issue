 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree113(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 6, (DAAL_DATA_TYPE)-2.7564999999999995);
    builder.addLeafNode(treeId, nodeIds[1], 0, (DAAL_DATA_TYPE)-0.0085353008754875358);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[1], 1, 13, (DAAL_DATA_TYPE)0.30650000000000005);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 7, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.011078420359020432);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0021787461126223208);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[3], 1, 9, (DAAL_DATA_TYPE)0.90350000000000008);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 27, (DAAL_DATA_TYPE)1.6475000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 7, (DAAL_DATA_TYPE)-0.23649999999999996);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 24, (DAAL_DATA_TYPE)0.51550000000000018);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.011773791927844286);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 19, (DAAL_DATA_TYPE)-1.4704999999999997);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0058223583263655506);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)7.1947599176003002e-06);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[9], 1, 24, (DAAL_DATA_TYPE)0.51550000000000018);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)-0.014082982080678146);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[15], 1, 21, (DAAL_DATA_TYPE)1.0925000000000002);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.0014636114289003981);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 0, (DAAL_DATA_TYPE)0.9165000000000002);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 27, (DAAL_DATA_TYPE)0.78050000000000008);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.009031580155715346);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[20], 1, 6, (DAAL_DATA_TYPE)0.95250000000000001);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 19, (DAAL_DATA_TYPE)0.059500000000000004);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 6, (DAAL_DATA_TYPE)-0.038499999999999993);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0024425182491540909);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.011816751770675184);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.015983127964579541);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.00663534451276064);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[19], 1, 3, (DAAL_DATA_TYPE)0.95600000000000007);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 18, (DAAL_DATA_TYPE)0.37050000000000005);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.0052199400961399078);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0091510532157761722);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.012437699017794552);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.007794933689927514);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[7], 1, 27, (DAAL_DATA_TYPE)0.67850000000000021);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 2, (DAAL_DATA_TYPE)-0.98749999999999993);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.0039457477070391177);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.00749188629433331);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[35], 1, 26, (DAAL_DATA_TYPE)0.80550000000000022);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 10, (DAAL_DATA_TYPE)0.027500000000000004);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 18, (DAAL_DATA_TYPE)-0.67249999999999999);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.013376295470909492);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 10, (DAAL_DATA_TYPE)-0.30549999999999994);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.00076224907888504476);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.010564718663692475);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[40], 1, 20, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.0041132142332692941);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.0056698842758410861);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[39], 1, 9, (DAAL_DATA_TYPE)0.93750000000000011);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 23, (DAAL_DATA_TYPE)0.98650000000000004);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)-0.00025176458204021824);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 0, (DAAL_DATA_TYPE)0.78150000000000019);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.018416015463399476);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0052257502451539045);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.00038621328852756262);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[49], 1, 5, (DAAL_DATA_TYPE)0.50550000000000017);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 0, (DAAL_DATA_TYPE)0.62750000000000006);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0024557690180483319);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0096848522492668093);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.00019253838873646345);

}

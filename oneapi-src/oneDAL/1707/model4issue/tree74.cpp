 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree74(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 0, (DAAL_DATA_TYPE)1.1195000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 25, (DAAL_DATA_TYPE)0.46950000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 19, (DAAL_DATA_TYPE)-0.13249999999999998);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 7, (DAAL_DATA_TYPE)-1.0524999999999998);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)0.0085387353003025055);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 0, (DAAL_DATA_TYPE)0.58550000000000002);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 3, (DAAL_DATA_TYPE)1.2265000000000004);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.0050715023711804426);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.010330966345611073);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.011139975004282196);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[3], 1, 0, (DAAL_DATA_TYPE)0.40750000000000003);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)0.011262832168075774);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[11], 1, 2, (DAAL_DATA_TYPE)0.61150000000000004);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 5, (DAAL_DATA_TYPE)0.73450000000000004);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0098243240632262894);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 7, (DAAL_DATA_TYPE)0.30050000000000004);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.005400430387066257);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.011339300667697734);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[13], 1, 0, (DAAL_DATA_TYPE)0.75950000000000017);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)0.013495551235973836);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.00056144249226365778);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[2], 1, 0, (DAAL_DATA_TYPE)0.57150000000000001);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 5, (DAAL_DATA_TYPE)0.50050000000000006);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 17, (DAAL_DATA_TYPE)0.9145000000000002);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.011732118941367942);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.00098383913713472873);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[23], 1, 7, (DAAL_DATA_TYPE)-1.1954999999999998);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 10, (DAAL_DATA_TYPE)0.93650000000000022);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 11, (DAAL_DATA_TYPE)0.26850000000000007);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 22, (DAAL_DATA_TYPE)0.88350000000000006);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.00019073782658035105);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.013894212821667846);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.00078132989288154831);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.004102495036116152);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[27], 1, 25, (DAAL_DATA_TYPE)1.8525000000000003);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 26, (DAAL_DATA_TYPE)1.4625000000000001);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 6, (DAAL_DATA_TYPE)1.3405000000000002);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 2, (DAAL_DATA_TYPE)-1.6284999999999996);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0096326667385605667);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 2, (DAAL_DATA_TYPE)-1.4674999999999998);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.011168701644684817);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)-0.00029115797498486818);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0082605153614399487);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[36], 1, 17, (DAAL_DATA_TYPE)0.68250000000000022);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.0033780046516940707);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.010995904575767261);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.007686027193752428);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[22], 1, 13, (DAAL_DATA_TYPE)1.4135000000000002);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 15, (DAAL_DATA_TYPE)1.6385000000000003);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 15, (DAAL_DATA_TYPE)1.4675000000000002);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 3, (DAAL_DATA_TYPE)0.16350000000000003);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.012720388988101926);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.011629664525389672);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.00094892647087200166);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.0051221459409730007);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)0.0084495972982555068);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[48], 1, 10, (DAAL_DATA_TYPE)-1.4834999999999998);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0061269985511899);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0047843681221544912);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.00076334279318969185);

}

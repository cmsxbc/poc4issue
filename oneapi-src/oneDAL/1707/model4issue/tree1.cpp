 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree1(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.2815000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.81150000000000022);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 5, (DAAL_DATA_TYPE)0.82050000000000012);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 26, (DAAL_DATA_TYPE)0.76750000000000018);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 24, (DAAL_DATA_TYPE)0.71850000000000003);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.52614264377678377);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.51780202398744701);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 25, (DAAL_DATA_TYPE)0.96550000000000014);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 25, (DAAL_DATA_TYPE)0.59250000000000014);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.52131428556782855);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.53677042591870572);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.51454155829510129);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[3], 1, 25, (DAAL_DATA_TYPE)0.58150000000000002);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 17, (DAAL_DATA_TYPE)1.3585000000000003);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.52425476175830477);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.54295064920419223);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.53627080730695897);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)0.63950000000000007);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 3, (DAAL_DATA_TYPE)1.7525000000000002);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 5, (DAAL_DATA_TYPE)1.5755000000000001);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.52768637859108436);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.54240952366306661);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[19], 1, 23, (DAAL_DATA_TYPE)1.0045000000000002);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.51293497522300091);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.53078487380312267);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[18], 1, 25, (DAAL_DATA_TYPE)0.98450000000000004);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 26, (DAAL_DATA_TYPE)1.0535000000000003);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 5, (DAAL_DATA_TYPE)0.89050000000000018);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 3, (DAAL_DATA_TYPE)1.3845000000000003);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)0.54248996124350424);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[29], 1, 26, (DAAL_DATA_TYPE)0.89450000000000018);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.52098095223449525);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 9, (DAAL_DATA_TYPE)0.74550000000000016);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.52689493072911886);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)0.54741773384369063);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.54750641869944727);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[27], 1, 3, (DAAL_DATA_TYPE)2.1315000000000004);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.53741567721792793);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)0.51908701284055581);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[26], 1, 22, (DAAL_DATA_TYPE)1.0355000000000001);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 22, (DAAL_DATA_TYPE)0.81650000000000011);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.53365560293309799);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 18, (DAAL_DATA_TYPE)-1.6684999999999997);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.54479047604401898);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)0.52401537252435026);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.53683176808531108);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[1], 1, 26, (DAAL_DATA_TYPE)1.0095000000000003);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 10, (DAAL_DATA_TYPE)0.57750000000000001);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 22, (DAAL_DATA_TYPE)0.99250000000000005);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.52593590718945016);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)0.53931428556782857);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.51681428556782849);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[47], 1, 24, (DAAL_DATA_TYPE)1.2565000000000002);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.51399170492266721);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 25, (DAAL_DATA_TYPE)1.5165000000000002);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.53250577492953066);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[55], 1, 17, (DAAL_DATA_TYPE)1.4605000000000004);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.5151056524743034);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 3, (DAAL_DATA_TYPE)1.2635000000000003);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.54264761890116187);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.51859999985354277);

}

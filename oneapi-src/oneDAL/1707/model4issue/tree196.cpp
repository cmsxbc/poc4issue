 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree196(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 26, (DAAL_DATA_TYPE)0.72850000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 23, (DAAL_DATA_TYPE)1.2555000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 13, (DAAL_DATA_TYPE)0.38750000000000007);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.0051233280978694156);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 1, (DAAL_DATA_TYPE)-0.0084999999999999989);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 3, (DAAL_DATA_TYPE)0.39450000000000007);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 6, (DAAL_DATA_TYPE)-0.55649999999999988);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.0020441152248531582);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0090164064922753501);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[6], 1, 15, (DAAL_DATA_TYPE)-0.076499999999999985);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 19, (DAAL_DATA_TYPE)0.99550000000000016);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 17, (DAAL_DATA_TYPE)0.5335000000000002);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.0049753907003573013);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 23, (DAAL_DATA_TYPE)1.0005000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 22, (DAAL_DATA_TYPE)0.84350000000000003);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.0094272178038954744);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.0030004482377659191);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.013058840999236473);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.0043825818725475455);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[10], 1, 6, (DAAL_DATA_TYPE)0.45850000000000007);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 1, (DAAL_DATA_TYPE)-0.42349999999999993);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 7, (DAAL_DATA_TYPE)0.13950000000000004);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0087155251178977107);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.0012810873714360323);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.0030820548534393312);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.01055369998017947);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[5], 1, 4, (DAAL_DATA_TYPE)1.3185000000000002);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 10, (DAAL_DATA_TYPE)1.0775000000000003);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 4, (DAAL_DATA_TYPE)-0.83249999999999991);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 16, (DAAL_DATA_TYPE)1.9110000000000003);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 26, (DAAL_DATA_TYPE)0.65150000000000008);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.00067121340405373354);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.011999633293598891);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0064958685999736187);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[29], 1, 3, (DAAL_DATA_TYPE)0.9255000000000001);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 13, (DAAL_DATA_TYPE)0.89950000000000008);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 1, (DAAL_DATA_TYPE)0.37250000000000005);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.012921311698543528);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 3, (DAAL_DATA_TYPE)0.64550000000000007);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0067510816191012667);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.0032021679915487768);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.0054387849103659392);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0087288877693936229);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[28], 1, 3, (DAAL_DATA_TYPE)0.88750000000000007);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.013094319523695639);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0022384116891771555);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.0031763884968854291);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0056705870266471597);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[1], 1, 26, (DAAL_DATA_TYPE)0.73850000000000005);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 23, (DAAL_DATA_TYPE)0.98950000000000016);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.012123786796022345);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.00025119133293628694);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 6, (DAAL_DATA_TYPE)2.1875000000000004);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 9, (DAAL_DATA_TYPE)0.69950000000000012);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.00067529967176738724);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[54], 1, 6, (DAAL_DATA_TYPE)1.7200000000000004);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.00029753378101991432);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.0052817765405390764);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[53], 1, 10, (DAAL_DATA_TYPE)0.11350000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0011263953056186438);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0067800418726856942);

}

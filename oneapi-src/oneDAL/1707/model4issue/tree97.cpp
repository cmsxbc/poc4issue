 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree97(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90250000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)1.1165000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 17, (DAAL_DATA_TYPE)1.1705000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 19, (DAAL_DATA_TYPE)1.7085000000000001);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 19, (DAAL_DATA_TYPE)1.6535000000000002);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-2.9392597255738158e-05);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0094807789660990242);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)-0.0097738807167236999);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0019400665460924376);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.010734702792504561);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[1], 1, 21, (DAAL_DATA_TYPE)0.44800000000000006);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0071794808584641906);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[11], 1, 24, (DAAL_DATA_TYPE)1.1465000000000003);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 2, (DAAL_DATA_TYPE)1.6955000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 22, (DAAL_DATA_TYPE)1.9085000000000003);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 18, (DAAL_DATA_TYPE)0.75050000000000006);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 22, (DAAL_DATA_TYPE)1.6755000000000002);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 27, (DAAL_DATA_TYPE)0.99050000000000005);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 18, (DAAL_DATA_TYPE)-0.43149999999999994);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 2, (DAAL_DATA_TYPE)-0.68749999999999989);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.0066199475575400429);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0046799896876941359);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[19], 1, 0, (DAAL_DATA_TYPE)1.1415000000000002);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)-0.010231283189857315);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0019717017953683222);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[18], 1, 27, (DAAL_DATA_TYPE)1.5265000000000002);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 6, (DAAL_DATA_TYPE)-1.9649999999999999);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.012442656517738388);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.00064771384258261507);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0081116828510338183);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.011105085100586477);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[16], 1, 9, (DAAL_DATA_TYPE)0.53150000000000019);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.008528265525256434);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 9, (DAAL_DATA_TYPE)0.70550000000000013);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)0.010839945557527245);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[34], 1, 22, (DAAL_DATA_TYPE)1.4325000000000003);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 2, (DAAL_DATA_TYPE)-1.3964999999999999);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.01125185886770487);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0023760753771926123);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.0099258452584898033);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[15], 1, 21, (DAAL_DATA_TYPE)3.5915000000000004);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.012457334235883676);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.0052475547938443286);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.0088716593682765972);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[13], 1, 27, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 1, (DAAL_DATA_TYPE)-0.98649999999999982);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.011149010403702657);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[46], 1, 25, (DAAL_DATA_TYPE)1.4475000000000002);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 5, (DAAL_DATA_TYPE)0.94650000000000001);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.0010794872870144336);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)0.0064459177218377586);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.0084093093151046388);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[45], 1, 2, (DAAL_DATA_TYPE)1.5225000000000002);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 9, (DAAL_DATA_TYPE)1.6925000000000001);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 1, (DAAL_DATA_TYPE)-1.1559999999999999);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0054715222687177038);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.0001620941492386491);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[54], 1, 23, (DAAL_DATA_TYPE)0.98450000000000004);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.014834819039186606);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.001991516910049887);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0071768628568811849);

}

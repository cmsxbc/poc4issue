 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree194(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)0.94550000000000012);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 24, (DAAL_DATA_TYPE)2.2220000000000004);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)0.00038495411310129549);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.007385788971315259);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[1], 1, 15, (DAAL_DATA_TYPE)-1.6534999999999997);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 18, (DAAL_DATA_TYPE)0.27050000000000007);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0097737623775308886);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.00079704018739553599);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[5], 1, 19, (DAAL_DATA_TYPE)1.6045000000000003);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 14, (DAAL_DATA_TYPE)0.34350000000000008);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 21, (DAAL_DATA_TYPE)0.83550000000000002);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 2, (DAAL_DATA_TYPE)-0.97449999999999981);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.006493447495760459);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 21, (DAAL_DATA_TYPE)0.74450000000000005);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 0, (DAAL_DATA_TYPE)0.64350000000000007);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 2, (DAAL_DATA_TYPE)0.13150000000000003);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0010000646713056735);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.011687596799696193);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[15], 1, 4, (DAAL_DATA_TYPE)0.34350000000000008);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 9, (DAAL_DATA_TYPE)0.95650000000000002);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)-0.0019432815569664606);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.0094762790242605144);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.0048487330740317712);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[14], 1, 2, (DAAL_DATA_TYPE)-0.45149999999999996);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0066140974184409496);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 1, (DAAL_DATA_TYPE)0.61050000000000015);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.0072503595414213987);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.0025234248247687466);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[11], 1, 19, (DAAL_DATA_TYPE)-0.052999999999999992);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 2, (DAAL_DATA_TYPE)-1.1099999999999997);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.0047020506871453789);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0019128318281466331);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.0019271684668359464);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[10], 1, 21, (DAAL_DATA_TYPE)0.7915000000000002);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 9, (DAAL_DATA_TYPE)0.49350000000000005);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0086083590645681732);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[35], 1, 19, (DAAL_DATA_TYPE)0.25750000000000006);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 25, (DAAL_DATA_TYPE)1.6305000000000003);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 17, (DAAL_DATA_TYPE)0.5545000000000001);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0010026155039668083);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.011371245760503308);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.0012100894060550315);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0022986089080618121);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[34], 1, 0, (DAAL_DATA_TYPE)1.6635000000000002);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 9, (DAAL_DATA_TYPE)1.3035000000000003);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 17, (DAAL_DATA_TYPE)1.3855000000000002);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.0062983568970842556);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[46], 1, 1, (DAAL_DATA_TYPE)0.39450000000000007);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.0044288459256654833);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.0053117135046597793);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[45], 1, 22, (DAAL_DATA_TYPE)1.7575000000000001);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 22, (DAAL_DATA_TYPE)1.0795000000000001);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 17, (DAAL_DATA_TYPE)1.0565000000000002);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0014276224199593777);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0079938719539928271);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0066406670843584927);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0094112492643365509);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0018582852399771266);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[9], 1, 18, (DAAL_DATA_TYPE)0.64350000000000007);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.00096765363081690995);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.010269346653616854);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree3(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.2815000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.81150000000000022);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 5, (DAAL_DATA_TYPE)0.82050000000000012);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.0070380873226893199);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 27, (DAAL_DATA_TYPE)0.9195000000000001);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 5, (DAAL_DATA_TYPE)1.3665000000000003);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.00067604586245521674);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.012849513938029609);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.018113954441669661);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[2], 1, 27, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 5, (DAAL_DATA_TYPE)0.88150000000000006);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 25, (DAAL_DATA_TYPE)1.0975000000000004);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 25, (DAAL_DATA_TYPE)0.66550000000000009);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.0010861298047948158);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[13], 1, 26, (DAAL_DATA_TYPE)0.86950000000000005);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 27, (DAAL_DATA_TYPE)0.79950000000000021);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)0.010200137091246812);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[16], 1, 4, (DAAL_DATA_TYPE)-0.039499999999999993);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)-0.019624719948604191);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0039134555711196018);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.013541559815546717);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[12], 1, 26, (DAAL_DATA_TYPE)0.9295000000000001);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.014483564475487019);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.0064667537311712906);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[11], 1, 25, (DAAL_DATA_TYPE)0.6905);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0067152369121710465);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 25, (DAAL_DATA_TYPE)1.0455000000000003);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.017953310242268893);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.0062309793658084705);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[10], 1, 22, (DAAL_DATA_TYPE)1.0485000000000002);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 24, (DAAL_DATA_TYPE)1.0515000000000001);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.014046499682100198);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 25, (DAAL_DATA_TYPE)0.62350000000000005);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.0070918777263632013);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 25, (DAAL_DATA_TYPE)0.99250000000000005);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 3, (DAAL_DATA_TYPE)1.6895000000000002);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0095211970342530157);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.0037213523872196676);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0021482542157173156);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[30], 1, 25, (DAAL_DATA_TYPE)0.69450000000000001);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.0033086598845002077);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[40], 1, 9, (DAAL_DATA_TYPE)1.2815000000000001);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 4, (DAAL_DATA_TYPE)1.5885000000000002);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 6, (DAAL_DATA_TYPE)-1.6799999999999999);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.012296642425159614);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.006685079744568577);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.015867001922042281);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.013205974535670822);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[1], 1, 27, (DAAL_DATA_TYPE)0.89550000000000007);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 21, (DAAL_DATA_TYPE)1.0925000000000002);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0061925473682423859);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.013712704461067916);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 24, (DAAL_DATA_TYPE)1.2485000000000002);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.016707416923987108);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 25, (DAAL_DATA_TYPE)1.4755000000000003);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.0030265899418398393);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[55], 1, 3, (DAAL_DATA_TYPE)1.8975000000000002);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 17, (DAAL_DATA_TYPE)1.4605000000000004);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.012478243295601973);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0055231934102873007);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.025217390619218349);

}

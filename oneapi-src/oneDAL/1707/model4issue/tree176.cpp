 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree176(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 23, (DAAL_DATA_TYPE)0.97750000000000015);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)1.2855000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 24, (DAAL_DATA_TYPE)0.88750000000000007);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 4, (DAAL_DATA_TYPE)-1.0364999999999998);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.0067694792966358358);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 21, (DAAL_DATA_TYPE)0.92450000000000021);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 2, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.013186884280294181);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.001923756623485436);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.0055272027172825556);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[3], 1, 6, (DAAL_DATA_TYPE)0.42550000000000004);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 5, (DAAL_DATA_TYPE)1.0275000000000001);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.0017982705066410397);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.012538334354758263);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.015104551166938297);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[2], 1, 26, (DAAL_DATA_TYPE)1.5475000000000001);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0097345723331229584);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.0027240019521559589);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[1], 1, 23, (DAAL_DATA_TYPE)0.97950000000000015);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 19, (DAAL_DATA_TYPE)0.76250000000000007);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 27, (DAAL_DATA_TYPE)0.90250000000000019);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 26, (DAAL_DATA_TYPE)0.73350000000000015);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0086284167387268764);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 26, (DAAL_DATA_TYPE)0.91750000000000009);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0069417651175804757);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0028941832756875859);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[21], 1, 9, (DAAL_DATA_TYPE)1.0875000000000001);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)-0.012492774571809504);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.0032831447509427871);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.0029735487002956994);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[19], 1, 17, (DAAL_DATA_TYPE)0.41850000000000004);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 2, (DAAL_DATA_TYPE)0.29050000000000004);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 19, (DAAL_DATA_TYPE)1.0630000000000004);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 3, (DAAL_DATA_TYPE)0.6775000000000001);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.0052164810227936717);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[34], 1, 21, (DAAL_DATA_TYPE)0.62050000000000016);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.009599850614639846);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.0007470311491840309);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0075769229404007397);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[32], 1, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.0020323017947533628);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[40], 1, 22, (DAAL_DATA_TYPE)0.88950000000000007);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.0039545452804304665);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.012813235837249802);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[31], 1, 3, (DAAL_DATA_TYPE)0.82550000000000001);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 0, (DAAL_DATA_TYPE)1.1265000000000003);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 10, (DAAL_DATA_TYPE)-2.2724999999999995);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)0.01069050111215223);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.0010324031187845819);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.00099941453374044822);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[45], 1, 23, (DAAL_DATA_TYPE)0.99050000000000005);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 10, (DAAL_DATA_TYPE)1.7005000000000001);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0012168837843674089);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0075653969204791316);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[51], 1, 7, (DAAL_DATA_TYPE)1.3325000000000002);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[55], 0, 10, (DAAL_DATA_TYPE)-1.3164999999999998);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[56], 0, 23, (DAAL_DATA_TYPE)1.1615000000000002);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.0079729695962224567);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.0029996649509795559);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0002088967638544949);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.0033164059561122347);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree124(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 0, (DAAL_DATA_TYPE)1.3185000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 23, (DAAL_DATA_TYPE)1.4695000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 25, (DAAL_DATA_TYPE)0.22450000000000003);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.0051105803251266478);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 25, (DAAL_DATA_TYPE)0.30650000000000005);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 26, (DAAL_DATA_TYPE)0.83350000000000002);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0010066456054566339);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.014600428559437948);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[5], 1, 25, (DAAL_DATA_TYPE)0.5375000000000002);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)-0.0021381432290807586);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.00047469873706322031);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)0.90050000000000019);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.010321730475236731);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.00078116318181855606);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[1], 1, 0, (DAAL_DATA_TYPE)1.5645000000000002);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 9, (DAAL_DATA_TYPE)0.69950000000000012);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 4, (DAAL_DATA_TYPE)-0.88649999999999995);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.0080597315228691218);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 26, (DAAL_DATA_TYPE)0.85350000000000004);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0069925661203028124);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0031026889281026253);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[16], 1, 9, (DAAL_DATA_TYPE)0.82350000000000001);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 14, (DAAL_DATA_TYPE)0.50400000000000011);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)-0.012363248961228951);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.001768007818609476);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[22], 1, 6, (DAAL_DATA_TYPE)1.0845000000000002);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 0, (DAAL_DATA_TYPE)1.4695000000000003);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 21, (DAAL_DATA_TYPE)0.96250000000000002);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 13, (DAAL_DATA_TYPE)0.74050000000000005);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.0071327914439496543);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[29], 1, 7, (DAAL_DATA_TYPE)0.018500000000000003);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0012652694023147758);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.011012640174478294);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.0088103651570586063);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.0087281531584449106);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.0031637625684735973);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[15], 1, 5, (DAAL_DATA_TYPE)0.83550000000000002);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 15, (DAAL_DATA_TYPE)-1.478);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.0070340656116604817);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 15, (DAAL_DATA_TYPE)0.99400000000000011);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 23, (DAAL_DATA_TYPE)1.4845000000000004);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.0066048270362344666);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.004170541272944083);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 19, (DAAL_DATA_TYPE)0.092000000000000012);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.0073405835734281152);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0077127458616381601);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[37], 1, 10, (DAAL_DATA_TYPE)0.59650000000000014);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 2, (DAAL_DATA_TYPE)-1.3584999999999998);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.0048371978485110129);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 21, (DAAL_DATA_TYPE)2.1065000000000005);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 25, (DAAL_DATA_TYPE)0.73750000000000016);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 4, (DAAL_DATA_TYPE)-0.48049999999999993);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0014746302805308785);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.011525819121015957);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[51], 1, 25, (DAAL_DATA_TYPE)0.84450000000000014);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.0045911661928167216);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.0034402424068035991);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0057968937459268741);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[47], 1, 0, (DAAL_DATA_TYPE)1.6975000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0093806953867897405);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.00085560853856251294);

}

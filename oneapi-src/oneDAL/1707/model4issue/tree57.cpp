 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree57(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90250000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 17, (DAAL_DATA_TYPE)1.5715000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 18, (DAAL_DATA_TYPE)0.025500000000000005);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 13, (DAAL_DATA_TYPE)0.99750000000000016);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 0, (DAAL_DATA_TYPE)0.59150000000000003);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 11, (DAAL_DATA_TYPE)0.64950000000000008);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 3, (DAAL_DATA_TYPE)1.0135000000000003);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 21, (DAAL_DATA_TYPE)0.81150000000000022);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.010233327939078727);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[8], 1, 20, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.0085331189313105175);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.006096716970205307);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.0094687502882252004);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.012272567376494408);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.00069601770499947736);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0014611651098242881);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[3], 1, 3, (DAAL_DATA_TYPE)0.37750000000000006);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 14, (DAAL_DATA_TYPE)1.4745000000000001);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 9, (DAAL_DATA_TYPE)0.77850000000000008);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 5, (DAAL_DATA_TYPE)0.74850000000000005);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.0092186363199009344);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0045980044612378788);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[19], 1, 19, (DAAL_DATA_TYPE)1.0965000000000003);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 0, (DAAL_DATA_TYPE)1.1495000000000002);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0048982799268112737);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.010731410030876437);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.016327942473193011);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.017458325605839493);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.0020319428941888203);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0050478444853436577);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.0755000000000001);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 22, (DAAL_DATA_TYPE)1.0625000000000002);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.004050555296055117);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 18, (DAAL_DATA_TYPE)-1.2709999999999997);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.0064405433203972564);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[34], 1, 0, (DAAL_DATA_TYPE)0.82150000000000001);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0042807347258206592);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 13, (DAAL_DATA_TYPE)1.0175000000000003);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 22, (DAAL_DATA_TYPE)1.2375000000000003);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-5.2346002000073592e-05);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.011874467543527193);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[38], 1, 2, (DAAL_DATA_TYPE)-0.48249999999999993);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.0029590526253593214);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 10, (DAAL_DATA_TYPE)0.067500000000000018);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.016254563822790429);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0010606564129843857);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[31], 1, 11, (DAAL_DATA_TYPE)1.4915000000000003);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 2, (DAAL_DATA_TYPE)-1.6734999999999998);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.0093722226290867249);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 2, (DAAL_DATA_TYPE)1.5095000000000003);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 13, (DAAL_DATA_TYPE)0.45050000000000007);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.008129315791385516);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 5, (DAAL_DATA_TYPE)1.1425000000000003);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.00051184703632804491);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0032249556393985574);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[50], 1, 27, (DAAL_DATA_TYPE)1.0145000000000002);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)0.0061579454828191689);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.00899610339057824);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[47], 1, 18, (DAAL_DATA_TYPE)0.13550000000000004);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.00019733388705745988);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.012507386521456091);

}

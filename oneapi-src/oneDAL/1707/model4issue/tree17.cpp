 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree17(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)0.88450000000000017);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 26, (DAAL_DATA_TYPE)0.73350000000000015);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 24, (DAAL_DATA_TYPE)0.71850000000000003);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.0017733085597783011);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 23, (DAAL_DATA_TYPE)1.2555000000000003);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)-0.010394535579814993);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.005601843378760598);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[3], 1, 24, (DAAL_DATA_TYPE)0.75750000000000017);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.004858776162499967);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[9], 1, 0, (DAAL_DATA_TYPE)1.8155000000000003);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 17, (DAAL_DATA_TYPE)0.57750000000000001);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.0048860041505616649);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 26, (DAAL_DATA_TYPE)0.83850000000000013);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0034882472157478335);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 27, (DAAL_DATA_TYPE)0.88650000000000018);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 11, (DAAL_DATA_TYPE)-1.2414999999999998);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.0044539492176129273);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.0056195675133118642);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.0029155133352164304);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.0067481253500823145);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[2], 1, 5, (DAAL_DATA_TYPE)1.5525000000000002);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 27, (DAAL_DATA_TYPE)0.85750000000000004);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 26, (DAAL_DATA_TYPE)0.7945000000000001);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 2, (DAAL_DATA_TYPE)-1.2954999999999999);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)-0.013056012175299905);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 5, (DAAL_DATA_TYPE)1.0525000000000002);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)-0.0026455454362763302);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.0082315819878731999);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.0067774210005037252);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[23], 1, 24, (DAAL_DATA_TYPE)1.1965000000000001);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 21, (DAAL_DATA_TYPE)1.6305000000000003);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 26, (DAAL_DATA_TYPE)0.9295000000000001);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 21, (DAAL_DATA_TYPE)0.93950000000000011);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.017633616924285889);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.0013470384478569031);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[33], 1, 24, (DAAL_DATA_TYPE)0.76450000000000007);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.0094261778108144217);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 15, (DAAL_DATA_TYPE)-1.2139999999999997);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0069064084897961543);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.0034040565177855366);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.015756530083459001);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0072153331156362566);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.010592788585809747);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.0035000000000001);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 0, (DAAL_DATA_TYPE)1.3615000000000002);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 24, (DAAL_DATA_TYPE)0.80850000000000011);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 10, (DAAL_DATA_TYPE)-0.5149999999999999);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.00765687204126654);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.0040702805079911889);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0081003303421474295);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.014102348518722198);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[45], 1, 3, (DAAL_DATA_TYPE)1.8535000000000001);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 5, (DAAL_DATA_TYPE)1.8805000000000003);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)-0.00062845783175453354);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[54], 1, 23, (DAAL_DATA_TYPE)1.3645000000000003);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)0.012226092474801199);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.0061639709770679478);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[53], 1, 26, (DAAL_DATA_TYPE)1.0805000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0039347974743161882);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.010750012422775056);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree198(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 4, (DAAL_DATA_TYPE)1.6505000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 6, (DAAL_DATA_TYPE)2.1875000000000004);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 15, (DAAL_DATA_TYPE)0.99400000000000011);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-5.2787696981428214e-05);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 14, (DAAL_DATA_TYPE)-1.1214999999999999);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 3, (DAAL_DATA_TYPE)0.52750000000000019);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0088138331141736775);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 10, (DAAL_DATA_TYPE)0.60650000000000015);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0011727394003267447);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0084350999687676839);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[5], 1, 1, (DAAL_DATA_TYPE)-0.15249999999999997);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 24, (DAAL_DATA_TYPE)0.59450000000000014);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0049146082929589531);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 1, (DAAL_DATA_TYPE)-0.45449999999999996);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 18, (DAAL_DATA_TYPE)0.50050000000000006);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 2, (DAAL_DATA_TYPE)-0.36349999999999993);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.006950374572472863);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[16], 1, 7, (DAAL_DATA_TYPE)-0.91449999999999998);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 1, (DAAL_DATA_TYPE)-1.1204999999999998);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.013594270087778568);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.00186371128444686);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[18], 1, 3, (DAAL_DATA_TYPE)0.88050000000000017);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0032029651042134706);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.0057107293433169039);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[15], 1, 4, (DAAL_DATA_TYPE)-0.20899999999999996);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)-0.0026807003100180909);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.0057726375053863271);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[14], 1, 6, (DAAL_DATA_TYPE)-0.81649999999999989);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.00078842837322989239);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.0092871323240640239);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[11], 1, 9, (DAAL_DATA_TYPE)1.4455000000000002);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 1, (DAAL_DATA_TYPE)-0.027499999999999997);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0071581907542970259);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[32], 1, 26, (DAAL_DATA_TYPE)0.76750000000000018);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 0, (DAAL_DATA_TYPE)0.98850000000000005);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0013930466026067735);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.010184258160491785);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[34], 1, 10, (DAAL_DATA_TYPE)-1.3164999999999998);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.0071292732376605277);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 17, (DAAL_DATA_TYPE)0.86850000000000016);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.00086337585156532324);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.003013285821665098);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[31], 1, 18, (DAAL_DATA_TYPE)-0.15449999999999997);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.01255575861208714);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.00069872657248274761);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[2], 1, 21, (DAAL_DATA_TYPE)0.82450000000000012);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.010411578137427569);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[46], 1, 10, (DAAL_DATA_TYPE)0.11350000000000002);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.0058944207383319737);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.0041350930523222839);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[1], 1, 1, (DAAL_DATA_TYPE)-0.18149999999999997);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 23, (DAAL_DATA_TYPE)0.98750000000000016);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0052266491843121392);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[52], 1, 3, (DAAL_DATA_TYPE)0.93250000000000022);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)-0.0040123217019506479);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.007707346656492778);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[51], 1, 17, (DAAL_DATA_TYPE)0.63050000000000017);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.001766758253797889);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 1, (DAAL_DATA_TYPE)0.72850000000000004);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.011171068447031852);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0032038846856047368);

}

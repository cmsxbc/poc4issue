 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree109(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 4, (DAAL_DATA_TYPE)1.7245000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.58550000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 24, (DAAL_DATA_TYPE)0.71450000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 24, (DAAL_DATA_TYPE)0.5675);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.0083921223440591025);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[4], 1, 21, (DAAL_DATA_TYPE)0.82250000000000012);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)-0.0067944798957217823);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0075157411529549537);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)-0.011759456545114517);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[2], 1, 24, (DAAL_DATA_TYPE)0.75750000000000017);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 7, (DAAL_DATA_TYPE)-1.6634999999999998);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.010175416409969331);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[11], 1, 17, (DAAL_DATA_TYPE)1.1705000000000003);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.009192786856482808);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 24, (DAAL_DATA_TYPE)0.69850000000000001);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 0, (DAAL_DATA_TYPE)1.9755000000000003);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 6, (DAAL_DATA_TYPE)0.14450000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 17, (DAAL_DATA_TYPE)1.0905000000000002);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 9, (DAAL_DATA_TYPE)0.82850000000000013);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.0043577802257560609);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.002122392186579565);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.0095912729545185975);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[18], 1, 7, (DAAL_DATA_TYPE)0.84650000000000014);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.0054029524571338108);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.002823742203957712);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.0072808434654559415);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[16], 1, 27, (DAAL_DATA_TYPE)0.84250000000000014);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 19, (DAAL_DATA_TYPE)-0.65199999999999991);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)0.008754277505795471);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[29], 1, 25, (DAAL_DATA_TYPE)1.0145000000000002);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.0040362741375910274);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)-0.008574025966227054);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[28], 1, 5, (DAAL_DATA_TYPE)0.83150000000000002);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 27, (DAAL_DATA_TYPE)0.88950000000000007);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0136951806768775);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.00036064979874274945);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)0.0027619085503885381);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[13], 1, 13, (DAAL_DATA_TYPE)0.65950000000000009);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0028292503452394158);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 26, (DAAL_DATA_TYPE)0.73350000000000015);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.00012874528005415081);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 5, (DAAL_DATA_TYPE)0.9425);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.010104880646191618);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 17, (DAAL_DATA_TYPE)1.3485000000000003);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.010381461410783232);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[45], 1, 6, (DAAL_DATA_TYPE)0.013500000000000002);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)0.0075025657711945389);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0062034354017426567);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[10], 1, 24, (DAAL_DATA_TYPE)0.76750000000000018);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 15, (DAAL_DATA_TYPE)0.74650000000000005);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 15, (DAAL_DATA_TYPE)-0.19749999999999998);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 9, (DAAL_DATA_TYPE)0.81050000000000011);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.011050756201148034);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0046756974542168555);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.014308453500936076);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0042752486537210648);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[50], 1, 25, (DAAL_DATA_TYPE)0.30650000000000005);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.0050402061082422739);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-2.1871631424144515e-05);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.0065494731357771787);

}

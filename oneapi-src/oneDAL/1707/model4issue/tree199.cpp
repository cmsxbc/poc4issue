 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree199(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 22, (DAAL_DATA_TYPE)0.6925);
    builder.addLeafNode(treeId, nodeIds[1], 0, (DAAL_DATA_TYPE)0.0013078300566519865);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[1], 1, 10, (DAAL_DATA_TYPE)0.74350000000000016);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.00045495665541000807);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 25, (DAAL_DATA_TYPE)0.44450000000000006);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 17, (DAAL_DATA_TYPE)0.76450000000000007);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 27, (DAAL_DATA_TYPE)0.81650000000000011);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.0048414048321288213);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0096860965096857415);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)-0.008077351242866156);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[5], 1, 19, (DAAL_DATA_TYPE)1.639);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 0, (DAAL_DATA_TYPE)0.56150000000000022);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 19, (DAAL_DATA_TYPE)1.2125000000000001);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 20, (DAAL_DATA_TYPE)2.3265000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 10, (DAAL_DATA_TYPE)1.3785000000000001);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)-0.0045458998978854378);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.0030831867677939906);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[14], 1, 10, (DAAL_DATA_TYPE)1.4215000000000002);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.0083292039476234366);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.0019683810249262025);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)-0.0091567795585702962);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[12], 1, 22, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 22, (DAAL_DATA_TYPE)0.94650000000000001);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 4, (DAAL_DATA_TYPE)-0.36049999999999993);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 4, (DAAL_DATA_TYPE)-1.1624999999999999);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0032278512306511404);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 2, (DAAL_DATA_TYPE)-0.71599999999999986);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.0025992591939866545);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.0026823139102715586);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)-0.01339272595404719);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[24], 1, 21, (DAAL_DATA_TYPE)0.9125000000000002);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 6, (DAAL_DATA_TYPE)-0.41149999999999992);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.0058857464856312929);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 7, (DAAL_DATA_TYPE)-0.62749999999999984);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.0093987818130037998);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[35], 1, 19, (DAAL_DATA_TYPE)-0.38549999999999995);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.0044200353079328408);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0048795346650436075);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[32], 1, 26, (DAAL_DATA_TYPE)0.81450000000000011);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.015368979765723149);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.004472352233567527);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[23], 1, 10, (DAAL_DATA_TYPE)0.85850000000000015);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.011581027117342903);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 11, (DAAL_DATA_TYPE)-0.48749999999999993);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.0037914550637431219);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)-0.0043678220791901513);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[22], 1, 14, (DAAL_DATA_TYPE)-0.75299999999999989);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 2, (DAAL_DATA_TYPE)0.34950000000000003);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.0036077433382160962);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.0097479151900519024);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[48], 1, 6, (DAAL_DATA_TYPE)0.31100000000000005);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 3, (DAAL_DATA_TYPE)1.2495000000000003);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 1, (DAAL_DATA_TYPE)0.46700000000000008);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.0093385697992215324);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.00044103117961640241);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.013401965908706188);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[52], 1, 13, (DAAL_DATA_TYPE)0.96550000000000014);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0032548621567939206);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0059227407316706998);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.0075879781571184775);

}

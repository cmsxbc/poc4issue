 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree91(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 19, (DAAL_DATA_TYPE)1.0630000000000004);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 21, (DAAL_DATA_TYPE)0.95750000000000013);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.0019519559411412997);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.011200485556301746);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.0044771660196905342);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[1], 1, 18, (DAAL_DATA_TYPE)-1.3404999999999998);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 21, (DAAL_DATA_TYPE)1.0425000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 23, (DAAL_DATA_TYPE)0.98550000000000015);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 1, (DAAL_DATA_TYPE)0.12850000000000003);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.0022611968903517238);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)-0.01525685465335846);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[9], 1, 21, (DAAL_DATA_TYPE)0.97850000000000004);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 3, (DAAL_DATA_TYPE)0.42050000000000004);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.0079414312727749351);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 23, (DAAL_DATA_TYPE)0.99250000000000005);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 4, (DAAL_DATA_TYPE)-0.15549999999999997);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.010770655798448905);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 3, (DAAL_DATA_TYPE)0.76450000000000007);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0095141841267997584);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0038118782220408322);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[16], 1, 23, (DAAL_DATA_TYPE)1.0885000000000002);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.0071553281526647366);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.0038676778633648964);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.011601243864582934);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[8], 1, 21, (DAAL_DATA_TYPE)1.3465000000000003);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.013922728020220232);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 26, (DAAL_DATA_TYPE)1.2135000000000002);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.0021976707777117983);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.011228368357289582);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[7], 1, 3, (DAAL_DATA_TYPE)1.3285000000000002);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 23, (DAAL_DATA_TYPE)1.6180000000000001);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 13, (DAAL_DATA_TYPE)0.59350000000000003);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 2, (DAAL_DATA_TYPE)1.6325000000000001);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 9, (DAAL_DATA_TYPE)1.3665000000000003);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 4, (DAAL_DATA_TYPE)0.93300000000000016);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 19, (DAAL_DATA_TYPE)-1.0334999999999999);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.004252408828081874);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 21, (DAAL_DATA_TYPE)1.2905000000000002);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 6, (DAAL_DATA_TYPE)1.4510000000000003);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)0.0045213864797551649);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)-0.0096942998468875895);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.0078251434885191189);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[36], 1, 19, (DAAL_DATA_TYPE)-0.28149999999999992);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0020783056777998292);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[44], 1, 16, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 19, (DAAL_DATA_TYPE)1.1345000000000003);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.014802905970979434);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0020651114961275688);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0022105273746308826);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0068121229719010096);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.01318494960665703);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[33], 1, 23, (DAAL_DATA_TYPE)1.0665000000000002);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.00052506490588135463);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0034592682500402816);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0075872715259360712);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[31], 1, 23, (DAAL_DATA_TYPE)1.4120000000000001);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.0014238761700445628);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 0, (DAAL_DATA_TYPE)1.3285000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0097999953452432374);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0024974060047304996);

}

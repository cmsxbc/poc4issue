 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree133(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 9, (DAAL_DATA_TYPE)0.29900000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)0.7835000000000002);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)0.010640305704013869);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.00026250543348767139);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[1], 1, 15, (DAAL_DATA_TYPE)-0.18399999999999997);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 19, (DAAL_DATA_TYPE)1.4715000000000003);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 1, (DAAL_DATA_TYPE)1.3180000000000003);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 1, (DAAL_DATA_TYPE)1.1825000000000003);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 9, (DAAL_DATA_TYPE)1.9445000000000003);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.00098672405899354835);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[9], 1, 3, (DAAL_DATA_TYPE)1.1955000000000002);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.00051005654871308554);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.010121597844408825);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[8], 1, 2, (DAAL_DATA_TYPE)-0.44249999999999995);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0033082649452038683);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.013537434280356942);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[7], 1, 22, (DAAL_DATA_TYPE)0.91750000000000009);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 24, (DAAL_DATA_TYPE)1.0605000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 17, (DAAL_DATA_TYPE)0.9405);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0061762424958740469);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0057869664032477886);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.011111611003677052);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[17], 1, 5, (DAAL_DATA_TYPE)1.0895000000000004);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 9, (DAAL_DATA_TYPE)0.61050000000000015);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0017341843872730222);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.010020248978010689);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.001086117421428478);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[6], 1, 11, (DAAL_DATA_TYPE)-0.20999999999999996);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 24, (DAAL_DATA_TYPE)1.0105000000000002);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.012071026604924654);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)-0.00054895691573619843);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[28], 1, 15, (DAAL_DATA_TYPE)-0.6359999999999999);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 0, (DAAL_DATA_TYPE)0.65250000000000019);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0042529818757126728);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0056810546254712178);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.0063991593921350108);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[5], 1, 23, (DAAL_DATA_TYPE)1.0765000000000002);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 15, (DAAL_DATA_TYPE)0.15350000000000003);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 25, (DAAL_DATA_TYPE)1.0285000000000002);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 1, (DAAL_DATA_TYPE)-1.1384999999999998);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 22, (DAAL_DATA_TYPE)0.95150000000000012);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.0016379773583529251);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)-0.015689043063736922);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 1, (DAAL_DATA_TYPE)0.64350000000000007);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0029185557411869653);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0038084301982580881);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.006861502736103752);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.00053022034942975952);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[37], 1, 5, (DAAL_DATA_TYPE)1.0525000000000002);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 13, (DAAL_DATA_TYPE)0.51250000000000007);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0060757091900302193);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.00026199365445112781);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 18, (DAAL_DATA_TYPE)1.1135000000000004);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 21, (DAAL_DATA_TYPE)0.73150000000000015);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)-0.0054461630659976175);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[54], 1, 2, (DAAL_DATA_TYPE)0.036500000000000005);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[56], 0, 2, (DAAL_DATA_TYPE)-0.39699999999999996);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0043505611216338976);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0081205619163811204);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0075308074862206059);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.011833555959830327);

}

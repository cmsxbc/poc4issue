 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree8(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.79050000000000009);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 9, (DAAL_DATA_TYPE)0.99050000000000005);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 19, (DAAL_DATA_TYPE)1.4500000000000002);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 3, (DAAL_DATA_TYPE)0.46150000000000008);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 9, (DAAL_DATA_TYPE)0.6735000000000001);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.007231499222309693);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 25, (DAAL_DATA_TYPE)0.60450000000000015);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.004147811799213804);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.015059529660746111);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0061378819712503696);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)-0.015580758851178936);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[3], 1, 5, (DAAL_DATA_TYPE)1.0025000000000002);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 21, (DAAL_DATA_TYPE)0.90750000000000008);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0084925499061743424);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.0055432354067933972);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.010048760511452639);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[2], 1, 27, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 25, (DAAL_DATA_TYPE)0.52350000000000019);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0011448385417461395);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[19], 1, 5, (DAAL_DATA_TYPE)0.88150000000000006);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 26, (DAAL_DATA_TYPE)0.89250000000000018);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 27, (DAAL_DATA_TYPE)0.82250000000000012);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 9, (DAAL_DATA_TYPE)0.86550000000000005);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0043944002674506594);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.012614951387599663);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0084387280220209176);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.010858013636744809);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.013043154364072832);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[18], 1, 25, (DAAL_DATA_TYPE)0.64950000000000008);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 9, (DAAL_DATA_TYPE)1.6725000000000001);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0083319560241173294);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0084426453212896983);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[30], 1, 22, (DAAL_DATA_TYPE)1.0515000000000001);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 0, (DAAL_DATA_TYPE)1.0575000000000003);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 5, (DAAL_DATA_TYPE)1.1275000000000002);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 10, (DAAL_DATA_TYPE)-0.85299999999999987);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.012845828308134664);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 3, (DAAL_DATA_TYPE)1.3425000000000002);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0073024547373761938);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.0041391485370695594);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.011713281002911656);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[35], 1, 27, (DAAL_DATA_TYPE)1.0885000000000002);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 14, (DAAL_DATA_TYPE)-0.77949999999999997);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.011789742570656998);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0040231363608105352);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.01272174995392561);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)0.0066833238280533157);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[1], 1, 25, (DAAL_DATA_TYPE)1.5585000000000002);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 22, (DAAL_DATA_TYPE)1.0265000000000002);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 21, (DAAL_DATA_TYPE)0.54750000000000021);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.0061397638051740588);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 27, (DAAL_DATA_TYPE)1.0545000000000002);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 5, (DAAL_DATA_TYPE)0.98050000000000004);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)-0.0100414768844429);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.0005958921704555583);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.015594971700482171);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0014615563824113493);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[49], 1, 3, (DAAL_DATA_TYPE)1.8335000000000001);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.010219966583930599);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.020888203609797915);

}

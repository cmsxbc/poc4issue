 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree163(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 21, (DAAL_DATA_TYPE)0.42850000000000005);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 11, (DAAL_DATA_TYPE)0.83950000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 26, (DAAL_DATA_TYPE)0.84050000000000014);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.0060630941763520248);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 24, (DAAL_DATA_TYPE)0.84750000000000003);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.0028471761423608534);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0072906610636931397);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[2], 1, 3, (DAAL_DATA_TYPE)1.0255000000000003);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.016337989764288071);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0037542383745312693);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[1], 1, 1, (DAAL_DATA_TYPE)-1.9319999999999997);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 18, (DAAL_DATA_TYPE)0.16250000000000003);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 18, (DAAL_DATA_TYPE)-0.26349999999999996);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 3, (DAAL_DATA_TYPE)0.60050000000000014);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.010522614370869555);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 7, (DAAL_DATA_TYPE)-0.18949999999999997);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)0.0067560240545350581);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.0050986254836122196);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.011910880962386728);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0039112508787136329);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[11], 1, 18, (DAAL_DATA_TYPE)0.21850000000000003);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 10, (DAAL_DATA_TYPE)-2.3834999999999993);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0086501095937847189);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.0003466771637080593);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[21], 1, 3, (DAAL_DATA_TYPE)0.48450000000000004);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 14, (DAAL_DATA_TYPE)1.4745000000000001);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 5, (DAAL_DATA_TYPE)0.50550000000000017);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)-0.0082054780569632314);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 4, (DAAL_DATA_TYPE)0.76750000000000018);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 6, (DAAL_DATA_TYPE)-0.11649999999999999);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.0056133703385583232);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[30], 1, 2, (DAAL_DATA_TYPE)0.57050000000000012);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0023273476310090961);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0060773633995696028);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[29], 1, 4, (DAAL_DATA_TYPE)1.2175000000000002);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0091847820350757017);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-9.5923686892075374e-05);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0090062907168074798);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[25], 1, 19, (DAAL_DATA_TYPE)1.639);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 18, (DAAL_DATA_TYPE)1.2545000000000002);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 1, (DAAL_DATA_TYPE)-1.3104999999999998);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.0027941218567202274);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0018385285688773041);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 2, (DAAL_DATA_TYPE)1.4945000000000002);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 23, (DAAL_DATA_TYPE)0.98350000000000015);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0070163882246204456);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[45], 1, 5, (DAAL_DATA_TYPE)0.88650000000000018);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 13, (DAAL_DATA_TYPE)0.9165000000000002);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.0010872645534320989);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 10, (DAAL_DATA_TYPE)0.38750000000000007);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.013583437977906536);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.0018002562347407406);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[47], 1, 25, (DAAL_DATA_TYPE)0.67850000000000021);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.0037863327738116774);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 3, (DAAL_DATA_TYPE)1.2785000000000002);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[55], 0, 23, (DAAL_DATA_TYPE)0.98950000000000016);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)0.002249879690094127);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.011326944982089724);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.0014278819497641443);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0098273174783501498);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.0073420980722521956);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree81(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 1, (DAAL_DATA_TYPE)2.2625000000000006);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 6, (DAAL_DATA_TYPE)-2.7564999999999995);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)-0.0093572146259248267);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[2], 1, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 15, (DAAL_DATA_TYPE)0.90250000000000019);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.0011433691864735202);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.010878181602696286);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 18, (DAAL_DATA_TYPE)-1.5214999999999999);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 1, (DAAL_DATA_TYPE)-1.7954999999999999);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.008018606546379271);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[9], 1, 23, (DAAL_DATA_TYPE)0.98550000000000015);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 13, (DAAL_DATA_TYPE)0.97550000000000014);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.015822747760805594);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0030714824795722963);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[11], 1, 23, (DAAL_DATA_TYPE)1.0905000000000002);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 19, (DAAL_DATA_TYPE)1.1755000000000002);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)0.001444607549420316);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.010508946625685151);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.0094833810720592743);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[8], 1, 25, (DAAL_DATA_TYPE)0.5375000000000002);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 14, (DAAL_DATA_TYPE)-0.35349999999999993);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 2, (DAAL_DATA_TYPE)-0.41149999999999992);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 18, (DAAL_DATA_TYPE)0.47900000000000004);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 7, (DAAL_DATA_TYPE)0.76350000000000018);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0078155136905437295);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0044594522416591649);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.015379995107650757);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[22], 1, 13, (DAAL_DATA_TYPE)0.71150000000000013);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 24, (DAAL_DATA_TYPE)0.74250000000000005);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)0.0031199458500613341);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)-0.0096249808867772419);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[28], 1, 21, (DAAL_DATA_TYPE)1.0325000000000002);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.0017038005067863398);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.012888185897221169);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[21], 1, 25, (DAAL_DATA_TYPE)0.30650000000000005);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 2, (DAAL_DATA_TYPE)-0.46749999999999997);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 7, (DAAL_DATA_TYPE)0.55650000000000011);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.013623418596883617);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)1.8569268286228182e-05);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[36], 1, 2, (DAAL_DATA_TYPE)1.3335000000000001);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 15, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.014133684278318757);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.00050876364111900334);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)-0.0062286306917667391);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[35], 1, 9, (DAAL_DATA_TYPE)0.47150000000000003);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 21, (DAAL_DATA_TYPE)0.88450000000000017);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.0039928637731533783);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.010240463558584453);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[45], 1, 5, (DAAL_DATA_TYPE)0.50550000000000017);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 27, (DAAL_DATA_TYPE)0.6735000000000001);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.008715505559336055);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.010332471806378592);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 5, (DAAL_DATA_TYPE)1.6145000000000003);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 27, (DAAL_DATA_TYPE)0.72250000000000003);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 0, (DAAL_DATA_TYPE)0.9165000000000002);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0096097209539852645);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.004675716580823064);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.01064541136349241);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0040663860738277434);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.00037433941290818541);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.010860597147889761);

}

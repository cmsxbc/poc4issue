 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree153(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 1, (DAAL_DATA_TYPE)-2.2624999999999997);
    builder.addLeafNode(treeId, nodeIds[1], 0, (DAAL_DATA_TYPE)0.007527860999107361);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[1], 1, 15, (DAAL_DATA_TYPE)-1.5714999999999997);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 1, (DAAL_DATA_TYPE)-0.070499999999999993);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 22, (DAAL_DATA_TYPE)1.0605000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 2, (DAAL_DATA_TYPE)-0.31749999999999995);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0139394215021569);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 10, (DAAL_DATA_TYPE)-0.25449999999999995);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.0093183653925855963);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0010058701969683172);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[5], 1, 6, (DAAL_DATA_TYPE)-0.65849999999999997);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.005498792142183944);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.006210258753881568);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[4], 1, 25, (DAAL_DATA_TYPE)0.69750000000000012);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0073381598107516771);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.00169652863239123);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[3], 1, 25, (DAAL_DATA_TYPE)0.30650000000000005);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 21, (DAAL_DATA_TYPE)1.0625000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 25, (DAAL_DATA_TYPE)0.22450000000000003);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 15, (DAAL_DATA_TYPE)0.40450000000000008);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.001248246654868126);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.013599224761128426);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[19], 1, 17, (DAAL_DATA_TYPE)1.0685000000000002);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 6, (DAAL_DATA_TYPE)-0.62449999999999994);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.015850716750137508);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 26, (DAAL_DATA_TYPE)0.67450000000000021);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.0032332293203343517);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.009530198663473129);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0044030117548324848);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0089962094277143481);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[17], 1, 22, (DAAL_DATA_TYPE)0.71350000000000013);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 11, (DAAL_DATA_TYPE)1.3865000000000001);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 13, (DAAL_DATA_TYPE)0.68050000000000022);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 26, (DAAL_DATA_TYPE)0.83650000000000013);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 27, (DAAL_DATA_TYPE)0.64150000000000007);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0043399665990601416);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.0099181799377713892);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[34], 1, 8, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0050536030961666261);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 0, (DAAL_DATA_TYPE)0.97550000000000014);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.0094796779158059508);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.0006708379384250411);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[33], 1, 2, (DAAL_DATA_TYPE)1.2955000000000003);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 7, (DAAL_DATA_TYPE)1.3685000000000003);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0076660166446503907);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0013624532853026648);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.0031331023337164278);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0040594296186186726);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[31], 1, 22, (DAAL_DATA_TYPE)0.96950000000000014);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 1, (DAAL_DATA_TYPE)-1.1204999999999998);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 9, (DAAL_DATA_TYPE)0.65150000000000008);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 14, (DAAL_DATA_TYPE)-0.97299999999999986);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0074212869997912394);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[52], 1, 20, (DAAL_DATA_TYPE)2.3265000000000002);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.0073198067593491737);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.0032798693382314276);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0045587169204172199);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[50], 1, 21, (DAAL_DATA_TYPE)1.2645000000000002);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.00012686532396799039);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.0053431964656781589);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)0.00037476663076914542);

}

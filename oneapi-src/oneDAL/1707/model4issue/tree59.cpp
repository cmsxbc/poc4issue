 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree59(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 5, (DAAL_DATA_TYPE)1.8805000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 27, (DAAL_DATA_TYPE)1.1835000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 22, (DAAL_DATA_TYPE)1.0705000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 22, (DAAL_DATA_TYPE)0.84650000000000014);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 18, (DAAL_DATA_TYPE)-1.7059999999999997);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.0096694696139782033);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0008254386203078814);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 23, (DAAL_DATA_TYPE)1.2765000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 7, (DAAL_DATA_TYPE)-0.36649999999999994);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 18, (DAAL_DATA_TYPE)-0.05849999999999999);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 26, (DAAL_DATA_TYPE)0.74650000000000005);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0081402759903516538);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[11], 1, 27, (DAAL_DATA_TYPE)0.92250000000000021);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)0.0015214198375050026);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[13], 1, 18, (DAAL_DATA_TYPE)-1.1614999999999998);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.0076767273247241976);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.010682390076108278);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[10], 1, 6, (DAAL_DATA_TYPE)1.4355000000000002);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.0032568610496055295);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.0076442769418160125);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[9], 1, 19, (DAAL_DATA_TYPE)1.4605000000000004);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 3, (DAAL_DATA_TYPE)1.3285000000000002);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 9, (DAAL_DATA_TYPE)0.49350000000000005);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 11, (DAAL_DATA_TYPE)-0.68349999999999989);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.0044430036226223253);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.0072892229723305821);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0017940443453377955);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[22], 1, 19, (DAAL_DATA_TYPE)0.9255000000000001);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0069004583153097591);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0036069582112961346);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[21], 1, 19, (DAAL_DATA_TYPE)1.6285000000000001);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.012755514752783187);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0020451562648469753);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[8], 1, 9, (DAAL_DATA_TYPE)0.61850000000000016);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)0.013553011577044215);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)0.00027583591244389522);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[3], 1, 18, (DAAL_DATA_TYPE)-0.37549999999999994);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 6, (DAAL_DATA_TYPE)0.05050000000000001);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 10, (DAAL_DATA_TYPE)0.62200000000000011);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0012201697051782033);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.01230394332004445);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[38], 1, 19, (DAAL_DATA_TYPE)-0.78649999999999987);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.015813051949481707);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 3, (DAAL_DATA_TYPE)1.1105000000000003);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.005207666933913775);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0069239781209916784);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[37], 1, 3, (DAAL_DATA_TYPE)1.2205000000000001);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 14, (DAAL_DATA_TYPE)1.4460000000000002);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 6, (DAAL_DATA_TYPE)1.3790000000000002);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.0063608695715478619);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.0061934036287394443);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.0056598642697701096);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[47], 1, 7, (DAAL_DATA_TYPE)0.57150000000000001);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 13, (DAAL_DATA_TYPE)1.0065000000000002);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.00051951074065306258);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.012954113451210229);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0059617541730403907);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.0023734089001309039);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[1], 1, 17, (DAAL_DATA_TYPE)0.64450000000000018);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0077518976365144434);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0047134194602204572);

}

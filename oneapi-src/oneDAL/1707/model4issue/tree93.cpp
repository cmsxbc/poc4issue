 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree93(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 1, (DAAL_DATA_TYPE)1.3805000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 3, (DAAL_DATA_TYPE)0.34850000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 10, (DAAL_DATA_TYPE)1.2545000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 22, (DAAL_DATA_TYPE)0.96350000000000013);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 26, (DAAL_DATA_TYPE)1.1395000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 22, (DAAL_DATA_TYPE)0.69950000000000012);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0055106170595653602);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 17, (DAAL_DATA_TYPE)1.3425000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 9, (DAAL_DATA_TYPE)1.1935000000000002);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 24, (DAAL_DATA_TYPE)0.99350000000000016);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 13, (DAAL_DATA_TYPE)0.62650000000000017);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)0.0035581212801237905);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[11], 1, 6, (DAAL_DATA_TYPE)0.42550000000000004);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.0020880228132009507);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)-0.015255626682192087);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0099985210491078252);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.0094637509410244389);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.013693516794592143);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.009321045878875469);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[4], 1, 26, (DAAL_DATA_TYPE)1.0565000000000002);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 24, (DAAL_DATA_TYPE)0.82450000000000012);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 7, (DAAL_DATA_TYPE)0.70950000000000013);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 18, (DAAL_DATA_TYPE)-0.85649999999999993);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)-0.0062243747948245573);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[23], 1, 24, (DAAL_DATA_TYPE)0.6625000000000002);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.010837642081081868);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.00020720746900354113);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.011804352656006814);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.011875055687414716);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[20], 1, 19, (DAAL_DATA_TYPE)0.29850000000000004);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 13, (DAAL_DATA_TYPE)1.0865000000000002);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.004714466482400894);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0089533167103162184);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[30], 1, 9, (DAAL_DATA_TYPE)1.2065000000000003);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.016518942601978778);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.002073681354522705);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0098961008940728346);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)3.6269452381265824e-05);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[1], 1, 2, (DAAL_DATA_TYPE)-1.4984999999999997);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.011583630214719212);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 3, (DAAL_DATA_TYPE)0.30350000000000005);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.011226178319365891);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 17, (DAAL_DATA_TYPE)0.62650000000000017);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 13, (DAAL_DATA_TYPE)0.58550000000000002);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0035106448743205802);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[44], 1, 10, (DAAL_DATA_TYPE)1.1305000000000003);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.010814208820318947);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0022515880852006379);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[43], 1, 2, (DAAL_DATA_TYPE)1.3985000000000001);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 22, (DAAL_DATA_TYPE)0.86050000000000015);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 7, (DAAL_DATA_TYPE)0.65550000000000008);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 17, (DAAL_DATA_TYPE)0.98350000000000015);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)0.0047375786630436782);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.017291584300498167);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0014943451310197513);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[50], 1, 25, (DAAL_DATA_TYPE)1.0395000000000001);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[56], 0, 3, (DAAL_DATA_TYPE)1.5125000000000002);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0039069281543620054);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0059945153265163822);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)-0.0040346172279575564);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.0052048914827579678);

}

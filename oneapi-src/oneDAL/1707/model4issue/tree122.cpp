 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree122(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 26, (DAAL_DATA_TYPE)0.72850000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 13, (DAAL_DATA_TYPE)1.1845000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 19, (DAAL_DATA_TYPE)0.89550000000000007);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 23, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 13, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 24, (DAAL_DATA_TYPE)0.72150000000000014);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 24, (DAAL_DATA_TYPE)0.68050000000000022);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 14, (DAAL_DATA_TYPE)0.33250000000000007);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 0, (DAAL_DATA_TYPE)0.89850000000000019);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)-0.0080783906998915661);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0042094836997635223);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0032484367730156068);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0083094645781736625);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[6], 1, 4, (DAAL_DATA_TYPE)0.88350000000000006);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 5, (DAAL_DATA_TYPE)0.81650000000000011);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 17, (DAAL_DATA_TYPE)1.1525000000000001);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0066000782172469536);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.0048500285670161252);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.00584584159983529);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)-0.0113039468991031);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.010987019787232082);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[4], 1, 0, (DAAL_DATA_TYPE)0.85750000000000004);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.013861173056066038);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 17, (DAAL_DATA_TYPE)0.61750000000000005);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.0067576065335584719);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.0046016978006809947);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[3], 1, 18, (DAAL_DATA_TYPE)0.64350000000000007);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 26, (DAAL_DATA_TYPE)0.6645000000000002);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.011261666195800985);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 26, (DAAL_DATA_TYPE)0.69350000000000012);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.0019339678188165029);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0088054859469975204);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[27], 1, 7, (DAAL_DATA_TYPE)-0.42349999999999993);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0092528492026031015);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0064945372166457004);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[2], 1, 2, (DAAL_DATA_TYPE)-0.34549999999999992);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.0028009222128561567);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 26, (DAAL_DATA_TYPE)0.6645000000000002);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0025494318334884675);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)0.013721185674269996);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[1], 1, 26, (DAAL_DATA_TYPE)0.73850000000000005);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 23, (DAAL_DATA_TYPE)0.99650000000000005);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.013212834221913534);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.0034309897910464898);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[41], 1, 13, (DAAL_DATA_TYPE)0.30650000000000005);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 10, (DAAL_DATA_TYPE)0.15750000000000003);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)-0.012140782329846514);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.00082892317324876794);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[45], 1, 0, (DAAL_DATA_TYPE)1.2435000000000003);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)0.00059934456084969072);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 5, (DAAL_DATA_TYPE)0.48950000000000005);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)0.0054750818829491458);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[52], 1, 13, (DAAL_DATA_TYPE)0.44550000000000006);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.0070201254378144569);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.0028880703272102727);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[51], 1, 27, (DAAL_DATA_TYPE)1.0785000000000002);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 25, (DAAL_DATA_TYPE)1.4335000000000002);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.0033693837572293232);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.0061751017098625504);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0040610402953461747);

}

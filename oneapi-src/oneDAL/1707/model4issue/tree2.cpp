 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree2(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90250000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.81150000000000022);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 5, (DAAL_DATA_TYPE)0.82050000000000012);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 26, (DAAL_DATA_TYPE)0.77250000000000008);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 24, (DAAL_DATA_TYPE)0.71850000000000003);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.0049629805016606944);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 21, (DAAL_DATA_TYPE)0.93450000000000022);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.015107432770729066);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.005477224225583284);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)-0.0011435724711150266);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[3], 1, 5, (DAAL_DATA_TYPE)1.3665000000000003);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 3, (DAAL_DATA_TYPE)0.77350000000000019);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0057565038309157273);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 18, (DAAL_DATA_TYPE)-0.78599999999999992);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.011338637530803681);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 10, (DAAL_DATA_TYPE)0.027500000000000004);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.015009095049821414);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.0007822959034731894);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.013497502943783097);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[2], 1, 5, (DAAL_DATA_TYPE)0.89350000000000007);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 22, (DAAL_DATA_TYPE)1.0605000000000002);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 27, (DAAL_DATA_TYPE)0.84050000000000014);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 0, (DAAL_DATA_TYPE)0.7855000000000002);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.0019557455713864152);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.0089470102661355615);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[22], 1, 26, (DAAL_DATA_TYPE)0.90150000000000008);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.013806617215498172);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.003526463273626108);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.013320281751994982);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[20], 1, 3, (DAAL_DATA_TYPE)0.60050000000000014);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 23, (DAAL_DATA_TYPE)0.99650000000000005);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.01051749392623795);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)-0.00360073468019796);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0142914975178428);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.0265000000000002);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 22, (DAAL_DATA_TYPE)1.0485000000000002);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 22, (DAAL_DATA_TYPE)0.78450000000000009);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.0059039153384439873);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 24, (DAAL_DATA_TYPE)0.73950000000000016);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0091567052307949277);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.020311358732797258);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[36], 1, 26, (DAAL_DATA_TYPE)1.3665000000000003);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 24, (DAAL_DATA_TYPE)0.82250000000000012);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.0083906511073572592);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 21, (DAAL_DATA_TYPE)0.83750000000000002);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.0099577482890438399);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)-0.0055730919946323744);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[42], 1, 22, (DAAL_DATA_TYPE)1.5530000000000002);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.018527337374552241);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.0021961589542667521);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[35], 1, 3, (DAAL_DATA_TYPE)2.0310000000000001);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 22, (DAAL_DATA_TYPE)1.0465000000000002);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 22, (DAAL_DATA_TYPE)0.76250000000000007);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0067746320585592079);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 24, (DAAL_DATA_TYPE)1.2285000000000001);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0086624420577227478);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.0009940223553918015);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0031539115270866809);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[51], 1, 27, (DAAL_DATA_TYPE)1.0175000000000003);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0083216647738995758);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.014775888900446699);

}

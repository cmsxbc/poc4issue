 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree128(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 4, (DAAL_DATA_TYPE)1.6505000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 4, (DAAL_DATA_TYPE)1.6155000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 6, (DAAL_DATA_TYPE)1.2355000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 6, (DAAL_DATA_TYPE)1.0215000000000003);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 6, (DAAL_DATA_TYPE)0.87250000000000016);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.00019086591293729661);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 4, (DAAL_DATA_TYPE)-0.28949999999999992);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 7, (DAAL_DATA_TYPE)0.62250000000000016);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0029991916357539599);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.014924692413930235);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[7], 1, 4, (DAAL_DATA_TYPE)0.22850000000000004);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)0.0047919144481420525);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.0035638009851917309);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[4], 1, 3, (DAAL_DATA_TYPE)1.7525000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 7, (DAAL_DATA_TYPE)-1.3464999999999998);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)-0.0054683726928804232);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[15], 1, 5, (DAAL_DATA_TYPE)1.4485000000000003);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.006042766401044313);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.0048774910766793342);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)-0.0077909036225173624);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[3], 1, 10, (DAAL_DATA_TYPE)1.3960000000000001);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 21, (DAAL_DATA_TYPE)1.1465000000000003);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 21, (DAAL_DATA_TYPE)0.84550000000000003);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 24, (DAAL_DATA_TYPE)0.73950000000000016);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.010375088914297522);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 14, (DAAL_DATA_TYPE)0.6645000000000002);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.0034410490173886117);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 24, (DAAL_DATA_TYPE)0.95650000000000002);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.00031749119115029946);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.011996652878820896);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[23], 1, 2, (DAAL_DATA_TYPE)-1.3434999999999999);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.013131093070842327);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 2, (DAAL_DATA_TYPE)-0.51449999999999985);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 18, (DAAL_DATA_TYPE)0.71350000000000013);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)0.0087231862647780059);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)-0.0044902027362868904);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[33], 1, 19, (DAAL_DATA_TYPE)0.57650000000000012);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 18, (DAAL_DATA_TYPE)0.7875000000000002);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.011743686824817868);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.00025725201853821358);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)6.523520153548037e-05);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[22], 1, 3, (DAAL_DATA_TYPE)0.49950000000000006);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.0095422143861651418);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 9, (DAAL_DATA_TYPE)0.98650000000000004);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.015868040806416309);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0021455560175871308);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[21], 1, 25, (DAAL_DATA_TYPE)0.73050000000000004);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.014439600998801844);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0040467058774083858);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[2], 1, 21, (DAAL_DATA_TYPE)0.85550000000000004);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0026695916913449767);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.010666160299583819);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[1], 1, 0, (DAAL_DATA_TYPE)1.1495000000000002);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 7, (DAAL_DATA_TYPE)0.085500000000000007);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 2, (DAAL_DATA_TYPE)0.27900000000000008);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0031046916441670783);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.0075936262495815759);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.0096567964544746945);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[53], 1, 11, (DAAL_DATA_TYPE)-0.13649999999999998);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0082485982682555924);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.004711638293836428);

}

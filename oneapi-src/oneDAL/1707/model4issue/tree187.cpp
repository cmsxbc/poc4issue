 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree187(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 15, (DAAL_DATA_TYPE)1.6265000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 12, (DAAL_DATA_TYPE)1.6610000000000003);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)0.00027279982289482352);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[2], 1, 2, (DAAL_DATA_TYPE)1.3985000000000001);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 14, (DAAL_DATA_TYPE)-2.0179999999999993);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.0065487793685557946);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 5, (DAAL_DATA_TYPE)1.0445000000000002);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 14, (DAAL_DATA_TYPE)-1.3174999999999997);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 0, (DAAL_DATA_TYPE)1.0315000000000001);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)0.0075991027165150304);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.0015213817510812079);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[8], 1, 14, (DAAL_DATA_TYPE)-1.1034999999999997);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.005867812134684962);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 26, (DAAL_DATA_TYPE)1.4265000000000001);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 18, (DAAL_DATA_TYPE)0.37050000000000005);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 24, (DAAL_DATA_TYPE)0.62950000000000006);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)0.007181566384517485);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[16], 1, 26, (DAAL_DATA_TYPE)0.70750000000000013);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 19, (DAAL_DATA_TYPE)-0.25849999999999995);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.00081098914339110771);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.012006378166929441);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[18], 1, 9, (DAAL_DATA_TYPE)0.5375000000000002);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0068472166330768511);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 21, (DAAL_DATA_TYPE)0.46650000000000008);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.010457843701754298);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 14, (DAAL_DATA_TYPE)-0.86999999999999988);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.0072416020598676471);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.0004058094363679867);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[15], 1, 11, (DAAL_DATA_TYPE)-0.69249999999999978);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 14, (DAAL_DATA_TYPE)0.53100000000000014);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.0089857502246422274);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.00066637694412334395);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[29], 1, 24, (DAAL_DATA_TYPE)1.1635000000000002);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 0, (DAAL_DATA_TYPE)1.3745000000000003);
    builder.addLeafNode(treeId, nodeIds[34], 0, (DAAL_DATA_TYPE)-0.00013511846648818032);
    builder.addLeafNode(treeId, nodeIds[34], 1, (DAAL_DATA_TYPE)0.0083298008733739461);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0062252352712675934);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.0053187524403134987);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[7], 1, 5, (DAAL_DATA_TYPE)1.2185000000000004);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 11, (DAAL_DATA_TYPE)-0.36849999999999994);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.00011359310637299831);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[40], 1, 10, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.010479552386669626);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.0028048178934518041);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.00030029460196174428);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[4], 1, 19, (DAAL_DATA_TYPE)0.67650000000000021);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 24, (DAAL_DATA_TYPE)1.3455000000000001);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 0, (DAAL_DATA_TYPE)0.89350000000000007);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.0042816270437931094);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 19, (DAAL_DATA_TYPE)-0.47949999999999993);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.010963859044663285);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[50], 1, 3, (DAAL_DATA_TYPE)0.76450000000000007);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0059461251869797711);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.0073726730979979038);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.010387748621059987);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.010875730218720578);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[1], 1, 23, (DAAL_DATA_TYPE)0.99750000000000016);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0048310320773119232);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 23, (DAAL_DATA_TYPE)1.0725000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0085797531953589485);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0018679241434885906);

}

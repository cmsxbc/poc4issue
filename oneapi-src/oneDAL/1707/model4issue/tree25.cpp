 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree25(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.0565000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 25, (DAAL_DATA_TYPE)0.59250000000000014);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 5, (DAAL_DATA_TYPE)1.5755000000000001);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 27, (DAAL_DATA_TYPE)0.83850000000000013);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 13, (DAAL_DATA_TYPE)1.3085000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 22, (DAAL_DATA_TYPE)0.73150000000000015);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.004480621056712192);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 27, (DAAL_DATA_TYPE)0.82050000000000012);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0046655545479030967);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.014598324256283896);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.010124410019845379);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[4], 1, 21, (DAAL_DATA_TYPE)0.95150000000000012);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.010063439599608863);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0015722654186762297);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.008390414388850331);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[2], 1, 5, (DAAL_DATA_TYPE)0.81650000000000011);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 26, (DAAL_DATA_TYPE)0.72850000000000004);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.0061058465033196488);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 27, (DAAL_DATA_TYPE)0.89150000000000007);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 26, (DAAL_DATA_TYPE)0.89850000000000019);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 25, (DAAL_DATA_TYPE)0.90350000000000008);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)0.0027575969013400106);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)-0.005761444982555178);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.0079364904193976599);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[19], 1, 6, (DAAL_DATA_TYPE)-1.7469999999999999);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)-0.016497029683419637);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 5, (DAAL_DATA_TYPE)0.41850000000000004);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.01517168606321017);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 22, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 14, (DAAL_DATA_TYPE)0.72550000000000014);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.0077092464812501468);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0047977067206216896);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[29], 1, 22, (DAAL_DATA_TYPE)1.6145000000000003);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.0089883417809662747);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0093138158321380612);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[16], 1, 27, (DAAL_DATA_TYPE)1.0105000000000002);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0055929281355954026);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)0.00079311916886616379);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[1], 1, 22, (DAAL_DATA_TYPE)1.0265000000000002);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 22, (DAAL_DATA_TYPE)0.87250000000000016);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 5, (DAAL_DATA_TYPE)0.76150000000000018);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.0090466277240073851);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 25, (DAAL_DATA_TYPE)1.6490000000000002);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.0022836915277085214);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.0078042728850593809);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[40], 1, 21, (DAAL_DATA_TYPE)0.71950000000000014);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 27, (DAAL_DATA_TYPE)0.90650000000000019);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)0.01245053836868869);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0060815774228261867);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.008318698471429407);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[39], 1, 25, (DAAL_DATA_TYPE)1.5165000000000002);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 1, (DAAL_DATA_TYPE)1.3180000000000003);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 2, (DAAL_DATA_TYPE)0.49150000000000005);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 19, (DAAL_DATA_TYPE)1.0965000000000003);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 14, (DAAL_DATA_TYPE)0.99450000000000005);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.00077918560554583868);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.013709101032826208);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.011440204042527411);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0088454515835560792);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0099873770247487469);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0037081417408497894);

}

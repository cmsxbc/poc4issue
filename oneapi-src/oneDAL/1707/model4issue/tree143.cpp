 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree143(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 4, (DAAL_DATA_TYPE)1.6505000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 4, (DAAL_DATA_TYPE)1.5885000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 17, (DAAL_DATA_TYPE)2.0440000000000005);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 1, (DAAL_DATA_TYPE)-1.3104999999999998);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 10, (DAAL_DATA_TYPE)-1.6154999999999997);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 21, (DAAL_DATA_TYPE)0.92450000000000021);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)-0.00098365274025127305);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.011463431164622307);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[5], 1, 27, (DAAL_DATA_TYPE)1.3825000000000001);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 11, (DAAL_DATA_TYPE)-1.5784999999999998);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0088142046704888354);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 17, (DAAL_DATA_TYPE)1.2035000000000002);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 11, (DAAL_DATA_TYPE)-1.4264999999999997);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.0095623968514027425);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[13], 1, 10, (DAAL_DATA_TYPE)-1.3474999999999999);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)-0.0098637082837522028);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[15], 1, 11, (DAAL_DATA_TYPE)1.3015000000000001);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 2, (DAAL_DATA_TYPE)1.3335000000000001);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 22, (DAAL_DATA_TYPE)0.99250000000000005);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 22, (DAAL_DATA_TYPE)0.83650000000000013);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.00548484881792479);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[20], 1, 6, (DAAL_DATA_TYPE)-0.19799999999999998);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 17, (DAAL_DATA_TYPE)0.79050000000000009);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)-0.011988954519432399);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.00030980783607810741);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.0052023431472480305);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0067582153892026672);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.0049096333111325902);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[17], 1, 18, (DAAL_DATA_TYPE)-0.26349999999999996);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.012556849031344706);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.0028349401513961228);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[12], 1, 5, (DAAL_DATA_TYPE)1.2555000000000003);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[32], 0, 5, (DAAL_DATA_TYPE)0.93150000000000011);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.0055710760569199925);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.015033677743419752);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.0013448531545388201);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.0091482579061875537);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)3.3298262514447943e-05);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[3], 1, 14, (DAAL_DATA_TYPE)-0.35349999999999993);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0014902389085251991);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 1, (DAAL_DATA_TYPE)-0.45449999999999996);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 25, (DAAL_DATA_TYPE)0.90950000000000009);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.0021849492262117566);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.015471564492453699);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[41], 1, 15, (DAAL_DATA_TYPE)1.1035000000000001);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 19, (DAAL_DATA_TYPE)0.17650000000000002);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.0044829711258315887);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.0059974114305429886);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.0085788839073343715);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[2], 1, 21, (DAAL_DATA_TYPE)1.0245000000000002);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 12, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)-0.0061453847400844107);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 18, (DAAL_DATA_TYPE)-0.12949999999999998);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0092313524987548603);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0022875913962100941);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.010524683520197869);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[1], 1, 10, (DAAL_DATA_TYPE)0.95250000000000001);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 1, (DAAL_DATA_TYPE)-0.28949999999999992);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.00065816634495814263);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0079073741806731119);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0062930947148495111);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree14(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.2815000000000001);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 25, (DAAL_DATA_TYPE)0.59250000000000014);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 13, (DAAL_DATA_TYPE)0.9405);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 17, (DAAL_DATA_TYPE)1.5170000000000001);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.0055715813029626887);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0071684041619300837);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[3], 1, 27, (DAAL_DATA_TYPE)0.72950000000000015);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.0075418464508321559);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.0024459956868274793);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)0.98450000000000004);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 26, (DAAL_DATA_TYPE)0.77650000000000008);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 24, (DAAL_DATA_TYPE)0.79950000000000021);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 9, (DAAL_DATA_TYPE)1.1665000000000003);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.00054962353897280991);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.013411150295888226);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0079877215345003465);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[11], 1, 27, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 26, (DAAL_DATA_TYPE)0.87950000000000006);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 27, (DAAL_DATA_TYPE)0.80850000000000011);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)0.0081528390663752875);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.0033970076529706117);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.01025635486499208);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[17], 1, 0, (DAAL_DATA_TYPE)1.6975000000000002);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 3, (DAAL_DATA_TYPE)2.0310000000000001);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 27, (DAAL_DATA_TYPE)0.9195000000000001);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)-0.0067804259996788177);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 23, (DAAL_DATA_TYPE)0.99450000000000005);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.0076294141167056947);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 23, (DAAL_DATA_TYPE)1.0795000000000001);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 10, (DAAL_DATA_TYPE)-0.54849999999999988);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.018906977730137962);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0025244110623995463);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[29], 1, 0, (DAAL_DATA_TYPE)1.2285000000000001);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.011323054937215951);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)-0.0087543567212728362);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0060241471880521534);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[23], 1, 24, (DAAL_DATA_TYPE)0.94450000000000001);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.015657298954633567);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0016150897884943402);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[10], 1, 26, (DAAL_DATA_TYPE)0.88850000000000018);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 9, (DAAL_DATA_TYPE)1.0245000000000002);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.009284924988144188);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0036134934673706688);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 27, (DAAL_DATA_TYPE)0.90650000000000019);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0049945575728708386);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[44], 1, 22, (DAAL_DATA_TYPE)1.0375000000000003);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 24, (DAAL_DATA_TYPE)1.1185000000000003);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.011486445480989198);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.00083350867435738856);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[46], 1, 14, (DAAL_DATA_TYPE)0.33250000000000007);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0073671990608582738);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.0043627137723176376);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[1], 1, 3, (DAAL_DATA_TYPE)1.8335000000000001);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 22, (DAAL_DATA_TYPE)1.0465000000000002);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 27, (DAAL_DATA_TYPE)0.89550000000000007);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0035111162954798111);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[55], 1, 24, (DAAL_DATA_TYPE)1.2435000000000003);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.012152802162483092);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0039765564643818403);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.0017541220656593277);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.014739024064814053);

}

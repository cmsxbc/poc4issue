 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree172(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 4, (DAAL_DATA_TYPE)1.6505000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 4, (DAAL_DATA_TYPE)1.6155000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 3, (DAAL_DATA_TYPE)1.7675000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 24, (DAAL_DATA_TYPE)1.4975000000000003);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 24, (DAAL_DATA_TYPE)1.4775000000000003);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 17, (DAAL_DATA_TYPE)0.39750000000000008);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 19, (DAAL_DATA_TYPE)-1.1049999999999998);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.010826991368894992);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[7], 1, 23, (DAAL_DATA_TYPE)0.99150000000000016);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 4, (DAAL_DATA_TYPE)0.36100000000000004);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.0065954249405132783);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0065464975115341641);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0064228028534574714);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)6.9098167587604216e-05);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0075053840210395203);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[4], 1, 7, (DAAL_DATA_TYPE)-1.4904999999999997);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0062870318610822006);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[16], 1, 19, (DAAL_DATA_TYPE)1.1575000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 26, (DAAL_DATA_TYPE)1.0975000000000004);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.005157456370070577);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[19], 1, 5, (DAAL_DATA_TYPE)1.5970000000000002);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 2, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 16, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.0049418838173151021);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.01420538024655704);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[22], 1, 27, (DAAL_DATA_TYPE)1.1775000000000002);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.0057953130583776984);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 5, (DAAL_DATA_TYPE)1.1515000000000002);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0098442185320891454);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0046700088307261465);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[21], 1, 0, (DAAL_DATA_TYPE)1.4785000000000001);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.00249030905465285);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)-0.0079979757133584756);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0092621733219577715);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[3], 1, 17, (DAAL_DATA_TYPE)1.7350000000000001);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 27, (DAAL_DATA_TYPE)0.80650000000000011);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0055766500420868399);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 24, (DAAL_DATA_TYPE)1.0475000000000001);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.0039439085821217261);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 11, (DAAL_DATA_TYPE)-0.78449999999999986);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 5, (DAAL_DATA_TYPE)1.0575000000000003);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.010558585293831364);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.00071530784609624091);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 27, (DAAL_DATA_TYPE)1.0175000000000003);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 27, (DAAL_DATA_TYPE)0.9425);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0035051896203575393);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.011038222049291318);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[44], 1, 5, (DAAL_DATA_TYPE)0.77450000000000008);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.011598965525627137);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.0022971473477217696);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0084223828495068615);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[2], 1, 19, (DAAL_DATA_TYPE)-0.42199999999999993);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)0.0042101424001157279);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0072446198729069341);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[1], 1, 3, (DAAL_DATA_TYPE)0.36150000000000004);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0036501225731942963);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[55], 1, 6, (DAAL_DATA_TYPE)0.53250000000000008);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0061929238910993778);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 22, (DAAL_DATA_TYPE)0.97750000000000015);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0071343436881545043);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.00570107800886035);

}

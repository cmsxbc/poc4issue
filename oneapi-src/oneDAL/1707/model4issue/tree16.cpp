 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree16(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.2115000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.81150000000000022);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 24, (DAAL_DATA_TYPE)0.74250000000000005);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 5, (DAAL_DATA_TYPE)1.3585000000000003);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)-0.00053299820306254369);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.012489548461003738);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[3], 1, 13, (DAAL_DATA_TYPE)1.3685000000000003);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 27, (DAAL_DATA_TYPE)0.83850000000000013);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 26, (DAAL_DATA_TYPE)0.73350000000000015);
    builder.addLeafNode(treeId, nodeIds[9], 0, (DAAL_DATA_TYPE)-0.0086308147207550378);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[9], 1, 25, (DAAL_DATA_TYPE)0.96550000000000014);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)0.0014125481841310991);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.013004224452861521);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.012871215223651573);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0071140335305877357);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[2], 1, 27, (DAAL_DATA_TYPE)0.85950000000000004);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 25, (DAAL_DATA_TYPE)1.1785000000000003);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 5, (DAAL_DATA_TYPE)0.86450000000000016);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 26, (DAAL_DATA_TYPE)0.89850000000000019);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 24, (DAAL_DATA_TYPE)0.9085000000000002);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)0.0058768243550165605);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0017700544235729936);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0084889274220986115);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0096890604709917727);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.012537337062151536);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[16], 1, 22, (DAAL_DATA_TYPE)1.0445000000000002);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 24, (DAAL_DATA_TYPE)1.0405000000000002);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)-0.007601514406108136);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 5, (DAAL_DATA_TYPE)1.4220000000000004);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 27, (DAAL_DATA_TYPE)1.3645000000000003);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 22, (DAAL_DATA_TYPE)0.83850000000000013);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.0064332967034623594);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 25, (DAAL_DATA_TYPE)0.63450000000000017);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.011150649738939186);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)0.0013688018086595814);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.012697445930436599);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.010488891873949318);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[26], 1, 27, (DAAL_DATA_TYPE)1.0145000000000002);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0076065131235588642);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 25, (DAAL_DATA_TYPE)0.81050000000000011);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.0028671103424018195);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.0041872788893265863);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[1], 1, 3, (DAAL_DATA_TYPE)1.8335000000000001);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 24, (DAAL_DATA_TYPE)1.3295000000000001);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 25, (DAAL_DATA_TYPE)1.8325000000000002);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 2, (DAAL_DATA_TYPE)0.36550000000000005);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 19, (DAAL_DATA_TYPE)1.5765000000000002);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.0082531071956593888);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.010596307925879955);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[46], 1, 5, (DAAL_DATA_TYPE)1.4790000000000003);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 10, (DAAL_DATA_TYPE)0.38750000000000007);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 21, (DAAL_DATA_TYPE)0.95750000000000013);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0029584776689397531);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.010409962146911983);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0089490663308601885);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.01342362139154883);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)-0.012659962894847094);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[44], 1, 17, (DAAL_DATA_TYPE)1.5035000000000001);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0015973450984069688);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.012084373831748964);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.013775624008405776);

}

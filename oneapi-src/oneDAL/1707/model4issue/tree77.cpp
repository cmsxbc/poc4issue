 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree77(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 10, (DAAL_DATA_TYPE)-2.3834999999999993);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 0, (DAAL_DATA_TYPE)1.0935000000000004);
    builder.addLeafNode(treeId, nodeIds[2], 0, (DAAL_DATA_TYPE)-0.010120846772072268);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0028724455833435063);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[1], 1, 6, (DAAL_DATA_TYPE)-2.7564999999999995);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.010343549819663168);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 5, (DAAL_DATA_TYPE)1.8805000000000003);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 2, (DAAL_DATA_TYPE)1.7240000000000004);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 15, (DAAL_DATA_TYPE)1.6265000000000003);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 15, (DAAL_DATA_TYPE)1.5435000000000001);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 0, (DAAL_DATA_TYPE)1.0465000000000002);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 0, (DAAL_DATA_TYPE)0.96350000000000013);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 24, (DAAL_DATA_TYPE)1.5530000000000002);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 11, (DAAL_DATA_TYPE)1.3715000000000004);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 11, (DAAL_DATA_TYPE)1.1915000000000002);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 3, (DAAL_DATA_TYPE)0.58450000000000013);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 10, (DAAL_DATA_TYPE)1.2970000000000004);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.001333442442994724);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.011321098605791729);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.00073572992749049377);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.0057726861642939708);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[14], 1, 21, (DAAL_DATA_TYPE)0.9235000000000001);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.00079907880417899612);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.0073143919140605598);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[13], 1, 3, (DAAL_DATA_TYPE)1.4595000000000002);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 11, (DAAL_DATA_TYPE)0.97150000000000014);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 24, (DAAL_DATA_TYPE)1.9065000000000001);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 7, (DAAL_DATA_TYPE)0.28450000000000003);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0062793651648930145);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0085573333760966437);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.012508633695542812);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.019412585049867634);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.00035909120123633139);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.0037881749620307884);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[11], 1, 24, (DAAL_DATA_TYPE)1.7695000000000001);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 15, (DAAL_DATA_TYPE)1.3435000000000004);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.0010478286854679244);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 7, (DAAL_DATA_TYPE)-0.90649999999999997);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.0046689455182506489);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)0.0096549348000969214);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.010442859376780689);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[10], 1, 13, (DAAL_DATA_TYPE)0.70750000000000013);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.014046956103827272);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 26, (DAAL_DATA_TYPE)0.98250000000000004);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 0, (DAAL_DATA_TYPE)0.89850000000000019);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0015253102406859399);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.01120203936782976);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0088131138020091596);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[9], 1, 19, (DAAL_DATA_TYPE)0.12950000000000003);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 8, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0055991760268807415);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0044073621377202811);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 13, (DAAL_DATA_TYPE)0.76550000000000018);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.016050074234604837);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0045419817538680258);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0093982889450022165);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[7], 1, 8, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0050874340833563896);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 17, (DAAL_DATA_TYPE)0.9145000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.010127964794325333);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0017303849260012312);

}

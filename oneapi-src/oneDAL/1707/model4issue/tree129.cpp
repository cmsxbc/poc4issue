 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree129(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 24, (DAAL_DATA_TYPE)0.73550000000000015);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 21, (DAAL_DATA_TYPE)1.9665000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 15, (DAAL_DATA_TYPE)-0.9474999999999999);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 9, (DAAL_DATA_TYPE)1.0975000000000004);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 14, (DAAL_DATA_TYPE)-0.80449999999999988);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.0089889251501173596);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 11, (DAAL_DATA_TYPE)-0.89749999999999985);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.012263185922056438);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[7], 1, 13, (DAAL_DATA_TYPE)1.1095000000000004);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 14, (DAAL_DATA_TYPE)0.46350000000000008);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0070174147926822866);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 1, (DAAL_DATA_TYPE)0.47850000000000004);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.008879859957458644);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.0050277173840280239);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.0081627805829048161);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0050644971649436397);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[3], 1, 3, (DAAL_DATA_TYPE)1.6175000000000004);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 13, (DAAL_DATA_TYPE)1.1845000000000001);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 3, (DAAL_DATA_TYPE)0.88750000000000007);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 15, (DAAL_DATA_TYPE)0.8135);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 7, (DAAL_DATA_TYPE)-1.1369999999999998);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)0.0045381682101064006);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[21], 1, 7, (DAAL_DATA_TYPE)0.49650000000000005);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 27, (DAAL_DATA_TYPE)0.80350000000000021);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 5, (DAAL_DATA_TYPE)0.88650000000000018);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)-0.0059081573315240728);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.017388547515729443);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.0031534291277437107);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[23], 1, 1, (DAAL_DATA_TYPE)-0.25349999999999995);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 25, (DAAL_DATA_TYPE)0.67850000000000021);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.01304807946795509);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0002887060535290549);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[29], 1, 13, (DAAL_DATA_TYPE)0.65150000000000008);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.010181991492087643);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)0.00096462918212637306);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[20], 1, 3, (DAAL_DATA_TYPE)0.63450000000000017);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.0057529011850265118);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.0013929139128981197);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[19], 1, 15, (DAAL_DATA_TYPE)-0.25449999999999995);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.009846496649471851);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 13, (DAAL_DATA_TYPE)0.53150000000000019);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 25, (DAAL_DATA_TYPE)0.57050000000000012);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.015968387065963312);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.0012615778110921384);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[41], 1, 22, (DAAL_DATA_TYPE)0.90450000000000019);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0064307082621824184);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[45], 1, 24, (DAAL_DATA_TYPE)0.63550000000000006);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.0052563319075852634);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.0079625323305235196);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[18], 1, 25, (DAAL_DATA_TYPE)1.0725000000000002);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0037205723463557662);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.014425662149571711);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[17], 1, 17, (DAAL_DATA_TYPE)0.75850000000000006);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.0094224322001848909);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0030999375324297167);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.0064020915994686739);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.0755000000000001);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 24, (DAAL_DATA_TYPE)1.0715000000000001);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.00060639765795178371);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.00967351888010109);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.00056195995316604371);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree145(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 23, (DAAL_DATA_TYPE)1.0485000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 17, (DAAL_DATA_TYPE)2.1945000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 23, (DAAL_DATA_TYPE)0.98750000000000016);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.00026085054091302344);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 17, (DAAL_DATA_TYPE)1.4175000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 15, (DAAL_DATA_TYPE)1.6805000000000001);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 17, (DAAL_DATA_TYPE)0.69550000000000012);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 4, (DAAL_DATA_TYPE)1.3105000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 5, (DAAL_DATA_TYPE)0.58450000000000013);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 3, (DAAL_DATA_TYPE)1.1165000000000003);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.0019048469192865824);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.008530018287045615);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[9], 1, 19, (DAAL_DATA_TYPE)1.0630000000000004);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 27, (DAAL_DATA_TYPE)0.80650000000000011);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.00054959388066974516);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 5, (DAAL_DATA_TYPE)0.88150000000000006);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)-0.0088114544054047322);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.0025999664440978848);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)-0.0076550614261240869);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[8], 1, 5, (DAAL_DATA_TYPE)0.77950000000000019);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)-0.0039572780339145351);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)0.0058139973948709671);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[7], 1, 25, (DAAL_DATA_TYPE)1.8125000000000002);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 20, (DAAL_DATA_TYPE)2.3265000000000002);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 18, (DAAL_DATA_TYPE)0.99950000000000017);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 19, (DAAL_DATA_TYPE)1.6045000000000003);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 5, (DAAL_DATA_TYPE)0.96850000000000003);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 7, (DAAL_DATA_TYPE)-1.1454999999999997);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0030902936309576035);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 3, (DAAL_DATA_TYPE)1.3765000000000003);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 2, (DAAL_DATA_TYPE)-1.2829999999999997);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.012785702878609301);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0038877120657733323);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0033228331737501443);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[27], 1, 1, (DAAL_DATA_TYPE)1.0880000000000003);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0023136663310495873);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.0084331430657766764);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0091536354063216346);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[25], 1, 2, (DAAL_DATA_TYPE)1.0225000000000002);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0071334505422918264);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.0034093063005486562);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[24], 1, 17, (DAAL_DATA_TYPE)1.2855000000000001);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 9, (DAAL_DATA_TYPE)0.68950000000000011);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 9, (DAAL_DATA_TYPE)0.61050000000000015);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 9, (DAAL_DATA_TYPE)0.46250000000000008);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)0.0041014925628486609);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)-0.0065669894928023931);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0087000411147108454);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.0048855535061348501);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.0047177839859881832);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.0061057116624022674);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0078319755838518693);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[5], 1, 10, (DAAL_DATA_TYPE)0.70950000000000013);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.0051546587650071682);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 6, (DAAL_DATA_TYPE)0.083500000000000019);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.0080557229710393596);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.0047641421521180559);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[2], 1, 14, (DAAL_DATA_TYPE)-0.13249999999999998);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0018628172026947142);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0066591245925998041);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)0.00079018553813596645);

}

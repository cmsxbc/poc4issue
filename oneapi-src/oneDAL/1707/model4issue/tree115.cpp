 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree115(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 13, (DAAL_DATA_TYPE)2.8415000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 4, (DAAL_DATA_TYPE)1.4995000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 6, (DAAL_DATA_TYPE)-2.7564999999999995);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.0084833709079594841);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 7, (DAAL_DATA_TYPE)-1.2814999999999996);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 6, (DAAL_DATA_TYPE)-1.4244999999999999);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0080093403812757716);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 7, (DAAL_DATA_TYPE)-1.6334999999999997);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 21, (DAAL_DATA_TYPE)1.0870000000000004);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 1, (DAAL_DATA_TYPE)-0.56349999999999978);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.012264943537593354);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 5, (DAAL_DATA_TYPE)0.73450000000000004);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0062584467381238936);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0051882434671631818);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0034853128188221554);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[8], 1, 2, (DAAL_DATA_TYPE)0.27900000000000008);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 5, (DAAL_DATA_TYPE)1.3955000000000002);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 2, (DAAL_DATA_TYPE)-0.46749999999999997);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 23, (DAAL_DATA_TYPE)0.98650000000000004);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0061356441388207101);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0036244250084092097);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[18], 1, 0, (DAAL_DATA_TYPE)1.2355000000000003);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.010160798092700683);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.00072843696651679862);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.0034298847155878318);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[16], 1, 0, (DAAL_DATA_TYPE)1.5030000000000003);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 11, (DAAL_DATA_TYPE)0.88350000000000006);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 15, (DAAL_DATA_TYPE)-0.044499999999999991);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 23, (DAAL_DATA_TYPE)0.98550000000000015);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.0056114566884934904);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.0064948931476101288);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[28], 1, 2, (DAAL_DATA_TYPE)0.91200000000000014);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.011490750432366859);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.00099522672277295356);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.011299293762843672);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)0.0070480178932056719);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.00043225294473858998);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[2], 1, 14, (DAAL_DATA_TYPE)0.79900000000000015);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 9, (DAAL_DATA_TYPE)1.3035000000000003);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 27, (DAAL_DATA_TYPE)0.96650000000000003);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 2, (DAAL_DATA_TYPE)-1.0774999999999999);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.012333546371664852);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 11, (DAAL_DATA_TYPE)1.1915000000000002);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 14, (DAAL_DATA_TYPE)-0.51049999999999984);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 10, (DAAL_DATA_TYPE)-0.15249999999999997);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0016504937633872033);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.0095780850318260488);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[44], 1, 24, (DAAL_DATA_TYPE)0.93950000000000011);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 10, (DAAL_DATA_TYPE)-0.07149999999999998);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.015247019748810842);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.0031639487269733632);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)0.002078494753526605);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)0.0099768599761383883);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[40], 1, 0, (DAAL_DATA_TYPE)0.5545000000000001);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.0024324144609272481);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.008774987077516205);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[39], 1, 26, (DAAL_DATA_TYPE)1.2705000000000002);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.0014085892268589566);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.015128658507906257);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)0.0065451984856432933);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)0.0070135414600372321);

}

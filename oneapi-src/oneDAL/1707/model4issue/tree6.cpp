 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree6(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90450000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.81150000000000022);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 5, (DAAL_DATA_TYPE)0.94650000000000001);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 26, (DAAL_DATA_TYPE)0.72850000000000004);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 9, (DAAL_DATA_TYPE)1.1665000000000003);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 22, (DAAL_DATA_TYPE)0.73150000000000015);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.00049954963402009344);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 23, (DAAL_DATA_TYPE)1.2665000000000002);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.011064855004225885);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0090721098440034054);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.011673437356948854);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[4], 1, 27, (DAAL_DATA_TYPE)0.72450000000000003);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0024787415179514118);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[12], 1, 22, (DAAL_DATA_TYPE)0.83150000000000002);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)0.005668659993382388);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)-0.0080475447870589599);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0041584115259903518);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[2], 1, 5, (DAAL_DATA_TYPE)0.89350000000000007);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 22, (DAAL_DATA_TYPE)1.0575000000000003);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 27, (DAAL_DATA_TYPE)0.82250000000000012);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 26, (DAAL_DATA_TYPE)0.83850000000000013);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)-0.0014377909135227362);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.007283149688567931);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[20], 1, 24, (DAAL_DATA_TYPE)1.0405000000000002);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)-0.0074153672589595057);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)0.0045921023965867103);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.010906080809450642);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[18], 1, 22, (DAAL_DATA_TYPE)0.71350000000000013);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.01722896697948564);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 22, (DAAL_DATA_TYPE)0.94750000000000012);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.0064766817154555487);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.012450063517843477);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)0.99350000000000016);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 22, (DAAL_DATA_TYPE)1.0215000000000003);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 27, (DAAL_DATA_TYPE)1.0885000000000002);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 24, (DAAL_DATA_TYPE)0.73550000000000015);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 13, (DAAL_DATA_TYPE)0.78850000000000009);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.016964989900588989);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)0.0082657786551862955);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.014160345622305739);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.019871187626316563);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[34], 1, 24, (DAAL_DATA_TYPE)0.79950000000000021);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 0, (DAAL_DATA_TYPE)1.6205000000000003);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.005563473567880433);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.013105503576142447);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.0066494876907454981);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[33], 1, 22, (DAAL_DATA_TYPE)1.0285000000000002);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 22, (DAAL_DATA_TYPE)0.76250000000000007);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.0057555026722990949);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 27, (DAAL_DATA_TYPE)1.1775000000000002);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0022720198999728837);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[50], 1, 24, (DAAL_DATA_TYPE)1.2895000000000001);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.017859000994546997);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[52], 1, 0, (DAAL_DATA_TYPE)1.2835000000000003);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)-0.0014507225832017532);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.01628911201568211);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[47], 1, 24, (DAAL_DATA_TYPE)1.6850000000000003);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 21, (DAAL_DATA_TYPE)0.68150000000000011);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0090778205543756482);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.0047531632639734867);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)-0.0053359181158185946);

}

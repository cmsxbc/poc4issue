 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree47(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)1.0895000000000004);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 13, (DAAL_DATA_TYPE)1.4385000000000001);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 22, (DAAL_DATA_TYPE)0.99250000000000005);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 27, (DAAL_DATA_TYPE)0.85050000000000014);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 26, (DAAL_DATA_TYPE)0.72850000000000004);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 24, (DAAL_DATA_TYPE)0.64150000000000007);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 24, (DAAL_DATA_TYPE)0.5675);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0035368160477706363);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0085871955800441001);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.0049054251086932642);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[6], 1, 25, (DAAL_DATA_TYPE)1.1885000000000001);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 10, (DAAL_DATA_TYPE)-0.5704999999999999);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.00136060547361623);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.0028924997542847958);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0056982669114534349);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[5], 1, 22, (DAAL_DATA_TYPE)0.87950000000000006);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 26, (DAAL_DATA_TYPE)1.0345000000000002);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 19, (DAAL_DATA_TYPE)0.40250000000000008);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 7, (DAAL_DATA_TYPE)-0.72549999999999992);
    builder.addLeafNode(treeId, nodeIds[20], 0, (DAAL_DATA_TYPE)-0.019962792098522187);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0041134260813979542);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0034530394920899024);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[18], 1, 7, (DAAL_DATA_TYPE)0.62250000000000016);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.010137849301099778);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.0040944871162214595);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.0076893213624490133);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[4], 1, 17, (DAAL_DATA_TYPE)0.65250000000000019);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0023541753920160724);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0026712560448365246);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[3], 1, 23, (DAAL_DATA_TYPE)1.1125000000000003);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.0022095618127508368);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.012728529804874034);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.0035865059713859346);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[1], 1, 22, (DAAL_DATA_TYPE)1.0465000000000002);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 22, (DAAL_DATA_TYPE)0.74450000000000005);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 10, (DAAL_DATA_TYPE)-0.097499999999999989);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.011872606652398263);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.0028834267846635873);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.0044880250491517162);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[35], 1, 7, (DAAL_DATA_TYPE)-0.72549999999999992);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 7, (DAAL_DATA_TYPE)-0.91449999999999998);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 15, (DAAL_DATA_TYPE)-0.47649999999999992);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.0092802314006763965);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 9, (DAAL_DATA_TYPE)1.1725000000000001);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0061322905455849005);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.0046530778531904344);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.01218058690428734);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[41], 1, 14, (DAAL_DATA_TYPE)-0.86999999999999988);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.007110291806476138);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 25, (DAAL_DATA_TYPE)1.7785000000000002);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 15, (DAAL_DATA_TYPE)1.5185000000000002);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 9, (DAAL_DATA_TYPE)1.0555000000000001);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[53], 0, 13, (DAAL_DATA_TYPE)1.4815000000000003);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 17, (DAAL_DATA_TYPE)1.3915000000000002);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0014324689719905246);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)-0.01586956741369289);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)0.01034864199658235);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0052795641332365282);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.012163845277749576);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.0064057693178399232);

}

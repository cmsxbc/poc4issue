 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree158(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 3, (DAAL_DATA_TYPE)0.89250000000000018);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 11, (DAAL_DATA_TYPE)-1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)-0.0049159574555233121);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0038890273705350629);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[2], 1, 2, (DAAL_DATA_TYPE)-0.16049999999999998);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.012507749189223564);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0032259847906728582);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[1], 1, 3, (DAAL_DATA_TYPE)2.6165000000000007);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 5, (DAAL_DATA_TYPE)0.88650000000000018);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 18, (DAAL_DATA_TYPE)1.2365000000000002);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 18, (DAAL_DATA_TYPE)1.1280000000000003);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 9, (DAAL_DATA_TYPE)1.2475000000000003);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 0, (DAAL_DATA_TYPE)1.9155000000000002);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 0, (DAAL_DATA_TYPE)1.3375000000000001);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 17, (DAAL_DATA_TYPE)0.72750000000000015);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 3, (DAAL_DATA_TYPE)0.50550000000000017);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.0020406958626826175);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 3, (DAAL_DATA_TYPE)1.2105000000000004);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.0050636357514372322);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0010789887218270451);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[16], 1, 23, (DAAL_DATA_TYPE)1.3585000000000003);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.00012418627511283264);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.0098643996036396585);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[15], 1, 13, (DAAL_DATA_TYPE)1.4485000000000003);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 10, (DAAL_DATA_TYPE)0.56850000000000012);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 14, (DAAL_DATA_TYPE)0.28550000000000003);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 3, (DAAL_DATA_TYPE)1.0625000000000002);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 3, (DAAL_DATA_TYPE)0.41250000000000003);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.0092180087211697053);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.0007511839173054575);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.015079603289874892);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.0025900775436922662);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0090859293501125652);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.0063776218435830541);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)0.0038676077780383893);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.0025079680722183933);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[12], 1, 3, (DAAL_DATA_TYPE)1.2045000000000001);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.0087827152688987557);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.0040883353166282178);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[11], 1, 19, (DAAL_DATA_TYPE)1.5520000000000003);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 1, (DAAL_DATA_TYPE)0.30850000000000005);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 14, (DAAL_DATA_TYPE)0.28550000000000003);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.0035034881383915876);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.010574223314398442);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[42], 1, 10, (DAAL_DATA_TYPE)0.95250000000000001);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 21, (DAAL_DATA_TYPE)0.75550000000000017);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-0.011639882205054165);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[47], 1, 0, (DAAL_DATA_TYPE)0.63050000000000017);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.0087386989759074326);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)0.0035278836837071073);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0060510105039510466);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0088525095209479338);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[10], 1, 5, (DAAL_DATA_TYPE)0.91550000000000009);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[54], 0, 0, (DAAL_DATA_TYPE)0.59150000000000003);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.011085518182953821);
    builder.addLeafNode(treeId, nodeIds[55], 1, (DAAL_DATA_TYPE)0.001729419904597502);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[54], 1, 15, (DAAL_DATA_TYPE)1.6965000000000001);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.00013389822970323733);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.007285913372308845);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)-0.003375961526356594);

}

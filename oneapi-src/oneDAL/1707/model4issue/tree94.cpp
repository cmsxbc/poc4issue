 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree94(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 18, (DAAL_DATA_TYPE)-2.0784999999999996);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 19, (DAAL_DATA_TYPE)1.0630000000000004);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 17, (DAAL_DATA_TYPE)0.93550000000000011);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 1, (DAAL_DATA_TYPE)-0.38849999999999996);
    builder.addLeafNode(treeId, nodeIds[4], 0, (DAAL_DATA_TYPE)0.013490599560934832);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0031527931025872626);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)-0.002271624989807606);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.0039979479586084686);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[1], 1, 18, (DAAL_DATA_TYPE)-1.3404999999999998);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 21, (DAAL_DATA_TYPE)1.0425000000000002);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 23, (DAAL_DATA_TYPE)0.98550000000000015);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 1, (DAAL_DATA_TYPE)0.12850000000000003);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 14, (DAAL_DATA_TYPE)-0.13249999999999998);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.0081458447800417024);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.0060625712786402022);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.014183048635721208);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[11], 1, 21, (DAAL_DATA_TYPE)0.97850000000000004);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 3, (DAAL_DATA_TYPE)0.42050000000000004);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)0.0073636760728226771);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[18], 1, 27, (DAAL_DATA_TYPE)1.1225000000000003);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 23, (DAAL_DATA_TYPE)0.99250000000000005);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 25, (DAAL_DATA_TYPE)0.82450000000000012);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.012081279533524667);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.00095579395597071744);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[21], 1, 23, (DAAL_DATA_TYPE)1.0885000000000002);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0080799409957683609);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.0011842514947056771);
    builder.addLeafNode(treeId, nodeIds[20], 1, (DAAL_DATA_TYPE)-0.0089924035218334007);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.011086626383273498);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[10], 1, 21, (DAAL_DATA_TYPE)1.3465000000000003);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.013128019535006622);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[30], 1, 27, (DAAL_DATA_TYPE)1.0855000000000004);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0025114638795112744);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.008712149903488656);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[9], 1, 3, (DAAL_DATA_TYPE)1.3285000000000002);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 23, (DAAL_DATA_TYPE)1.6180000000000001);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.00057286757734730854);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.014142724814946238);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)0.00076392479240894318);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[35], 1, 23, (DAAL_DATA_TYPE)1.4120000000000001);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 14, (DAAL_DATA_TYPE)2.2395000000000005);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 18, (DAAL_DATA_TYPE)-1.0889999999999997);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 8, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.013916559624843873);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0031824920210056008);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[43], 1, 11, (DAAL_DATA_TYPE)0.25550000000000006);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)-7.7058529276277177e-05);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[47], 1, 21, (DAAL_DATA_TYPE)0.94650000000000001);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 13, (DAAL_DATA_TYPE)0.9405);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 9, (DAAL_DATA_TYPE)0.92250000000000021);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 14, (DAAL_DATA_TYPE)0.6885);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)0.0022321635857224464);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.010349184565711766);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0074747824226506056);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)-0.0051165965676248952);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.0073315065900245117);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.011246212195605039);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[41], 1, 0, (DAAL_DATA_TYPE)1.3285000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0092862091370319068);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0023993860591541641);

}

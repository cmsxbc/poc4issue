 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree148(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 22, (DAAL_DATA_TYPE)0.85550000000000004);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 21, (DAAL_DATA_TYPE)0.88850000000000018);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 13, (DAAL_DATA_TYPE)1.0575000000000003);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.00054706475717365114);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 1, (DAAL_DATA_TYPE)-0.75949999999999995);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.0083533055052372098);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0013798937433822959);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[2], 1, 3, (DAAL_DATA_TYPE)1.5465000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 13, (DAAL_DATA_TYPE)0.70750000000000013);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 21, (DAAL_DATA_TYPE)0.95150000000000012);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0056160710541711704);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 23, (DAAL_DATA_TYPE)0.99250000000000005);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0022421853332262901);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0091176719788242794);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0055641504197776782);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0034498904230448797);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[1], 1, 21, (DAAL_DATA_TYPE)0.58250000000000013);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[17], 0, 21, (DAAL_DATA_TYPE)0.49650000000000005);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 3, (DAAL_DATA_TYPE)0.49250000000000005);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)0.0059711800639828047);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[19], 1, 17, (DAAL_DATA_TYPE)0.80850000000000011);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)0.00075797622456498775);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)-0.01370763614287843);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)0.0082627415143210325);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[17], 1, 24, (DAAL_DATA_TYPE)0.75750000000000017);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.00084629199049448146);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[25], 1, 25, (DAAL_DATA_TYPE)0.30650000000000005);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.0056783788597151164);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[27], 1, 22, (DAAL_DATA_TYPE)0.97150000000000014);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[29], 0, 24, (DAAL_DATA_TYPE)1.6165000000000003);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 9, (DAAL_DATA_TYPE)0.46250000000000008);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)0.0031409537544779815);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 5, (DAAL_DATA_TYPE)1.2255000000000003);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)-0.0037469448398890128);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 22, (DAAL_DATA_TYPE)0.91550000000000009);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.0037084491402302462);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[35], 1, 18, (DAAL_DATA_TYPE)-0.16449999999999998);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.0096983784344047315);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)0.00094902929655897117);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[30], 1, 22, (DAAL_DATA_TYPE)0.9105000000000002);
    builder.addLeafNode(treeId, nodeIds[40], 0, (DAAL_DATA_TYPE)-0.0034098964051476549);
    builder.addLeafNode(treeId, nodeIds[40], 1, (DAAL_DATA_TYPE)0.0091228759797239625);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[29], 1, 21, (DAAL_DATA_TYPE)0.6715000000000001);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.0066379447485197269);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 21, (DAAL_DATA_TYPE)0.89350000000000007);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 15, (DAAL_DATA_TYPE)0.84050000000000014);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.0035919567229939276);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.0023559319526096113);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[45], 1, 4, (DAAL_DATA_TYPE)-0.64699999999999991);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 0, (DAAL_DATA_TYPE)0.60950000000000004);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 3, (DAAL_DATA_TYPE)1.7675000000000003);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 24, (DAAL_DATA_TYPE)1.2685000000000002);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0046760679096362352);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)0.010824993960559368);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)-0.012702492489257739);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[50], 1, 4, (DAAL_DATA_TYPE)-0.76449999999999985);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)0.0022401944954209482);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.012386090852893316);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[49], 1, 9, (DAAL_DATA_TYPE)0.47750000000000004);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.008568582102656366);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0019796742143882557);

}

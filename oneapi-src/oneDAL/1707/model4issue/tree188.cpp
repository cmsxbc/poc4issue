 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree188(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 5, (DAAL_DATA_TYPE)1.3445000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)1.8445000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 0, (DAAL_DATA_TYPE)1.0375000000000003);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.00024928480077184635);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[3], 1, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.00173497381068174);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 3, (DAAL_DATA_TYPE)1.0195000000000001);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 15, (DAAL_DATA_TYPE)-1.2504999999999997);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.0054479429203852575);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[8], 1, 7, (DAAL_DATA_TYPE)1.0885000000000002);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.00067843513717402671);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)-0.0065945369897519139);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0034902237081928323);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)-0.0049182300703250808);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[1], 1, 9, (DAAL_DATA_TYPE)1.2195000000000003);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[15], 0, 3, (DAAL_DATA_TYPE)0.63950000000000007);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 3, (DAAL_DATA_TYPE)0.46750000000000008);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.0037010983198656347);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.011394880198777709);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[16], 1, 0, (DAAL_DATA_TYPE)0.61550000000000005);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 25, (DAAL_DATA_TYPE)1.1635000000000002);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)0.001374480956410234);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)-0.0082479691722740743);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[20], 1, 17, (DAAL_DATA_TYPE)0.73550000000000015);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 5, (DAAL_DATA_TYPE)1.5635000000000001);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0037166484715675727);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)-0.0051871850453100582);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[24], 1, 10, (DAAL_DATA_TYPE)-1.0384999999999998);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0026903172616254203);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0050435230323692421);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[15], 1, 13, (DAAL_DATA_TYPE)0.55350000000000021);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0071367579645344199);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[31], 1, 3, (DAAL_DATA_TYPE)1.0135000000000003);
    nodeIds[34] = builder.addSplitNode(treeId, nodeIds[33], 0, 23, (DAAL_DATA_TYPE)0.99050000000000005);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[34], 0, 2, (DAAL_DATA_TYPE)-0.21499999999999997);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 13, (DAAL_DATA_TYPE)1.7435000000000003);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)0.00023839853360856837);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.0099346257373690607);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[35], 1, 18, (DAAL_DATA_TYPE)0.63450000000000017);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.004968677214629999);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)-0.0027670132032094098);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[34], 1, 7, (DAAL_DATA_TYPE)0.98450000000000004);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[42], 0, 24, (DAAL_DATA_TYPE)0.93650000000000022);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)-0.0015499244882341695);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[43], 1, 18, (DAAL_DATA_TYPE)-0.073499999999999982);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.016351087755438958);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)-0.0051247714780038225);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)0.0028756575355225284);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[33], 1, 15, (DAAL_DATA_TYPE)1.2715000000000003);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 24, (DAAL_DATA_TYPE)0.78850000000000009);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0038718244216094412);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[50], 1, 7, (DAAL_DATA_TYPE)1.1435000000000002);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 1, (DAAL_DATA_TYPE)-1.1204999999999998);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.0014346176137526832);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 0, (DAAL_DATA_TYPE)0.56150000000000022);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)0.0005231923051178455);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[55], 1, 0, (DAAL_DATA_TYPE)0.95750000000000013);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)0.013487249990659101);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.0060943098168126219);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0028935218643811014);
    builder.addLeafNode(treeId, nodeIds[49], 1, (DAAL_DATA_TYPE)-0.0049295463599264627);

}

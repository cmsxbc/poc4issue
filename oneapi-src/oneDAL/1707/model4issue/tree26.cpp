 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree26(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90650000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.85650000000000015);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 9, (DAAL_DATA_TYPE)1.1555000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 24, (DAAL_DATA_TYPE)0.73550000000000015);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 22, (DAAL_DATA_TYPE)1.0705000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 22, (DAAL_DATA_TYPE)0.73150000000000015);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 17, (DAAL_DATA_TYPE)0.61750000000000005);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)-0.0010017460584640504);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.015617870241403582);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[6], 1, 17, (DAAL_DATA_TYPE)1.4495000000000002);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)-0.003118748614002788);
    builder.addLeafNode(treeId, nodeIds[10], 1, (DAAL_DATA_TYPE)0.0087867386639118202);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0079424052700108171);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[4], 1, 14, (DAAL_DATA_TYPE)0.49450000000000005);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.0049478111788630492);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[14], 1, 18, (DAAL_DATA_TYPE)1.3255000000000001);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)0.002106743532268307);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)-0.010656257579103113);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.0063468436372346717);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)1.0895000000000004);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 25, (DAAL_DATA_TYPE)0.68650000000000022);
    builder.addLeafNode(treeId, nodeIds[21], 0, (DAAL_DATA_TYPE)0.00031294976878497337);
    builder.addLeafNode(treeId, nodeIds[21], 1, (DAAL_DATA_TYPE)0.0069124477834353803);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[20], 1, 6, (DAAL_DATA_TYPE)1.2175000000000002);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 22, (DAAL_DATA_TYPE)0.94650000000000001);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 22, (DAAL_DATA_TYPE)0.77550000000000019);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)0.0088495518534611444);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 6, (DAAL_DATA_TYPE)0.75350000000000017);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[28], 0, 4, (DAAL_DATA_TYPE)1.4160000000000001);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)-0.011862952186973818);
    builder.addLeafNode(treeId, nodeIds[29], 1, (DAAL_DATA_TYPE)0.0049758168203490119);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0093736997246742261);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.0040049632804261314);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.015425283323835443);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 22, (DAAL_DATA_TYPE)1.0675000000000001);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.008337089645025492);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 24, (DAAL_DATA_TYPE)0.79950000000000021);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 13, (DAAL_DATA_TYPE)1.3895000000000002);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)0.0016595979507725974);
    builder.addLeafNode(treeId, nodeIds[39], 1, (DAAL_DATA_TYPE)0.015872821522255741);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[38], 1, 25, (DAAL_DATA_TYPE)1.0895000000000004);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.00033908178098499778);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.0088611409068107602);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[35], 1, 25, (DAAL_DATA_TYPE)1.9045000000000003);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 9, (DAAL_DATA_TYPE)1.3175000000000001);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 11, (DAAL_DATA_TYPE)-0.74149999999999994);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 19, (DAAL_DATA_TYPE)-1.1714999999999998);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)0.015232354402542114);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 2, (DAAL_DATA_TYPE)-0.44249999999999995);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.0080589087059100475);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[50], 1, 11, (DAAL_DATA_TYPE)-1.2414999999999998);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.0075460535046216609);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[52], 1, 6, (DAAL_DATA_TYPE)0.90050000000000019);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)0.0078969436927118167);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.011885913759469987);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0023589983342155335);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)0.0051241066955183814);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[45], 1, 10, (DAAL_DATA_TYPE)1.1735000000000002);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0080470646332417208);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0089550187500814608);

}

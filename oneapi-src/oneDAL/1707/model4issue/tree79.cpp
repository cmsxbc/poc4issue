 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree79(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 25, (DAAL_DATA_TYPE)1.5585000000000002);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 5, (DAAL_DATA_TYPE)2.3995000000000002);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 24, (DAAL_DATA_TYPE)1.0265000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 9, (DAAL_DATA_TYPE)0.68950000000000011);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 25, (DAAL_DATA_TYPE)0.49500000000000005);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 15, (DAAL_DATA_TYPE)1.2575000000000001);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 4, (DAAL_DATA_TYPE)-0.42349999999999993);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 0, (DAAL_DATA_TYPE)1.3285000000000002);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)-0.0038450302738769386);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.012191124843514485);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[7], 1, 5, (DAAL_DATA_TYPE)0.80150000000000021);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0031459490582346917);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.013256065436500184);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.0064321133515073195);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[5], 1, 21, (DAAL_DATA_TYPE)1.5845000000000002);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.0014648031711672266);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)0.013030197677601661);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[4], 1, 27, (DAAL_DATA_TYPE)0.90250000000000019);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[18], 0, 4, (DAAL_DATA_TYPE)1.3105000000000002);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 6, (DAAL_DATA_TYPE)1.8465000000000003);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 13, (DAAL_DATA_TYPE)0.70250000000000001);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 24, (DAAL_DATA_TYPE)0.9085000000000002);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 25, (DAAL_DATA_TYPE)1.1885000000000001);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 17, (DAAL_DATA_TYPE)0.77650000000000008);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 10, (DAAL_DATA_TYPE)0.83250000000000013);
    builder.addLeafNode(treeId, nodeIds[25], 0, (DAAL_DATA_TYPE)0.0011152026916129722);
    builder.addLeafNode(treeId, nodeIds[25], 1, (DAAL_DATA_TYPE)0.01373338466105254);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[24], 1, 2, (DAAL_DATA_TYPE)0.93450000000000022);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0017020985808061516);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.01407449808716774);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)-0.012005314337355751);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[22], 1, 25, (DAAL_DATA_TYPE)0.73750000000000016);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.01933950074017048);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0053186539339564621);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[21], 1, 3, (DAAL_DATA_TYPE)1.4915000000000003);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 5, (DAAL_DATA_TYPE)0.53250000000000008);
    builder.addLeafNode(treeId, nodeIds[36], 0, (DAAL_DATA_TYPE)-0.0049693720086532479);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[36], 1, 18, (DAAL_DATA_TYPE)1.3105000000000002);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)0.002466925562181331);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.0049731895164178133);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)-0.0069727777074726806);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[20], 1, 21, (DAAL_DATA_TYPE)0.85750000000000004);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)-0.00054913294035941363);
    builder.addLeafNode(treeId, nodeIds[42], 1, (DAAL_DATA_TYPE)-0.01680926598770463);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[19], 1, 3, (DAAL_DATA_TYPE)0.45550000000000007);
    builder.addLeafNode(treeId, nodeIds[45], 0, (DAAL_DATA_TYPE)-0.0039050613756518105);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.0057235558835887594);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[18], 1, 1, (DAAL_DATA_TYPE)-1.6234999999999997);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.014332958106667952);
    builder.addLeafNode(treeId, nodeIds[48], 1, (DAAL_DATA_TYPE)-0.0029914389320971303);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[3], 1, 0, (DAAL_DATA_TYPE)0.50550000000000017);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)0.004304006161188991);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 27, (DAAL_DATA_TYPE)1.7890000000000004);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.00078528499562425776);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0080979081927924548);
    builder.addLeafNode(treeId, nodeIds[2], 1, (DAAL_DATA_TYPE)0.005905108719918074);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[1], 1, 10, (DAAL_DATA_TYPE)0.7915000000000002);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[57], 0, 21, (DAAL_DATA_TYPE)2.3130000000000002);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)-0.0025338679097731626);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.014039809515942699);
    builder.addLeafNode(treeId, nodeIds[57], 1, (DAAL_DATA_TYPE)0.0025792884455276195);

}

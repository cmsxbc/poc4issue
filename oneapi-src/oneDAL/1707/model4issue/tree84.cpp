 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree84(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 1, (DAAL_DATA_TYPE)2.2625000000000006);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 3, (DAAL_DATA_TYPE)1.3505000000000003);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 23, (DAAL_DATA_TYPE)1.5210000000000001);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 6, (DAAL_DATA_TYPE)-0.056499999999999995);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 21, (DAAL_DATA_TYPE)3.0265000000000004);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 24, (DAAL_DATA_TYPE)1.9665000000000001);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 22, (DAAL_DATA_TYPE)1.2695000000000001);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.00078948033695399916);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)0.0045656761668700111);
    builder.addLeafNode(treeId, nodeIds[6], 1, (DAAL_DATA_TYPE)0.011336705734332403);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)-0.0079052533841494355);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[4], 1, 14, (DAAL_DATA_TYPE)-1.5884999999999998);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 10, (DAAL_DATA_TYPE)0.15750000000000003);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 10, (DAAL_DATA_TYPE)-0.85299999999999987);
    builder.addLeafNode(treeId, nodeIds[14], 0, (DAAL_DATA_TYPE)-0.00086779387667775161);
    builder.addLeafNode(treeId, nodeIds[14], 1, (DAAL_DATA_TYPE)-0.017536250366406006);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.0025930202650752934);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)4.4171060509735104e-06);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[3], 1, 6, (DAAL_DATA_TYPE)0.057500000000000009);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.00026495547166892461);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)-0.012779992612961092);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[2], 1, 22, (DAAL_DATA_TYPE)0.63650000000000018);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)0.0084138625137069652);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[22], 1, 11, (DAAL_DATA_TYPE)0.24200000000000002);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 5, (DAAL_DATA_TYPE)0.81650000000000011);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 10, (DAAL_DATA_TYPE)-1.0384999999999998);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.015403229234119256);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 1, (DAAL_DATA_TYPE)-0.25349999999999995);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.0032703416534897059);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 7, (DAAL_DATA_TYPE)-0.87449999999999994);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)0.0030117659757916745);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)-0.0071387069260186349);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[25], 1, 17, (DAAL_DATA_TYPE)0.42950000000000005);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.011366235106610336);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[33], 1, 11, (DAAL_DATA_TYPE)-1.0924999999999998);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)-0.0023375545605278211);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[35], 1, 5, (DAAL_DATA_TYPE)0.89650000000000019);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.012803172637467032);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 22, (DAAL_DATA_TYPE)0.76550000000000018);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.0068288408936216282);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 13, (DAAL_DATA_TYPE)0.75750000000000017);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.0068905181202449303);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[41], 1, 1, (DAAL_DATA_TYPE)0.75550000000000017);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[43], 0, 4, (DAAL_DATA_TYPE)-0.58149999999999979);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)0.0049482740575402251);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)-0.0049195754889903281);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)0.0082109914715024265);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[24], 1, 23, (DAAL_DATA_TYPE)1.0675000000000001);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 12, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[49], 0, 22, (DAAL_DATA_TYPE)1.3715000000000004);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)-0.0078226402944559497);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0019242590282509036);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[49], 1, 13, (DAAL_DATA_TYPE)0.75350000000000017);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0028618898634847844);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0053245545808829698);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[48], 1, 6, (DAAL_DATA_TYPE)0.32250000000000006);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.0035075875738149751);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[56], 1, 15, (DAAL_DATA_TYPE)-0.33849999999999997);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.00023159088506813971);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)0.01362619372084737);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)-0.009749422886449359);

}

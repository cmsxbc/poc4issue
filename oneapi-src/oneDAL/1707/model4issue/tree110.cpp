 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree110(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 18, (DAAL_DATA_TYPE)-0.63249999999999995);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 1, (DAAL_DATA_TYPE)0.33550000000000008);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 24, (DAAL_DATA_TYPE)1.4355000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 3, (DAAL_DATA_TYPE)0.32950000000000007);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 1, (DAAL_DATA_TYPE)-1.1034999999999997);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)-0.0025568347604227409);
    builder.addLeafNode(treeId, nodeIds[5], 1, (DAAL_DATA_TYPE)0.0078010565156794408);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[4], 1, 6, (DAAL_DATA_TYPE)1.5425000000000002);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 21, (DAAL_DATA_TYPE)1.1925000000000001);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 21, (DAAL_DATA_TYPE)0.86350000000000005);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 1, (DAAL_DATA_TYPE)-0.50249999999999984);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 5, (DAAL_DATA_TYPE)1.1365000000000001);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 19, (DAAL_DATA_TYPE)1.1755000000000002);
    nodeIds[14] = builder.addSplitNode(treeId, nodeIds[13], 0, 18, (DAAL_DATA_TYPE)-1.3594999999999999);
    nodeIds[15] = builder.addSplitNode(treeId, nodeIds[14], 0, 13, (DAAL_DATA_TYPE)0.72550000000000014);
    builder.addLeafNode(treeId, nodeIds[15], 0, (DAAL_DATA_TYPE)0.0086885784663969564);
    builder.addLeafNode(treeId, nodeIds[15], 1, (DAAL_DATA_TYPE)-0.004673954439551934);
    nodeIds[18] = builder.addSplitNode(treeId, nodeIds[14], 1, 27, (DAAL_DATA_TYPE)0.78450000000000009);
    builder.addLeafNode(treeId, nodeIds[18], 0, (DAAL_DATA_TYPE)-0.012425352738279364);
    builder.addLeafNode(treeId, nodeIds[18], 1, (DAAL_DATA_TYPE)-0.0019972719914781358);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.007020154067625602);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.010351183919904187);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[11], 1, 7, (DAAL_DATA_TYPE)-0.96849999999999981);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 27, (DAAL_DATA_TYPE)0.7965000000000001);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.00032119700685143474);
    builder.addLeafNode(treeId, nodeIds[24], 1, (DAAL_DATA_TYPE)-0.013576155155897142);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[23], 1, 3, (DAAL_DATA_TYPE)1.4185000000000001);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 17, (DAAL_DATA_TYPE)0.50650000000000006);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)-0.0084057484520599253);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)0.0027579262701328843);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)0.0097814269103885937);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[10], 1, 2, (DAAL_DATA_TYPE)-0.81249999999999989);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0064019112526217392);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.00038564068186184712);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[9], 1, 5, (DAAL_DATA_TYPE)1.1135000000000004);
    nodeIds[36] = builder.addSplitNode(treeId, nodeIds[35], 0, 6, (DAAL_DATA_TYPE)-0.011499999999999998);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[36], 0, 4, (DAAL_DATA_TYPE)0.08900000000000001);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)0.0011999859667286791);
    builder.addLeafNode(treeId, nodeIds[37], 1, (DAAL_DATA_TYPE)-0.012933845752850177);
    builder.addLeafNode(treeId, nodeIds[36], 1, (DAAL_DATA_TYPE)-0.018709014176524111);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.0033576381154531657);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)0.0066520991921424875);
    nodeIds[43] = builder.addSplitNode(treeId, nodeIds[3], 1, 5, (DAAL_DATA_TYPE)1.6380000000000001);
    builder.addLeafNode(treeId, nodeIds[43], 0, (DAAL_DATA_TYPE)0.007251832037692584);
    builder.addLeafNode(treeId, nodeIds[43], 1, (DAAL_DATA_TYPE)-0.0036504013463854791);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[2], 1, 2, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[46], 0, 26, (DAAL_DATA_TYPE)1.4725000000000004);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 24, (DAAL_DATA_TYPE)1.0715000000000001);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[48], 0, 15, (DAAL_DATA_TYPE)0.42050000000000004);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.0081852034892347693);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 4, (DAAL_DATA_TYPE)0.39550000000000007);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)-0.0052840983973712558);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0098601004640970907);
    nodeIds[54] = builder.addSplitNode(treeId, nodeIds[48], 1, 1, (DAAL_DATA_TYPE)0.82750000000000001);
    builder.addLeafNode(treeId, nodeIds[54], 0, (DAAL_DATA_TYPE)-0.020750954002141955);
    builder.addLeafNode(treeId, nodeIds[54], 1, (DAAL_DATA_TYPE)-0.0047525648524363836);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)0.004300474263727665);
    nodeIds[58] = builder.addSplitNode(treeId, nodeIds[46], 1, 0, (DAAL_DATA_TYPE)1.0045000000000002);
    builder.addLeafNode(treeId, nodeIds[58], 0, (DAAL_DATA_TYPE)0.0018222731764295274);
    builder.addLeafNode(treeId, nodeIds[58], 1, (DAAL_DATA_TYPE)-0.005666593006370884);
    builder.addLeafNode(treeId, nodeIds[1], 1, (DAAL_DATA_TYPE)0.00042470785886763454);

}

 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree178(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 23, (DAAL_DATA_TYPE)0.97750000000000015);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 0, (DAAL_DATA_TYPE)0.6715000000000001);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 4, (DAAL_DATA_TYPE)0.28350000000000003);
    builder.addLeafNode(treeId, nodeIds[3], 0, (DAAL_DATA_TYPE)0.002793502822169103);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.012980729487279189);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[2], 1, 3, (DAAL_DATA_TYPE)1.4275000000000002);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[6], 0, 11, (DAAL_DATA_TYPE)0.098500000000000018);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[7], 0, 11, (DAAL_DATA_TYPE)-1.1404999999999996);
    builder.addLeafNode(treeId, nodeIds[8], 0, (DAAL_DATA_TYPE)0.00054988558515019366);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0090812987773805053);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[7], 1, 0, (DAAL_DATA_TYPE)1.3915000000000002);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 19, (DAAL_DATA_TYPE)-0.10549999999999998);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)-0.0068050056463107474);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)0.0050102867267054069);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)0.009703989238256501);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[6], 1, 9, (DAAL_DATA_TYPE)0.79050000000000009);
    builder.addLeafNode(treeId, nodeIds[16], 0, (DAAL_DATA_TYPE)0.011961938987951726);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.0023885411411439152);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[1], 1, 6, (DAAL_DATA_TYPE)0.25450000000000006);
    nodeIds[20] = builder.addSplitNode(treeId, nodeIds[19], 0, 14, (DAAL_DATA_TYPE)-0.80449999999999988);
    nodeIds[21] = builder.addSplitNode(treeId, nodeIds[20], 0, 18, (DAAL_DATA_TYPE)-0.50549999999999995);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[21], 0, 14, (DAAL_DATA_TYPE)-0.91349999999999987);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 6, (DAAL_DATA_TYPE)-0.65849999999999997);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 25, (DAAL_DATA_TYPE)0.86450000000000016);
    builder.addLeafNode(treeId, nodeIds[24], 0, (DAAL_DATA_TYPE)0.0023529397720035089);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[24], 1, 10, (DAAL_DATA_TYPE)-0.46149999999999997);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.00016615899628959598);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.0095559026033902959);
    nodeIds[29] = builder.addSplitNode(treeId, nodeIds[23], 1, 11, (DAAL_DATA_TYPE)-0.99149999999999994);
    builder.addLeafNode(treeId, nodeIds[29], 0, (DAAL_DATA_TYPE)0.011972619938077751);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[29], 1, 13, (DAAL_DATA_TYPE)0.78050000000000008);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 8, (DAAL_DATA_TYPE)1.6300000000000001);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)-0.0071307173669338227);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)0.0039473299671703111);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0068322692004928621);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)-0.0041658267978641949);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[21], 1, 16, (DAAL_DATA_TYPE)1.9110000000000003);
    builder.addLeafNode(treeId, nodeIds[37], 0, (DAAL_DATA_TYPE)-0.001008443218652383);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[37], 1, 1, (DAAL_DATA_TYPE)-0.26249999999999996);
    builder.addLeafNode(treeId, nodeIds[39], 0, (DAAL_DATA_TYPE)-0.009234601851072043);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[39], 1, 6, (DAAL_DATA_TYPE)-0.62449999999999994);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)-0.0061905190581455832);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.0062940903124399485);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[20], 1, 14, (DAAL_DATA_TYPE)-0.75299999999999989);
    nodeIds[45] = builder.addSplitNode(treeId, nodeIds[44], 0, 10, (DAAL_DATA_TYPE)0.027500000000000004);
    nodeIds[46] = builder.addSplitNode(treeId, nodeIds[45], 0, 6, (DAAL_DATA_TYPE)-0.92149999999999987);
    builder.addLeafNode(treeId, nodeIds[46], 0, (DAAL_DATA_TYPE)0.008207310559477524);
    builder.addLeafNode(treeId, nodeIds[46], 1, (DAAL_DATA_TYPE)-0.0051786754604267043);
    builder.addLeafNode(treeId, nodeIds[45], 1, (DAAL_DATA_TYPE)0.012937374496832492);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[44], 1, 10, (DAAL_DATA_TYPE)1.8165000000000002);
    builder.addLeafNode(treeId, nodeIds[50], 0, (DAAL_DATA_TYPE)0.00035373125970050408);
    builder.addLeafNode(treeId, nodeIds[50], 1, (DAAL_DATA_TYPE)0.0053505963087445707);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[19], 1, 5, (DAAL_DATA_TYPE)1.4565000000000003);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)-0.00090865589313369349);
    nodeIds[55] = builder.addSplitNode(treeId, nodeIds[53], 1, 11, (DAAL_DATA_TYPE)-1.2679999999999996);
    builder.addLeafNode(treeId, nodeIds[55], 0, (DAAL_DATA_TYPE)-0.0050998970943813525);
    nodeIds[57] = builder.addSplitNode(treeId, nodeIds[55], 1, 2, (DAAL_DATA_TYPE)-1.2444999999999997);
    builder.addLeafNode(treeId, nodeIds[57], 0, (DAAL_DATA_TYPE)-0.0041007287143610223);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[57], 1, 15, (DAAL_DATA_TYPE)1.2915000000000003);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0053410107366422691);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0042733617693833685);

}

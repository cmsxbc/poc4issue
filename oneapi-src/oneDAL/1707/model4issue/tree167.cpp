 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree167(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 22, (DAAL_DATA_TYPE)0.52700000000000014);
    builder.addLeafNode(treeId, nodeIds[1], 0, (DAAL_DATA_TYPE)0.0061107197027329523);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[1], 1, 3, (DAAL_DATA_TYPE)2.7455000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 3, (DAAL_DATA_TYPE)0.74450000000000005);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 23, (DAAL_DATA_TYPE)0.98850000000000005);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 24, (DAAL_DATA_TYPE)0.58850000000000013);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)0.0057486135311378746);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 18, (DAAL_DATA_TYPE)1.3255000000000001);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 18, (DAAL_DATA_TYPE)-0.5854999999999998);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 13, (DAAL_DATA_TYPE)0.97550000000000014);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 12, (DAAL_DATA_TYPE)1.6610000000000003);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[11], 0, 2, (DAAL_DATA_TYPE)0.41950000000000004);
    builder.addLeafNode(treeId, nodeIds[12], 0, (DAAL_DATA_TYPE)0.0015737126208841803);
    builder.addLeafNode(treeId, nodeIds[12], 1, (DAAL_DATA_TYPE)-0.0078163621454116188);
    builder.addLeafNode(treeId, nodeIds[11], 1, (DAAL_DATA_TYPE)-0.0093934671091847124);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[10], 1, 23, (DAAL_DATA_TYPE)0.98450000000000004);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 11, (DAAL_DATA_TYPE)0.58150000000000002);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)0.00057954082022542547);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)-0.011342758763581515);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.0058776543562998997);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0016200764357897119);
    builder.addLeafNode(treeId, nodeIds[8], 1, (DAAL_DATA_TYPE)-0.0049553937830582812);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[5], 1, 4, (DAAL_DATA_TYPE)-0.011999999999999999);
    nodeIds[24] = builder.addSplitNode(treeId, nodeIds[23], 0, 25, (DAAL_DATA_TYPE)1.3980000000000004);
    nodeIds[25] = builder.addSplitNode(treeId, nodeIds[24], 0, 17, (DAAL_DATA_TYPE)0.9405);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[25], 0, 18, (DAAL_DATA_TYPE)-0.61749999999999983);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 6, (DAAL_DATA_TYPE)0.24550000000000002);
    builder.addLeafNode(treeId, nodeIds[27], 0, (DAAL_DATA_TYPE)0.0069592557618753954);
    builder.addLeafNode(treeId, nodeIds[27], 1, (DAAL_DATA_TYPE)-0.005543147322411339);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[26], 1, 1, (DAAL_DATA_TYPE)-0.027499999999999997);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[30], 0, 4, (DAAL_DATA_TYPE)-0.38549999999999995);
    builder.addLeafNode(treeId, nodeIds[31], 0, (DAAL_DATA_TYPE)-0.0095238193448441213);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.0019144340756941927);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.00026897950447164477);
    nodeIds[35] = builder.addSplitNode(treeId, nodeIds[25], 1, 25, (DAAL_DATA_TYPE)1.2045000000000001);
    builder.addLeafNode(treeId, nodeIds[35], 0, (DAAL_DATA_TYPE)0.0020603939495391819);
    builder.addLeafNode(treeId, nodeIds[35], 1, (DAAL_DATA_TYPE)0.013437470741569996);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[24], 1, 4, (DAAL_DATA_TYPE)-0.72249999999999981);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.0084724659664341465);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)0.00059195538725409849);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[23], 1, 7, (DAAL_DATA_TYPE)0.17850000000000002);
    nodeIds[42] = builder.addSplitNode(treeId, nodeIds[41], 0, 3, (DAAL_DATA_TYPE)0.58450000000000013);
    builder.addLeafNode(treeId, nodeIds[42], 0, (DAAL_DATA_TYPE)0.00085465097814358716);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[42], 1, 11, (DAAL_DATA_TYPE)0.50700000000000012);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.0084061661960952213);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0009398210337575602);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[41], 1, 10, (DAAL_DATA_TYPE)-1.1464999999999999);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)0.001987986625172198);
    nodeIds[49] = builder.addSplitNode(treeId, nodeIds[47], 1, 15, (DAAL_DATA_TYPE)-0.54149999999999998);
    builder.addLeafNode(treeId, nodeIds[49], 0, (DAAL_DATA_TYPE)-0.01013032789974485);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[49], 1, 6, (DAAL_DATA_TYPE)0.41450000000000004);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 14, (DAAL_DATA_TYPE)0.30550000000000005);
    builder.addLeafNode(treeId, nodeIds[52], 0, (DAAL_DATA_TYPE)-0.01185844812076539);
    builder.addLeafNode(treeId, nodeIds[52], 1, (DAAL_DATA_TYPE)-0.0010932286768885597);
    builder.addLeafNode(treeId, nodeIds[51], 1, (DAAL_DATA_TYPE)0.0024502869242017992);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[4], 1, 23, (DAAL_DATA_TYPE)0.99250000000000005);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.00040343588229753001);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0010493714191938109);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[3], 1, 14, (DAAL_DATA_TYPE)-0.14349999999999996);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0022990276823596409);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0063828142235676441);

}

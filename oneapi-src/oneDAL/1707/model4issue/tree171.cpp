 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree171(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 4, (DAAL_DATA_TYPE)1.6505000000000003);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 17, (DAAL_DATA_TYPE)0.53850000000000009);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 1, (DAAL_DATA_TYPE)1.6785000000000003);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 1, (DAAL_DATA_TYPE)1.2045000000000001);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 23, (DAAL_DATA_TYPE)1.0625000000000002);
    nodeIds[6] = builder.addSplitNode(treeId, nodeIds[5], 0, 15, (DAAL_DATA_TYPE)-1.3454999999999997);
    builder.addLeafNode(treeId, nodeIds[6], 0, (DAAL_DATA_TYPE)-0.0055716944175461932);
    nodeIds[8] = builder.addSplitNode(treeId, nodeIds[6], 1, 2, (DAAL_DATA_TYPE)0.73650000000000004);
    nodeIds[9] = builder.addSplitNode(treeId, nodeIds[8], 0, 15, (DAAL_DATA_TYPE)1.2575000000000001);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[9], 0, 19, (DAAL_DATA_TYPE)-1.2554999999999998);
    builder.addLeafNode(treeId, nodeIds[10], 0, (DAAL_DATA_TYPE)0.0041150045505135647);
    nodeIds[12] = builder.addSplitNode(treeId, nodeIds[10], 1, 1, (DAAL_DATA_TYPE)-0.87749999999999984);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[12], 0, 10, (DAAL_DATA_TYPE)-0.5575);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)-0.0065697968815979753);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.007036010327283293);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[12], 1, 0, (DAAL_DATA_TYPE)0.97550000000000014);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 25, (DAAL_DATA_TYPE)0.77150000000000019);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.011662707392436763);
    nodeIds[19] = builder.addSplitNode(treeId, nodeIds[17], 1, 10, (DAAL_DATA_TYPE)0.56850000000000012);
    builder.addLeafNode(treeId, nodeIds[19], 0, (DAAL_DATA_TYPE)-0.007262720112466133);
    builder.addLeafNode(treeId, nodeIds[19], 1, (DAAL_DATA_TYPE)0.0059434259395030418);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[16], 1, 21, (DAAL_DATA_TYPE)0.80150000000000021);
    builder.addLeafNode(treeId, nodeIds[22], 0, (DAAL_DATA_TYPE)-0.0057334789220476528);
    builder.addLeafNode(treeId, nodeIds[22], 1, (DAAL_DATA_TYPE)0.0037392380870878701);
    builder.addLeafNode(treeId, nodeIds[9], 1, (DAAL_DATA_TYPE)0.0041697064720427812);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[8], 1, 6, (DAAL_DATA_TYPE)-1.1384999999999998);
    builder.addLeafNode(treeId, nodeIds[26], 0, (DAAL_DATA_TYPE)-0.0067040322773391382);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[26], 1, 0, (DAAL_DATA_TYPE)1.6475000000000002);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.0063290196185401331);
    builder.addLeafNode(treeId, nodeIds[28], 1, (DAAL_DATA_TYPE)-0.0033850270111791115);
    nodeIds[31] = builder.addSplitNode(treeId, nodeIds[5], 1, 27, (DAAL_DATA_TYPE)0.92450000000000021);
    nodeIds[32] = builder.addSplitNode(treeId, nodeIds[31], 0, 24, (DAAL_DATA_TYPE)0.9085000000000002);
    builder.addLeafNode(treeId, nodeIds[32], 0, (DAAL_DATA_TYPE)0.0036793048743641484);
    builder.addLeafNode(treeId, nodeIds[32], 1, (DAAL_DATA_TYPE)-0.0054850780307070211);
    builder.addLeafNode(treeId, nodeIds[31], 1, (DAAL_DATA_TYPE)0.012666054652072489);
    builder.addLeafNode(treeId, nodeIds[4], 1, (DAAL_DATA_TYPE)0.0086403167953616692);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)-0.0064526232933747544);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[2], 1, 6, (DAAL_DATA_TYPE)-1.0984999999999998);
    nodeIds[39] = builder.addSplitNode(treeId, nodeIds[38], 0, 19, (DAAL_DATA_TYPE)0.059500000000000004);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[39], 0, 18, (DAAL_DATA_TYPE)0.037500000000000006);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 24, (DAAL_DATA_TYPE)1.2955000000000003);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.00062969614719887354);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.013414189656232967);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 5, (DAAL_DATA_TYPE)1.3665000000000003);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.0085527305914597073);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.0082319798073731375);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[39], 1, 21, (DAAL_DATA_TYPE)1.0575000000000003);
    builder.addLeafNode(treeId, nodeIds[47], 0, (DAAL_DATA_TYPE)0.0048858975625872747);
    builder.addLeafNode(treeId, nodeIds[47], 1, (DAAL_DATA_TYPE)-0.0027582028029220444);
    builder.addLeafNode(treeId, nodeIds[38], 1, (DAAL_DATA_TYPE)-0.00036243610838214185);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[1], 1, 6, (DAAL_DATA_TYPE)0.45050000000000007);
    nodeIds[52] = builder.addSplitNode(treeId, nodeIds[51], 0, 16, (DAAL_DATA_TYPE)1.0000000180025095e-35);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[52], 0, 10, (DAAL_DATA_TYPE)0.24250000000000002);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.012951240749763591);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)0.0013084814121777362);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[52], 1, 6, (DAAL_DATA_TYPE)-0.44449999999999995);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.0047691693772440374);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.0051757687292993074);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[51], 1, 22, (DAAL_DATA_TYPE)0.9405);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)-0.0074204656083814123);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)0.0045225826574972379);

}

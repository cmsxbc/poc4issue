 /*
This file is auto generated by compile_lightgbm_model,
DO NOT MODIFY IT.
*/

#include <daal.h>
using namespace daal::algorithms::gbt::regression;
void buildTree27(ModelBuilder &builder, ModelBuilder::NodeId nodeIds[]) {
    ModelBuilder::TreeId treeId;
    treeId = builder.createTree(61);
    nodeIds[1] = builder.addSplitNode(treeId, nodeIds[0], 0, 27, (DAAL_DATA_TYPE)0.90650000000000019);
    nodeIds[2] = builder.addSplitNode(treeId, nodeIds[1], 0, 26, (DAAL_DATA_TYPE)0.85650000000000015);
    nodeIds[3] = builder.addSplitNode(treeId, nodeIds[2], 0, 9, (DAAL_DATA_TYPE)1.1555000000000002);
    nodeIds[4] = builder.addSplitNode(treeId, nodeIds[3], 0, 0, (DAAL_DATA_TYPE)0.52550000000000019);
    nodeIds[5] = builder.addSplitNode(treeId, nodeIds[4], 0, 3, (DAAL_DATA_TYPE)0.46750000000000008);
    builder.addLeafNode(treeId, nodeIds[5], 0, (DAAL_DATA_TYPE)0.0083595884903784733);
    nodeIds[7] = builder.addSplitNode(treeId, nodeIds[5], 1, 13, (DAAL_DATA_TYPE)0.54250000000000009);
    builder.addLeafNode(treeId, nodeIds[7], 0, (DAAL_DATA_TYPE)0.0050190017691680369);
    builder.addLeafNode(treeId, nodeIds[7], 1, (DAAL_DATA_TYPE)-0.010407975380276812);
    nodeIds[10] = builder.addSplitNode(treeId, nodeIds[4], 1, 27, (DAAL_DATA_TYPE)0.77250000000000008);
    nodeIds[11] = builder.addSplitNode(treeId, nodeIds[10], 0, 11, (DAAL_DATA_TYPE)-1.2834999999999999);
    builder.addLeafNode(treeId, nodeIds[11], 0, (DAAL_DATA_TYPE)-0.0058396419545389579);
    nodeIds[13] = builder.addSplitNode(treeId, nodeIds[11], 1, 0, (DAAL_DATA_TYPE)0.59850000000000014);
    builder.addLeafNode(treeId, nodeIds[13], 0, (DAAL_DATA_TYPE)0.009416692522731987);
    builder.addLeafNode(treeId, nodeIds[13], 1, (DAAL_DATA_TYPE)0.00082333660684525973);
    nodeIds[16] = builder.addSplitNode(treeId, nodeIds[10], 1, 21, (DAAL_DATA_TYPE)0.93450000000000022);
    nodeIds[17] = builder.addSplitNode(treeId, nodeIds[16], 0, 17, (DAAL_DATA_TYPE)1.4100000000000004);
    builder.addLeafNode(treeId, nodeIds[17], 0, (DAAL_DATA_TYPE)-0.010668580582041941);
    builder.addLeafNode(treeId, nodeIds[17], 1, (DAAL_DATA_TYPE)0.0058993391416690966);
    builder.addLeafNode(treeId, nodeIds[16], 1, (DAAL_DATA_TYPE)0.0024969185573783352);
    builder.addLeafNode(treeId, nodeIds[3], 1, (DAAL_DATA_TYPE)0.006029501486590455);
    nodeIds[22] = builder.addSplitNode(treeId, nodeIds[2], 1, 25, (DAAL_DATA_TYPE)1.0895000000000004);
    nodeIds[23] = builder.addSplitNode(treeId, nodeIds[22], 0, 25, (DAAL_DATA_TYPE)0.68650000000000022);
    builder.addLeafNode(treeId, nodeIds[23], 0, (DAAL_DATA_TYPE)0.00029730214909822855);
    builder.addLeafNode(treeId, nodeIds[23], 1, (DAAL_DATA_TYPE)0.0065668254058733819);
    nodeIds[26] = builder.addSplitNode(treeId, nodeIds[22], 1, 6, (DAAL_DATA_TYPE)1.2175000000000002);
    nodeIds[27] = builder.addSplitNode(treeId, nodeIds[26], 0, 22, (DAAL_DATA_TYPE)0.94650000000000001);
    nodeIds[28] = builder.addSplitNode(treeId, nodeIds[27], 0, 22, (DAAL_DATA_TYPE)0.77550000000000019);
    builder.addLeafNode(treeId, nodeIds[28], 0, (DAAL_DATA_TYPE)0.0084070740984036382);
    nodeIds[30] = builder.addSplitNode(treeId, nodeIds[28], 1, 6, (DAAL_DATA_TYPE)0.75350000000000017);
    builder.addLeafNode(treeId, nodeIds[30], 0, (DAAL_DATA_TYPE)-0.0086857011570380289);
    builder.addLeafNode(treeId, nodeIds[30], 1, (DAAL_DATA_TYPE)0.0089050147682428367);
    nodeIds[33] = builder.addSplitNode(treeId, nodeIds[27], 1, 3, (DAAL_DATA_TYPE)0.37150000000000005);
    builder.addLeafNode(treeId, nodeIds[33], 0, (DAAL_DATA_TYPE)0.015448327710231144);
    builder.addLeafNode(treeId, nodeIds[33], 1, (DAAL_DATA_TYPE)0.0014759926497936249);
    builder.addLeafNode(treeId, nodeIds[26], 1, (DAAL_DATA_TYPE)-0.014654019254225274);
    nodeIds[37] = builder.addSplitNode(treeId, nodeIds[1], 1, 24, (DAAL_DATA_TYPE)1.0105000000000002);
    nodeIds[38] = builder.addSplitNode(treeId, nodeIds[37], 0, 22, (DAAL_DATA_TYPE)1.0675000000000001);
    builder.addLeafNode(treeId, nodeIds[38], 0, (DAAL_DATA_TYPE)-0.0079202351722923031);
    nodeIds[40] = builder.addSplitNode(treeId, nodeIds[38], 1, 24, (DAAL_DATA_TYPE)0.79950000000000021);
    nodeIds[41] = builder.addSplitNode(treeId, nodeIds[40], 0, 13, (DAAL_DATA_TYPE)1.4705000000000001);
    builder.addLeafNode(treeId, nodeIds[41], 0, (DAAL_DATA_TYPE)0.0018255255495508512);
    builder.addLeafNode(treeId, nodeIds[41], 1, (DAAL_DATA_TYPE)0.015926938038319349);
    nodeIds[44] = builder.addSplitNode(treeId, nodeIds[40], 1, 11, (DAAL_DATA_TYPE)-0.057499999999999996);
    builder.addLeafNode(treeId, nodeIds[44], 0, (DAAL_DATA_TYPE)-0.0079415421321320893);
    builder.addLeafNode(treeId, nodeIds[44], 1, (DAAL_DATA_TYPE)0.00031593323070952235);
    nodeIds[47] = builder.addSplitNode(treeId, nodeIds[37], 1, 3, (DAAL_DATA_TYPE)1.7675000000000003);
    nodeIds[48] = builder.addSplitNode(treeId, nodeIds[47], 0, 5, (DAAL_DATA_TYPE)1.1275000000000002);
    builder.addLeafNode(treeId, nodeIds[48], 0, (DAAL_DATA_TYPE)-0.00086221627979761082);
    nodeIds[50] = builder.addSplitNode(treeId, nodeIds[48], 1, 25, (DAAL_DATA_TYPE)1.8525000000000003);
    nodeIds[51] = builder.addSplitNode(treeId, nodeIds[50], 0, 7, (DAAL_DATA_TYPE)-1.5494999999999999);
    builder.addLeafNode(treeId, nodeIds[51], 0, (DAAL_DATA_TYPE)-0.0067616040056402045);
    nodeIds[53] = builder.addSplitNode(treeId, nodeIds[51], 1, 0, (DAAL_DATA_TYPE)2.6370000000000005);
    builder.addLeafNode(treeId, nodeIds[53], 0, (DAAL_DATA_TYPE)0.0080689114296184205);
    builder.addLeafNode(treeId, nodeIds[53], 1, (DAAL_DATA_TYPE)-0.0082160140573978423);
    nodeIds[56] = builder.addSplitNode(treeId, nodeIds[50], 1, 17, (DAAL_DATA_TYPE)1.5415000000000003);
    builder.addLeafNode(treeId, nodeIds[56], 0, (DAAL_DATA_TYPE)-0.0078852883778339211);
    builder.addLeafNode(treeId, nodeIds[56], 1, (DAAL_DATA_TYPE)0.01368719327908296);
    nodeIds[59] = builder.addSplitNode(treeId, nodeIds[47], 1, 11, (DAAL_DATA_TYPE)-0.78449999999999986);
    builder.addLeafNode(treeId, nodeIds[59], 0, (DAAL_DATA_TYPE)0.0034358640954102559);
    builder.addLeafNode(treeId, nodeIds[59], 1, (DAAL_DATA_TYPE)-0.0087674739948484341);

}
